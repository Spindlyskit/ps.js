/*! dustjs-linkedin - v2.7.5
* http://dustjs.com/
* Copyright (c) 2016 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define("dust.core",[],b):"object"==typeof exports?module.exports=b():a.dust=b()}(this,function(){function getTemplate(a,b){return a?"function"==typeof a&&a.template?a.template:dust.isTemplateFn(a)?a:b!==!1?dust.cache[a]:void 0:void 0}function load(a,b,c){if(!a)return b.setError(new Error("No template or template name provided to render"));var d=getTemplate(a,dust.config.cache);return d?d(b,Context.wrap(c,d.templateName)):dust.onLoad?b.map(function(b){function d(a,d){var f;if(a)return b.setError(a);if(f=getTemplate(d,!1)||getTemplate(e,dust.config.cache),!f){if(!dust.compile)return b.setError(new Error("Dust compiler not available"));f=dust.loadSource(dust.compile(d,e))}f(b,Context.wrap(c,f.templateName)).end()}var e=a;3===dust.onLoad.length?dust.onLoad(e,c.options,d):dust.onLoad(e,d)}):b.setError(new Error("Template Not Found: "+a))}function Context(a,b,c,d,e){void 0===a||a instanceof Stack||(a=new Stack(a)),this.stack=a,this.global=b,this.options=c,this.blocks=d,this.templateName=e,this._isContext=!0}function getWithResolvedData(a,b,c){return function(d){return a.push(d)._get(b,c)}}function Stack(a,b,c,d){this.tail=b,this.isObject=a&&"object"==typeof a,this.head=a,this.index=c,this.of=d}function Stub(a){this.head=new Chunk(this),this.callback=a,this.out=""}function Stream(){this.head=new Chunk(this)}function Chunk(a,b,c){this.root=a,this.next=b,this.data=[],this.flushable=!1,this.taps=c}function Tap(a,b){this.head=a,this.tail=b}var dust={version:"2.7.5"},NONE="NONE",ERROR="ERROR",WARN="WARN",INFO="INFO",DEBUG="DEBUG",EMPTY_FUNC=function(){};dust.config={whitespace:!1,amd:!1,cjs:!1,cache:!0},dust._aliases={write:"w",end:"e",map:"m",render:"r",reference:"f",section:"s",exists:"x",notexists:"nx",block:"b",partial:"p",helper:"h"},function(){var a,b,c={DEBUG:0,INFO:1,WARN:2,ERROR:3,NONE:4};"undefined"!=typeof console&&console.log?(a=console.log,b="function"==typeof a?function(){a.apply(console,arguments)}:function(){a(Array.prototype.slice.apply(arguments).join(" "))}):b=EMPTY_FUNC,dust.log=function(a,d){d=d||INFO,c[d]>=c[dust.debugLevel]&&b("[DUST:"+d+"]",a)},dust.debugLevel=NONE,"undefined"!=typeof process&&process.env&&/\bdust\b/.test(process.env.DEBUG)&&(dust.debugLevel=DEBUG)}(),dust.helpers={},dust.cache={},dust.register=function(a,b){a&&(b.templateName=a,dust.config.cache!==!1&&(dust.cache[a]=b))},dust.render=function(a,b,c){var d=new Stub(c).head;try{load(a,d,b).end()}catch(e){d.setError(e)}},dust.stream=function(a,b){var c=new Stream,d=c.head;return dust.nextTick(function(){try{load(a,d,b).end()}catch(c){d.setError(c)}}),c},dust.loadSource=function(source){return eval(source)},dust.isArray=Array.isArray?Array.isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)},dust.nextTick=function(){return function(a){setTimeout(a,0)}}(),dust.isEmpty=function(a){return 0===a?!1:dust.isArray(a)&&!a.length?!0:!a},dust.isEmptyObject=function(a){var b;if(null===a)return!1;if(void 0===a)return!1;if(a.length>0)return!1;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b))return!1;return!0},dust.isTemplateFn=function(a){return"function"==typeof a&&a.__dustBody},dust.isThenable=function(a){return a&&"object"==typeof a&&"function"==typeof a.then},dust.isStreamable=function(a){return a&&"function"==typeof a.on&&"function"==typeof a.pipe},dust.filter=function(a,b,c,d){var e,f,g,h;if(c)for(e=0,f=c.length;f>e;e++)g=c[e],g.length&&(h=dust.filters[g],"s"===g?b=null:"function"==typeof h?a=h(a,d):dust.log("Invalid filter `"+g+"`",WARN));return b&&(a=dust.filters[b](a,d)),a},dust.filters={h:function(a){return dust.escapeHtml(a)},j:function(a){return dust.escapeJs(a)},u:encodeURI,uc:encodeURIComponent,js:function(a){return dust.escapeJSON(a)},jp:function(a){return JSON?JSON.parse(a):(dust.log("JSON is undefined; could not parse `"+a+"`",WARN),a)}},dust.makeBase=dust.context=function(a,b){return new Context(void 0,a,b)},dust.isContext=function(a){return"object"==typeof a&&a._isContext===!0},Context.wrap=function(a,b){return dust.isContext(a)?a:new Context(a,{},{},null,b)},Context.prototype.get=function(a,b){return"string"==typeof a&&("."===a[0]&&(b=!0,a=a.substr(1)),a=a.split(".")),this._get(b,a)},Context.prototype._get=function(a,b){var c,d,e,f,g,h=this.stack||{},i=1;if(d=b[0],e=b.length,a&&0===e)f=h,h=h.head;else{if(a)h&&(h=h.head?h.head[d]:void 0);else{for(;h&&(!h.isObject||(f=h.head,c=h.head[d],void 0===c));)h=h.tail;h=void 0!==c?c:this.global&&this.global[d]}for(;h&&e>i;){if(dust.isThenable(h))return h.then(getWithResolvedData(this,a,b.slice(i)));f=h,h=h[b[i]],i++}}return"function"==typeof h?(g=function(){try{return h.apply(f,arguments)}catch(a){throw dust.log(a,ERROR),a}},g.__dustBody=!!h.__dustBody,g):(void 0===h&&dust.log("Cannot find reference `{"+b.join(".")+"}` in template `"+this.getTemplateName()+"`",INFO),h)},Context.prototype.getPath=function(a,b){return this._get(a,b)},Context.prototype.push=function(a,b,c){return void 0===a?(dust.log("Not pushing an undefined variable onto the context",INFO),this):this.rebase(new Stack(a,this.stack,b,c))},Context.prototype.pop=function(){var a=this.current();return this.stack=this.stack&&this.stack.tail,a},Context.prototype.rebase=function(a){return new Context(a,this.global,this.options,this.blocks,this.getTemplateName())},Context.prototype.clone=function(){var a=this.rebase();return a.stack=this.stack,a},Context.prototype.current=function(){return this.stack&&this.stack.head},Context.prototype.getBlock=function(a){var b,c,d;if("function"==typeof a&&(a=a(new Chunk,this).data.join("")),b=this.blocks,!b)return dust.log("No blocks for context `"+a+"` in template `"+this.getTemplateName()+"`",DEBUG),!1;for(c=b.length;c--;)if(d=b[c][a])return d;return dust.log("Malformed template `"+this.getTemplateName()+"` was missing one or more blocks."),!1},Context.prototype.shiftBlocks=function(a){var b,c=this.blocks;return a?(b=c?c.concat([a]):[a],new Context(this.stack,this.global,this.options,b,this.getTemplateName())):this},Context.prototype.resolve=function(a){var b;return"function"!=typeof a?a:(b=(new Chunk).render(a,this),b instanceof Chunk?b.data.join(""):b)},Context.prototype.getTemplateName=function(){return this.templateName},Stub.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.callback(a.error),dust.log("Rendering failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.out+=a.data.join(""),a=a.next,this.head=a}this.callback(null,this.out)},Stream.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.emit("error",a.error),this.emit("end"),dust.log("Streaming failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.emit("data",a.data.join("")),a=a.next,this.head=a}this.emit("end")},Stream.prototype.emit=function(a,b){var c,d,e=this.events||{},f=e[a]||[];if(!f.length)return dust.log("Stream broadcasting, but no listeners for `"+a+"`",DEBUG),!1;for(f=f.slice(0),c=0,d=f.length;d>c;c++)f[c](b);return!0},Stream.prototype.on=function(a,b){var c=this.events=this.events||{},d=c[a]=c[a]||[];return"function"!=typeof b?dust.log("No callback function provided for `"+a+"` event listener",WARN):d.push(b),this},Stream.prototype.pipe=function(a){if("function"!=typeof a.write||"function"!=typeof a.end)return dust.log("Incompatible stream passed to `pipe`",WARN),this;var b=!1;return"function"==typeof a.emit&&a.emit("pipe",this),"function"==typeof a.on&&a.on("error",function(){b=!0}),this.on("data",function(c){if(!b)try{a.write(c,"utf8")}catch(d){dust.log(d,ERROR)}}).on("end",function(){if(!b)try{a.end(),b=!0}catch(c){dust.log(c,ERROR)}})},Chunk.prototype.write=function(a){var b=this.taps;return b&&(a=b.go(a)),this.data.push(a),this},Chunk.prototype.end=function(a){return a&&this.write(a),this.flushable=!0,this.root.flush(),this},Chunk.prototype.map=function(a){var b=new Chunk(this.root,this.next,this.taps),c=new Chunk(this.root,b,this.taps);this.next=c,this.flushable=!0;try{a(c)}catch(d){dust.log(d,ERROR),c.setError(d)}return b},Chunk.prototype.tap=function(a){var b=this.taps;return this.taps=b?b.push(a):new Tap(a),this},Chunk.prototype.untap=function(){return this.taps=this.taps.tail,this},Chunk.prototype.render=function(a,b){return a(this,b)},Chunk.prototype.reference=function(a,b,c,d){return"function"==typeof a?(a=a.apply(b.current(),[this,b,null,{auto:c,filters:d}]),a instanceof Chunk?a:this.reference(a,b,c,d)):dust.isThenable(a)?this.await(a,b,null,c,d):dust.isStreamable(a)?this.stream(a,b,null,c,d):dust.isEmpty(a)?this:this.write(dust.filter(a,c,d,b))},Chunk.prototype.section=function(a,b,c,d){var e,f,g,h=c.block,i=c["else"],j=this;if("function"==typeof a&&!dust.isTemplateFn(a)){try{a=a.apply(b.current(),[this,b,c,d])}catch(k){return dust.log(k,ERROR),this.setError(k)}if(a instanceof Chunk)return a}if(dust.isEmptyObject(c))return j;if(dust.isEmptyObject(d)||(b=b.push(d)),dust.isArray(a)){if(h){if(f=a.length,f>0){for(g=b.stack&&b.stack.head||{},g.$len=f,e=0;f>e;e++)g.$idx=e,j=h(j,b.push(a[e],e,f));return g.$idx=void 0,g.$len=void 0,j}if(i)return i(this,b)}}else{if(dust.isThenable(a))return this.await(a,b,c);if(dust.isStreamable(a))return this.stream(a,b,c);if(a===!0){if(h)return h(this,b)}else if(a||0===a){if(h)return h(this,b.push(a))}else if(i)return i(this,b)}return dust.log("Section without corresponding key in template `"+b.getTemplateName()+"`",DEBUG),this},Chunk.prototype.exists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(e)return e(this,b)}else{if(d)return d(this,b);dust.log("No block for exists check in template `"+b.getTemplateName()+"`",DEBUG)}return this},Chunk.prototype.notexists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(d)return d(this,b);dust.log("No block for not-exists check in template `"+b.getTemplateName()+"`",DEBUG)}else if(e)return e(this,b);return this},Chunk.prototype.block=function(a,b,c){var d=a||c.block;return d?d(this,b):this},Chunk.prototype.partial=function(a,b,c,d){var e;return void 0===d&&(d=c,c=b),dust.isEmptyObject(d)||(c=c.clone(),e=c.pop(),c=c.push(d).push(e)),dust.isTemplateFn(a)?this.capture(a,b,function(a,b){c.templateName=a,load(a,b,c).end()}):(c.templateName=a,load(a,this,c))},Chunk.prototype.helper=function(a,b,c,d,e){var f,g=this,h=d.filters;if(void 0===e&&(e="h"),!dust.helpers[a])return dust.log("Helper `"+a+"` does not exist",WARN),g;try{return f=dust.helpers[a](g,b,c,d),f instanceof Chunk?f:("string"==typeof h&&(h=h.split("|")),dust.isEmptyObject(c)?g.reference(f,b,e,h):g.section(f,b,c,d))}catch(i){return dust.log("Error in helper `"+a+"`: "+i.message,ERROR),g.setError(i)}},Chunk.prototype.await=function(a,b,c,d,e){return this.map(function(f){a.then(function(a){f=c?f.section(a,b,c):f.reference(a,b,d,e),f.end()},function(a){var d=c&&c.error;d?f.render(d,b.push(a)).end():(dust.log("Unhandled promise rejection in `"+b.getTemplateName()+"`",INFO),f.end())})})},Chunk.prototype.stream=function(a,b,c,d,e){var f=c&&c.block,g=c&&c.error;return this.map(function(h){var i=!1;a.on("data",function(a){i||(f?h=h.map(function(c){c.render(f,b.push(a)).end()}):c||(h=h.reference(a,b,d,e)))}).on("error",function(a){i||(g?h.render(g,b.push(a)):dust.log("Unhandled stream error in `"+b.getTemplateName()+"`",INFO),i||(i=!0,h.end()))}).on("end",function(){i||(i=!0,h.end())})})},Chunk.prototype.capture=function(a,b,c){return this.map(function(d){var e=new Stub(function(a,b){a?d.setError(a):c(b,d)});a(e.head,b).end()})},Chunk.prototype.setError=function(a){return this.error=a,this.root.flush(),this};for(var f in Chunk.prototype)dust._aliases[f]&&(Chunk.prototype[dust._aliases[f]]=Chunk.prototype[f]);Tap.prototype.push=function(a){return new Tap(a,this)},Tap.prototype.go=function(a){for(var b=this;b;)a=b.head(a),b=b.tail;return a};var HCHARS=/[&<>"']/,AMP=/&/g,LT=/</g,GT=/>/g,QUOT=/\"/g,SQUOT=/\'/g;dust.escapeHtml=function(a){return"string"==typeof a||a&&"function"==typeof a.toString?("string"!=typeof a&&(a=a.toString()),HCHARS.test(a)?a.replace(AMP,"&amp;").replace(LT,"&lt;").replace(GT,"&gt;").replace(QUOT,"&quot;").replace(SQUOT,"&#39;"):a):a};var BS=/\\/g,FS=/\//g,CR=/\r/g,LS=/\u2028/g,PS=/\u2029/g,NL=/\n/g,LF=/\f/g,SQ=/'/g,DQ=/"/g,TB=/\t/g;return dust.escapeJs=function(a){return"string"==typeof a?a.replace(BS,"\\\\").replace(FS,"\\/").replace(DQ,'\\"').replace(SQ,"\\'").replace(CR,"\\r").replace(LS,"\\u2028").replace(PS,"\\u2029").replace(NL,"\\n").replace(LF,"\\f").replace(TB,"\\t"):a},dust.escapeJSON=function(a){return JSON?JSON.stringify(a).replace(LS,"\\u2028").replace(PS,"\\u2029").replace(LT,"\\u003c"):(dust.log("JSON is undefined; could not escape `"+a+"`",WARN),a)},dust}),"function"==typeof define&&define.amd&&define.amd.dust===!0&&define(["require","dust.core"],function(require,dust){return dust.onLoad=function(a,b){require([a],function(){b()})},dust});
/*! dustjs-helpers - v1.7.4
* http://dustjs.com/
* Copyright (c) 2017 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define(["dust.core"],b):"object"==typeof exports?(module.exports=b(require("dustjs-linkedin")),module.exports.registerWith=b):b(a.dust)}(this,function(dust){function a(a,b,c){c=c||"INFO",a=a?"{@"+a+"}: ":"",dust.log(a+b,c)}function b(b){k[b]||(a(b,"Deprecation warning: "+b+" is deprecated and will be removed in a future version of dustjs-helpers","WARN"),a(null,"For help and a deprecation timeline, see https://github.com/linkedin/dustjs-helpers/wiki/Deprecated-Features#"+b.replace(/\W+/g,""),"WARN"),k[b]=!0)}function c(a){return a.stack.tail&&a.stack.tail.head&&"undefined"!=typeof a.stack.tail.head.__select__}function d(a){return c(a)&&a.get("__select__")}function e(a,b){var c,d=a.stack.head,e=a.rebase();a.stack&&a.stack.tail&&(e.stack=a.stack.tail);var f={isPending:!1,isResolved:!1,isDeferredComplete:!1,deferreds:[]};for(c in b)f[c]=b[c];return e.push({__select__:f}).push(d,a.stack.index,a.stack.of)}function f(a){var b,c;if(a.isDeferredPending=!0,a.deferreds.length)for(a.isDeferredComplete=!0,b=0,c=a.deferreds.length;c>b;b++)a.deferreds[b]();a.isDeferredPending=!1}function g(a,b){return"function"==typeof b?b.toString().replace(/(^\s+|\s+$)/gm,"").replace(/\n/gm,"").replace(/,\s*/gm,", ").replace(/\)\{/gm,") {"):b}function h(a,b){return function(c,d,e,f){return i(c,d,e,f,a,b)}}function i(b,c,e,f,g,h){var i,k,l,m,n=e.block,o=e["else"],p=d(c)||{};if(p.isResolved&&!p.isDeferredPending)return b;if(f.hasOwnProperty("key"))k=f.key;else{if(!p.hasOwnProperty("key"))return a(g,"No key specified","WARN"),b;k=p.key}return m=f.type||p.type,k=j(c.resolve(k),m),l=j(c.resolve(f.value),m),h(k,l)?(p.isPending||(i=!0,p.isPending=!0),n&&(b=b.render(n,c)),i&&(p.isResolved=!0)):o&&(b=b.render(o,c)),b}function j(a,b){switch(b&&(b=b.toLowerCase()),b){case"number":return+a;case"string":return String(a);case"boolean":return a="false"===a?!1:a,Boolean(a);case"date":return new Date(a)}return a}var k={},l={tap:function(a,c,d){return b("tap"),d.resolve(a)},sep:function(a,b,c){var d=c.block;return b.stack.index===b.stack.of-1?a:d?d(a,b):a},first:function(a,b,c){return 0===b.stack.index?c.block(a,b):a},last:function(a,b,c){return b.stack.index===b.stack.of-1?c.block(a,b):a},contextDump:function(b,c,d,e){var f,h,i=c.resolve(e.to),j=c.resolve(e.key);switch(j){case"full":f=c.stack;break;default:f=c.stack.head}switch(h=JSON.stringify(f,g,2),i){case"console":a("contextDump",h);break;default:h=h.replace(/</g,"\\u003c"),b=b.write(h)}return b},math:function(b,c,g,h){var i,j=h.key,k=h.method,l=h.operand,m=h.round;if(!h.hasOwnProperty("key")||!h.method)return a("math","`key` or `method` was not provided","ERROR"),b;switch(j=parseFloat(c.resolve(j)),l=parseFloat(c.resolve(l)),k){case"mod":0===l&&a("math","Division by 0","ERROR"),i=j%l;break;case"add":i=j+l;break;case"subtract":i=j-l;break;case"multiply":i=j*l;break;case"divide":0===l&&a("math","Division by 0","ERROR"),i=j/l;break;case"ceil":case"floor":case"round":case"abs":i=Math[k](j);break;case"toint":i=parseInt(j,10);break;default:a("math","Method `"+k+"` is not supported","ERROR")}return"undefined"!=typeof i&&(m&&(i=Math.round(i)),g&&g.block?(c=e(c,{key:i}),b=b.render(g.block,c),f(d(c))):b=b.write(i)),b},select:function(b,c,g,h){var i=g.block,j={};return h.hasOwnProperty("key")&&(j.key=c.resolve(h.key)),h.hasOwnProperty("type")&&(j.type=h.type),i?(c=e(c,j),b=b.render(i,c),f(d(c))):a("select","Missing body block","WARN"),b},eq:h("eq",function(a,b){return a===b}),ne:h("ne",function(a,b){return a!==b}),lt:h("lt",function(a,b){return b>a}),lte:h("lte",function(a,b){return b>=a}),gt:h("gt",function(a,b){return a>b}),gte:h("gte",function(a,b){return a>=b}),any:function(b,c,e){var f=d(c);return f?f.isDeferredComplete?a("any","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){f.deferreds.push(function(){f.isResolved&&(a=a.render(e.block,c)),a.end()})}):a("any","Must be used inside a {@select} block","ERROR"),b},none:function(b,c,e){var f=d(c);return f?f.isDeferredComplete?a("none","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){f.deferreds.push(function(){f.isResolved||(a=a.render(e.block,c)),a.end()})}):a("none","Must be used inside a {@select} block","ERROR"),b},size:function(a,b,c,d){var e,f,g=d.key;if(g=b.resolve(d.key),g&&g!==!0)if(dust.isArray(g))e=g.length;else if(!isNaN(parseFloat(g))&&isFinite(g))e=g;else if("object"==typeof g){e=0;for(f in g)g.hasOwnProperty(f)&&e++}else e=(g+"").length;else e=0;return a.write(e)}};for(var m in l)dust.helpers[m]=l[m];return dust});
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.page=e()}(this,function(){"use strict";var p=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)},n=h,t=a,e=function(t){return o(a(t))},r=o,i=c,x=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(t){for(var e,n,r=[],i=0,o=0,a="";null!=(e=x.exec(t));){var s=e[0],c=e[1],h=e.index;if(a+=t.slice(o,h),o=h+s.length,c)a+=c[1];else{a&&(r.push(a),a="");var p=e[2],f=e[3],u=e[4],l=e[5],d=e[6],m=e[7],v="+"===d||"*"===d,g="?"===d||"*"===d,y=p||"/",w=u||l||(m?".*":"[^"+y+"]+?");r.push({name:f||i++,prefix:p||"",delimiter:y,optional:g,repeat:v,pattern:(n=w,n.replace(/([=!:$\/()])/g,"\\$1"))})}}return o<t.length&&(a+=t.substr(o)),a&&r.push(a),r}function o(c){for(var h=new Array(c.length),t=0;t<c.length;t++)"object"==typeof c[t]&&(h[t]=new RegExp("^"+c[t].pattern+"$"));return function(t){for(var e="",n=t||{},r=0;r<c.length;r++){var i=c[r];if("string"!=typeof i){var o,a=n[i.name];if(null==a){if(i.optional)continue;throw new TypeError('Expected "'+i.name+'" to be defined')}if(p(a)){if(!i.repeat)throw new TypeError('Expected "'+i.name+'" to not repeat, but received "'+a+'"');if(0===a.length){if(i.optional)continue;throw new TypeError('Expected "'+i.name+'" to not be empty')}for(var s=0;s<a.length;s++){if(o=encodeURIComponent(a[s]),!h[r].test(o))throw new TypeError('Expected all "'+i.name+'" to match "'+i.pattern+'", but received "'+o+'"');e+=(0===s?i.prefix:i.delimiter)+o}}else{if(o=encodeURIComponent(a),!h[r].test(o))throw new TypeError('Expected "'+i.name+'" to match "'+i.pattern+'", but received "'+o+'"');e+=i.prefix+o}}else e+=i}return e}}function f(t){return t.replace(/([.+*?=^!:${}()[\]|\/])/g,"\\$1")}function s(t,e){return t.keys=e,t}function u(t){return t.sensitive?"":"i"}function c(t,e){for(var n=(e=e||{}).strict,r=!1!==e.end,i="",o=t[t.length-1],a="string"==typeof o&&/\/$/.test(o),s=0;s<t.length;s++){var c=t[s];if("string"==typeof c)i+=f(c);else{var h=f(c.prefix),p=c.pattern;c.repeat&&(p+="(?:"+h+p+")*"),i+=p=c.optional?h?"(?:"+h+"("+p+"))?":"("+p+")?":h+"("+p+")"}}return n||(i=(a?i.slice(0,-2):i)+"(?:\\/(?=$))?"),i+=r?"$":n&&a?"":"(?=\\/|$)",new RegExp("^"+i,u(e))}function h(t,e,n){return p(e=e||[])?n||(n={}):(n=e,e=[]),t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return s(t,e)}(t,e):p(t)?function(t,e,n){for(var r=[],i=0;i<t.length;i++)r.push(h(t[i],e,n).source);return s(new RegExp("(?:"+r.join("|")+")",u(n)),e)}(t,e,n):function(t,e,n){for(var r=a(t),i=c(r,n),o=0;o<r.length;o++)"string"!=typeof r[o]&&e.push(r[o]);return s(i,e)}(t,e,n)}n.parse=t,n.compile=e,n.tokensToFunction=r,n.tokensToRegExp=i;var l=L;(L.default=L).Context=P,L.Route=S,L.sameOrigin=N;var d,m,v,g="undefined"!=typeof document,y="undefined"!=typeof window,w="undefined"!=typeof history,b="undefined"!=typeof process,E=g&&document.ontouchstart?"touchstart":"click",R=y&&!(!window.history.location&&!window.location),k=!0,A=!0,T="",O=!1,C=!1;function L(t,e){if("function"==typeof t)return L("*",t);if("function"==typeof e)for(var n=new S(t),r=1;r<arguments.length;++r)L.callbacks.push(n.middleware(arguments[r]));else"string"==typeof t?L["string"==typeof e?"redirect":"show"](t,e):L.start(t)}function U(t){return"string"!=typeof t?t:A?decodeURIComponent(t.replace(/\+/g," ")):t}function P(t,e){var n=I();"/"===t[0]&&0!==t.indexOf(n)&&(t=n+(C?"#!":"")+t);var r=t.indexOf("?");if(this.canonicalPath=t,this.path=t.replace(n,"")||"/",C&&(this.path=this.path.replace("#!","")||"/"),this.title=g&&v.document.title,this.state=e||{},this.state.path=t,this.querystring=~r?U(t.slice(r+1)):"",this.pathname=U(~r?t.slice(0,r):t),this.params={},this.hash="",!C){if(!~this.path.indexOf("#"))return;var i=this.path.split("#");this.path=this.pathname=i[0],this.hash=U(i[1])||"",this.querystring=this.querystring.split("#")[0]}}function S(t,e){(e=e||{}).strict=e.strict||O,this.path="*"===t?"(.*)":t,this.method="GET",this.regexp=n(this.path,this.keys=[],e)}L.callbacks=[],L.exits=[],L.current="",L.len=0,L.base=function(t){if(0===arguments.length)return T;T=t},L.strict=function(t){if(0===arguments.length)return O;O=t},L.start=function(t){if(t=t||{},!d&&(d=!0,v=t.window||y&&window,!1===t.dispatch&&(k=!1),!1===t.decodeURLComponents&&(A=!1),!1!==t.popstate&&y&&v.addEventListener("popstate",$,!1),!1!==t.click&&g&&v.document.addEventListener(E,j,!1),(C=!!t.hashbang)&&y&&!w&&v.addEventListener("hashchange",$,!1),k)){var e;if(R){var n=v.location;e=C&&~n.hash.indexOf("#!")?n.hash.substr(2)+n.search:C?n.search+n.hash:n.pathname+n.search+n.hash}L.replace(e,null,!0,k)}},L.stop=function(){d&&(L.current="",L.len=0,d=!1,g&&v.document.removeEventListener(E,j,!1),y&&v.removeEventListener("popstate",$,!1),y&&v.removeEventListener("hashchange",$,!1))},L.show=function(t,e,n,r){var i=new P(t,e),o=m;return L.current=(m=i).path,!1!==n&&L.dispatch(i,o),!1!==i.handled&&!1!==r&&i.pushState(),i},L.back=function(t,e){0<L.len?(w&&v.history.back(),L.len--):t?setTimeout(function(){L.show(t,e)}):setTimeout(function(){L.show(I(),e)})},L.redirect=function(t,e){"string"==typeof t&&"string"==typeof e&&L(t,function(t){setTimeout(function(){L.replace(e)},0)}),"string"==typeof t&&void 0===e&&setTimeout(function(){L.replace(t)},0)},L.replace=function(t,e,n,r){var i=new P(t,e),o=m;return L.current=(m=i).path,i.init=n,i.save(),!1!==r&&L.dispatch(i,o),i},L.dispatch=function(e,n){var r=0,i=0;function o(){var t=L.callbacks[r++];if(e.path===L.current)return t?void t(e,o):function(t){if(t.handled)return;var e;e=C?R&&I()+v.location.hash.replace("#!",""):R&&v.location.pathname+v.location.search;if(e===t.canonicalPath)return;L.stop(),t.handled=!1,R&&(v.location.href=t.canonicalPath)}(e);e.handled=!1}n?function t(){var e=L.exits[i++];if(!e)return o();e(n,t)}():o()},L.exit=function(t,e){if("function"==typeof t)return L.exit("*",t);for(var n=new S(t),r=1;r<arguments.length;++r)L.exits.push(n.middleware(arguments[r]))},(L.Context=P).prototype.pushState=function(){L.len++,w&&v.history.pushState(this.state,this.title,C&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},P.prototype.save=function(){w&&"file:"!==v.location.protocol&&v.history.replaceState(this.state,this.title,C&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},(L.Route=S).prototype.middleware=function(n){var r=this;return function(t,e){if(r.match(t.path,t.params))return n(t,e);e()}},S.prototype.match=function(t,e){var n=this.keys,r=t.indexOf("?"),i=~r?t.slice(0,r):t,o=this.regexp.exec(decodeURIComponent(i));if(!o)return!1;for(var a=1,s=o.length;a<s;++a){var c=n[a-1],h=U(o[a]);void 0===h&&hasOwnProperty.call(e,c.name)||(e[c.name]=h)}return!0};var $=function(){var r=!1;if(y)return g&&"complete"===document.readyState?r=!0:window.addEventListener("load",function(){setTimeout(function(){r=!0},0)}),function(t){if(r)if(t.state){var e=t.state.path;L.replace(e,t.state)}else if(R){var n=v.location;L.show(n.pathname+n.hash,void 0,void 0,!1)}}}();function j(t){var e;if(1===(null==(e=(e=t)||y&&window.event).which?e.button:e.which)&&!(t.metaKey||t.ctrlKey||t.shiftKey||t.defaultPrevented)){var n=t.target,r=t.path||(t.composedPath?t.composedPath():null);if(r)for(var i=0;i<r.length;i++)if(r[i].nodeName&&"A"===r[i].nodeName.toUpperCase()&&r[i].href){n=r[i];break}for(;n&&"A"!==n.nodeName.toUpperCase();)n=n.parentNode;if(n&&"A"===n.nodeName.toUpperCase()){var o="object"==typeof n.href&&"SVGAnimatedString"===n.href.constructor.name;if(!n.hasAttribute("download")&&"external"!==n.getAttribute("rel")){var a=n.getAttribute("href");if((C||!function(t){if(!R)return!1;var e=v.location;return t.pathname===e.pathname&&t.search===e.search}(n)||!n.hash&&"#"!==a)&&!(a&&-1<a.indexOf("mailto:"))&&(o?!n.target.baseVal:!n.target)&&(o||N(n.href))){var s=o?n.href.baseVal:n.pathname+n.search+(n.hash||"");s="/"!==s[0]?"/"+s:s,b&&s.match(/^\/[a-zA-Z]:\//)&&(s=s.replace(/^\/[a-zA-Z]:\//,"/"));var c=s,h=I();0===s.indexOf(h)&&(s=s.substr(T.length)),C&&(s=s.replace("#!","")),h&&c===s||(t.preventDefault(),L.show(c))}}}}}function N(t){if(!t||!R)return!1;var e=function(t){if("function"==typeof URL&&R)return new URL(t,location.toString());if(g){var e=document.createElement("a");return e.href=t,e}}(t),n=v.location;return n.protocol===e.protocol&&n.hostname===e.hostname&&n.port===e.port}function I(){if(T)return T;var t=y&&v&&v.location;return y&&C&&t&&"file:"===t.protocol?t.pathname:T}return L.sameOrigin=N,l});
/*!
 * EventEmitter v5.2.4 - git.io/ee
 * Unlicense - http://unlicense.org/
 * Oliver Caldwell - http://oli.me.uk/
 * @preserve
 */
!function(e){"use strict";function t(){}function n(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function r(e){return function(){return this[e].apply(this,arguments)}}function i(e){return"function"==typeof e||e instanceof RegExp||!(!e||"object"!=typeof e)&&i(e.listener)}var s=t.prototype,o=e.EventEmitter;s.getListeners=function(e){var t,n,r=this._getEvents();if(e instanceof RegExp){t={};for(n in r)r.hasOwnProperty(n)&&e.test(n)&&(t[n]=r[n])}else t=r[e]||(r[e]=[]);return t},s.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},s.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&(t={},t[e]=n),t||n},s.addListener=function(e,t){if(!i(t))throw new TypeError("listener must be a function");var r,s=this.getListenersAsObject(e),o="object"==typeof t;for(r in s)s.hasOwnProperty(r)&&n(s[r],t)===-1&&s[r].push(o?t:{listener:t,once:!1});return this},s.on=r("addListener"),s.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},s.once=r("addOnceListener"),s.defineEvent=function(e){return this.getListeners(e),this},s.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},s.removeListener=function(e,t){var r,i,s=this.getListenersAsObject(e);for(i in s)s.hasOwnProperty(i)&&(r=n(s[i],t),r!==-1&&s[i].splice(r,1));return this},s.off=r("removeListener"),s.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},s.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},s.manipulateListeners=function(e,t,n){var r,i,s=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=n.length;r--;)s.call(this,t,n[r]);else for(r in t)t.hasOwnProperty(r)&&(i=t[r])&&("function"==typeof i?s.call(this,r,i):o.call(this,r,i));return this},s.removeEvent=function(e){var t,n=typeof e,r=this._getEvents();if("string"===n)delete r[e];else if(e instanceof RegExp)for(t in r)r.hasOwnProperty(t)&&e.test(t)&&delete r[t];else delete this._events;return this},s.removeAllListeners=r("removeEvent"),s.emitEvent=function(e,t){var n,r,i,s,o,u=this.getListenersAsObject(e);for(s in u)if(u.hasOwnProperty(s))for(n=u[s].slice(0),i=0;i<n.length;i++)r=n[i],r.once===!0&&this.removeListener(e,r.listener),o=r.listener.apply(this,t||[]),o===this._getOnceReturnValue()&&this.removeListener(e,r.listener);return this},s.trigger=r("emitEvent"),s.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},s.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},s._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},s._getEvents=function(){return this._events||(this._events={})},t.noConflict=function(){return e.EventEmitter=o,t},"function"==typeof define&&define.amd?define(function(){return t}):"object"==typeof module&&module.exports?module.exports=t:e.EventEmitter=t}(this||{});
/* docma (dust) compiled templates */
(function(dust){dust.register("docma-404",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><br /><br /><h1>404</h1><hr /><h3>Page Not Found</h3><br />The file or page you have requested is not found. &nbsp;&nbsp;<br />Please make sure page address is entered correctly.<br /><br /><br /></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-api",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{}).w("<div id=\"wrapper\">").x(ctx.getPath(false, ["template","options","sidebar","enabled"]),ctx,{"block":body_1},{}).w("<div id=\"page-content-wrapper\"><div class=\"container\"><br />").s(ctx.get(["documentation"], false),ctx,{"block":body_2},{}).w("<br /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://onury.io/docma\">Docma</a></b>.</span></div></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div id=\"sidebar-wrapper\">").p("sidebar",ctx,ctx,{}).w("</div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-content",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class='").h("eq",ctx,{"block":body_1},{"key":ctx.getPath(false, ["currentRoute","sourceType"]),"value":"md"},"h").w("'><div id=\"docma-content\"></div>").h("eq",ctx,{"block":body_2},{"key":ctx.getPath(false, ["currentRoute","sourceType"]),"value":"md"},"h").w("</div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("container container-boxed");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<br /><hr /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://onury.io/docma\">Docma</a></b>.</span>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("enums",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["$members"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_4},{"key":ctx.getPath(false, ["template","options","symbols","enums"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Enumeration</div><ul class=\"param-list\">").s(ctx.get(["$members"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span><span class=\"param-info-box\"><span class=\"param-info value\">Value:&nbsp;</span><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></span></div><div class=\"param-desc\">").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Enumeration</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["$members"], false),ctx,{"block":body_5},{}).w("</tbody></table>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</td></tr>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navbar",body_0);function body_0(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar","enabled"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<nav class=\"navbar ").x(ctx.getPath(false, ["template","options","navbar","dark"]),ctx,{"block":body_2},{}).w("\"><div class=\"navbar-inner ").x(ctx.get(["boxed"], false),ctx,{"block":body_3},{}).w("\"><div class=\"navbar-brand\">").x(ctx.getPath(false, ["template","options","logo","dark"]),ctx,{"block":body_4},{}).w("<span class=\"navbar-title\"><a href=\"").f(ctx.getPath(false, ["template","options","title","href"]),ctx,"h").w("\">").f(ctx.getPath(false, ["template","options","title","label"]),ctx,"h").w("</a></span></div>").h("gt",ctx,{"block":body_7},{"key":ctx.getPath(false, ["template","options","navbar","menu","length"]),"value":0},"h").w("</div></nav>").x(ctx.getPath(false, ["template","options","navbar","fixed"]),ctx,{"block":body_16},{}).w("<div class=\"nav-overlay\"></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("dark");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("container container-boxed");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar","dark"]),ctx,{"else":body_5,"block":body_6},{});}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","dark"]),ctx,"h").w("\" alt=\"logo\" class=\"navbar-logo\" />");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","light"]),ctx,"h").w("\" alt=\"logo\" class=\"navbar-logo\" />");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<div class=\"navbar-menu-btn\" tabindex=\"0\"><i class=\"fas fa-lg fa-bars trans-all-ease\"></i><i class=\"fas fa-md fa-times trans-all-ease\"></i></div><div class=\"navbar-menu\"><ul class=\"navbar-list\">").s(ctx.getPath(false, ["template","options","navbar","menu"]),ctx,{"block":body_8},{}).w("</ul></div>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.x(ctx.get(["items"], false),ctx,{"else":body_9,"block":body_10},{});}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("<li class=\"dropdown\"><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_11,"block":body_12},{}).w("\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"nav-icon ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>").x(ctx.get(["label"], false),ctx,{"block":body_13},{}).x(ctx.get(["chevron"], false),ctx,{"block":body_14},{}).w("</a><ul>").s(ctx.get(["items"], false),ctx,{"block":body_15},{}).w("</ul></li>");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("#");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("<span class=\"nav-label\">").f(ctx.get(["label"], false),ctx,"h").w("</span>");}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.w("<i class=\"nav-arrow fas fa-sm fa-angle-down\"></i>");}body_14.__dustBody=!0;function body_15(chk,ctx){return chk.w(" ").p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{}).w(" ");}body_15.__dustBody=!0;function body_16(chk,ctx){return chk.w("<div class=\"nav-spacer\"></div>");}body_16.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navitem",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["separator"], false),ctx,{"else":body_1,"block":body_6},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<li><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_2,"block":body_3},{}).w("\" target=\"").f(ctx.get(["target"], false),ctx,"h").w("\">").x(ctx.get(["iconClass"], false),ctx,{"block":body_4},{}).x(ctx.get(["label"], false),ctx,{"block":body_5},{}).w("</a></li>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("#");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"nav-icon ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<span class=\"nav-label\">").f(ctx.get(["label"], false),ctx,"h",["s"]).w("</span>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<li role=\"separator\" class=\"divider\"></li>");}body_6.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("params",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["params"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_8},{"key":ctx.getPath(false, ["template","options","symbols","params"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Parameters</div><ul class=\"param-list\">").s(ctx.get(["params"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").x(ctx.get(["variable"], false),ctx,{"block":body_4},{}).f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").x(ctx.get(["variable"], false),ctx,{"block":body_5},{}).f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span><span class=\"param-info-box\">").x(ctx.get(["optional"], false),ctx,{"else":body_6,"block":body_7},{}).w("</span></div><div class=\"param-desc\">").f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("...");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("...");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<span class=\"param-info required boxed\">Required</span>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<span class=\"param-info default\">Default:&nbsp;</span><code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["params"], false),ctx,{"block":body_9},{}).w("</tbody></table>");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.w("<tr><td><code>").x(ctx.get(["variable"], false),ctx,{"block":body_10},{}).f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").x(ctx.get(["variable"], false),ctx,{"block":body_11},{}).f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td>").x(ctx.get(["optional"], false),ctx,{"else":body_12,"block":body_13},{}).f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</td></tr>");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("...");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("...");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("<span class=\"param-info required boxed\">Required</span>");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("<span class=\"param-info default boxed\">Default</span><span class=\"color-gray\">:</span><code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_13.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("properties",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["properties"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_4},{"key":ctx.getPath(false, ["template","options","symbols","props"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Properties</div><ul class=\"param-list\">").s(ctx.get(["properties"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span></div><div class=\"param-desc\">").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["properties"], false),ctx,{"block":body_5},{}).w("</tbody></table>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td>").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</td></tr>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("sidebar",body_0);function body_0(chk,ctx){return chk.w("<div class=\"sidebar-header\"><div id=\"sidebar-toggle\"><i class=\"fas fa-lg fa-bars trans-all-ease\"></i></div><div class=\"sidebar-brand\">").x(ctx.getPath(false, ["template","options","logo","light"]),ctx,{"block":body_1},{}).w("<span class=\"sidebar-title\"><a href=\"").f(ctx.getPath(false, ["template","options","title","href"]),ctx,"h").w("\">").f(ctx.getPath(false, ["template","options","title","label"]),ctx,"h").w("</a></span></div>").x(ctx.getPath(false, ["template","options","sidebar","search"]),ctx,{"block":body_2},{}).x(ctx.getPath(false, ["template","options","sidebar","toolbar"]),ctx,{"block":body_3},{}).w("</div><div class=\"sidebar-nav-container\"><ul class=\"sidebar-nav\">").f(ctx.get(["symbols"], false),ctx,"h",["s","$navnodes"]).w("</ul></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","light"]),ctx,"h").w("\" alt=\"logo\" class=\"sidebar-logo\" />");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"sidebar-search\"><div class=\"sidebar-search-icon\"><i class=\"fas fa-md fa-search\"></i></div><input id=\"txt-search\" type=\"search\" placeholder=\"Search...\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" /><div class=\"sidebar-search-clean\"><i class=\"fas fa-lg fa-times-circle\"></i></div></div>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<div class=\"sidebar-toolbar\"><div class=\"toolbar-scope-filters\"></div><div class=\"toolbar-kind-filters\"></div><div class=\"toolbar-buttons\"><span class=\"btn-switch-fold inline-block\" title=\"Fold Symbols\">").h("eq",ctx,{"else":body_4,"block":body_5},{"key":ctx.getPath(false, ["template","options","sidebar","itemsFolded"]),"type":"boolean","value":"true"},"h").w("</span><span class=\"btn-switch-outline inline-block space-left-xs\" title=\"Toggle Outline\">").h("eq",ctx,{"else":body_6,"block":body_7},{"key":ctx.getPath(false, ["template","options","sidebar","outline"]),"type":"string","value":"tree"},"h").w("</span></div></div>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"far fa-lg fa-caret-square-down\"></i>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<i class=\"far fa-lg fa-caret-square-right\"></i>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<i class=\"fas fa-lg fa-outdent\"></i>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<i class=\"fas fa-lg fa-indent\"></i>");}body_7.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("symbol",body_0);function body_0(chk,ctx){return chk.nx(ctx.getPath(false, ["symbol","$hide"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div id=\"").f(ctx.get(["symbol"], false),ctx,"h",["$id"]).w("\" class=\"symbol-container\"><div class=\"symbol-heading\"><div class=\"symbol\"><a href=\"#").f(ctx.get(["symbol"], false),ctx,"h",["$id"]).w("\"><i class=\"fas fa-link color-gray-light\" aria-hidden=\"true\"></i></a><code class=\"symbol-name\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$longname_params"]).w("</code><span class=\"symbol-sep\">").f(ctx.get(["symbol"], false),ctx,"h",["$type_sep"]).w("</span><code class=\"symbol-type\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$type"]).w("</code>").f(ctx.get(["symbol"], false),ctx,"h",["s","$tags"]).w("</div></div><div class=\"symbol-definition\"><div class=\"symbol-info\">").x(ctx.getPath(false, ["symbol","alias"]),ctx,{"block":body_2},{}).x(ctx.getPath(false, ["symbol","augments"]),ctx,{"block":body_4},{}).x(ctx.getPath(false, ["symbol","version"]),ctx,{"block":body_5},{}).x(ctx.getPath(false, ["symbol","since"]),ctx,{"block":body_6},{}).x(ctx.getPath(false, ["symbol","copyright"]),ctx,{"block":body_7},{}).x(ctx.getPath(false, ["symbol","author"]),ctx,{"block":body_8},{}).x(ctx.getPath(false, ["symbol","license"]),ctx,{"block":body_9},{}).w("</div>").f(ctx.get(["symbol"], false),ctx,"h",["s","$desc"]).x(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_10},{}).h("ne",ctx,{"block":body_15},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","fires"]),ctx,{"block":body_18},{}).x(ctx.getPath(false, ["symbol","returns"]),ctx,{"block":body_20},{}).x(ctx.getPath(false, ["symbol","generator"]),ctx,{"block":body_23},{}).x(ctx.getPath(false, ["symbol","exceptions"]),ctx,{"block":body_27},{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_30},{}).x(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_31},{}).x(ctx.getPath(false, ["template","options","symbols","meta"]),ctx,{"block":body_34},{}).w("</div></div><hr />").x(ctx.getPath(false, ["symbol","$constructor"]),ctx,{"block":body_38},{}).nx(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_40},{});}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.nx(ctx.get(["$constructor"], false),ctx,{"block":body_3},{});}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<p><b class=\"caption\">Alias:</b> <code>").f(ctx.getPath(false, ["symbol","alias"]),ctx,"h",["s","$dot_prop"]).w("</code></p>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<p><b class=\"caption\">Extends:</b> ").f(ctx.get(["symbol"], false),ctx,"h",["s","$extends"]).w("</p>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<p><b class=\"caption\">Version:</b>&nbsp;").f(ctx.getPath(false, ["symbol","version"]),ctx,"h",["s"]).w("</p>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<p><b class=\"caption\">Since:</b>&nbsp;").f(ctx.getPath(false, ["symbol","since"]),ctx,"h",["s"]).w("</p>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<p><b class=\"caption\">Copyright:</b>&nbsp;").f(ctx.getPath(false, ["symbol","copyright"]),ctx,"h",["s"]).w("</p>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<p><b class=\"caption\">Author:</b>&nbsp;").f(ctx.getPath(false, ["symbol","author"]),ctx,"h",["s","$author"]).w("</p>");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.w("<p><b class=\"caption\">License:</b>&nbsp;").f(ctx.getPath(false, ["symbol","license"]),ctx,"h",["s"]).w("</p>");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("<p class=\"no-margin\"><b>See</b>").h("gt",ctx,{"else":body_11,"block":body_13},{"key":ctx.getPath(false, ["symbol","see","length"]),"value":1},"h").w("</p>");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_12},{});}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]);}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("<ul>").s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_14},{}).w("</ul>");}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]).w("</li>");}body_14.__dustBody=!0;function body_15(chk,ctx){return chk.p("params",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ").x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_16,"block":body_17},{});}body_15.__dustBody=!0;function body_16(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ");}body_16.__dustBody=!0;function body_17(chk,ctx){return chk;}body_17.__dustBody=!0;function body_18(chk,ctx){return chk.h("gt",ctx,{"block":body_19},{"key":ctx.getPath(false, ["symbol","fires","length"]),"value":"0","type":"number"},"h");}body_18.__dustBody=!0;function body_19(chk,ctx){return chk.w("<p><b class=\"caption\">Emits:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$emits"]).w("</p>");}body_19.__dustBody=!0;function body_20(chk,ctx){return chk.h("gt",ctx,{"else":body_21,"block":body_22},{"key":ctx.getPath(false, ["symbol","returns","length"]),"value":"1","type":"number"},"h");}body_20.__dustBody=!0;function body_21(chk,ctx){return chk.w("<p><b class=\"caption\">Returns:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_21.__dustBody=!0;function body_22(chk,ctx){return chk.w("<b class=\"caption\">Returns:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_22.__dustBody=!0;function body_23(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","yields"]),ctx,{"block":body_24},{});}body_23.__dustBody=!0;function body_24(chk,ctx){return chk.h("gt",ctx,{"else":body_25,"block":body_26},{"key":ctx.getPath(false, ["symbol","yields","length"]),"value":"1","type":"number"},"h");}body_24.__dustBody=!0;function body_25(chk,ctx){return chk.w("<p><b class=\"caption\">Yields:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$yields"]).w("</p>");}body_25.__dustBody=!0;function body_26(chk,ctx){return chk.w("<b class=\"caption\">Yields:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$yields"]).w("</p>");}body_26.__dustBody=!0;function body_27(chk,ctx){return chk.h("gt",ctx,{"else":body_28,"block":body_29},{"key":ctx.getPath(false, ["symbol","exceptions","length"]),"value":"1","type":"number"},"h");}body_27.__dustBody=!0;function body_28(chk,ctx){return chk.w("<p><b class=\"caption\">Throws:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_28.__dustBody=!0;function body_29(chk,ctx){return chk.w("<b class=\"caption\">Throws:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_29.__dustBody=!0;function body_30(chk,ctx){return chk.p("enums",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ");}body_30.__dustBody=!0;function body_31(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_32},{});}body_31.__dustBody=!0;function body_32(chk,ctx){return chk.w("<p><b>Example").h("gt",ctx,{"block":body_33},{"key":ctx.getPath(false, ["symbol","examples","length"]),"value":1},"h").w("</b>").f(ctx.getPath(true, []),ctx,"h",["$get_caption","s"]).w("</p><pre><code>").f(ctx.getPath(true, []),ctx,"h",["$nt","$tnl","$remove_caption"]).w("</code></pre>");}body_32.__dustBody=!0;function body_33(chk,ctx){return chk.w("&nbsp;#").h("math",ctx,{},{"key":ctx.get(["$idx"], false),"method":"add","operand":"1"},"h");}body_33.__dustBody=!0;function body_34(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_35},{});}body_34.__dustBody=!0;function body_35(chk,ctx){return chk.w("<p class=\"symbol-meta\">").x(ctx.getPath(false, ["symbol","meta","filename"]),ctx,{"block":body_36},{}).x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_37},{}).w("</p>");}body_35.__dustBody=!0;function body_36(chk,ctx){return chk.w("<b>File:</b> ").f(ctx.getPath(false, ["symbol","meta","filename"]),ctx,"h").w("&nbsp;&nbsp;");}body_36.__dustBody=!0;function body_37(chk,ctx){return chk.w("<b>Line:</b> ").f(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,"h").w("&nbsp;&nbsp;");}body_37.__dustBody=!0;function body_38(chk,ctx){return chk.h("ne",ctx,{"block":body_39},{"key":ctx.getPath(false, ["symbol","hideconstructor"]),"type":"boolean","value":"true"},"h");}body_38.__dustBody=!0;function body_39(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(false, ["symbol","$constructor"]),"template":ctx.get(["template"], false)});}body_39.__dustBody=!0;function body_40(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","$members"]),ctx,{"block":body_41},{});}body_40.__dustBody=!0;function body_41(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_41.__dustBody=!0;return body_0}(dust));
/*!
 * Docma (Web) Core
 * https://github.com/onury/docma
 * @license MIT
 */
var DocmaWeb = (function () {
'use strict';

var Utils={};function getStr(e){return"string"==typeof e?e.trim():""}function cleanName(e){return getStr(e).replace(/([^>]+>)?~?(.*)/,"$2").replace(/^(module\.)?exports\./,"").replace(/^module:/,"")}function getMetaCodeName(e){return cleanName(Utils.notate(e,"meta.code.name")||"")}function identity(e){return e}Utils.type=function(e){return Object.prototype.toString.call(e).match(/\s(\w+)/i)[1].toLowerCase()},Utils.notate=function(e,t){if("object"==typeof e){var n,r=Array.isArray(t)?t:t.split("."),i=r[0];if(i)return n=e[i],1<r.length?(r.shift(),Utils.notate(n,r)):n}},Utils.getName=function(e){if(e.alias){var t=getMetaCodeName(e);if(t)return t.replace(/.*?[#.~:](\w+)$/i,"$1")}return e.name},Utils.getLongName=function(e){var t=cleanName(e.longname),n=getMetaCodeName(e)||t,r=cleanName(e.memberof||"");if(e.name===r&&Utils.isConstructor(e))return n;var i=e.alias?n:t;if(!r)return i;var l=new RegExp("^"+r+"[#.~:]"),o="instance"===e.scope?"#":".";return l.test(i)?i:r+o+i},Utils.getFullName=Utils.getLongName,Utils.getCodeName=function(e){return getMetaCodeName(e)||Utils.getLongName(e)},Utils.getSymbolByName=function(e,t){var n,r,i,l;if("object"===Utils.type(e)){var o=Object.keys(e);for(n=0;n<o.length;n++)if(i=e[o[n]].documentation,l=Utils.getSymbolByName(i,t))return l;return null}for(i=e,n=0;n<i.length;n++){if((r=i[n]).name===t||r.longname===t||Utils.getFullName(r)===t)return r;if(r.$members&&(l=Utils.getSymbolByName(r.$members,t)))return l}return null},Utils.getLevels=function(e){var t=("string"==typeof e?e:e.$longname)||"";return(t=cleanName(t))?((t||"").split(/[.#~]/)||[]).length:0},Utils.getParentName=function(e){var t;if("string"!=typeof e){if(e.memberof)return cleanName(e.memberof);t=cleanName(e.$longname)}else t=cleanName(e);return t&&/[.#~]/g.test(t)?t.replace(/[.#~][^.#~]*$/,""):""},Utils.getParent=function(e,t){var n="string"==typeof t?Utils.getSymbolByName(e,t):t;if(!n)return null;var r=n&&cleanName(n.memberof)||Utils.getParentName(t);return r?Utils.getSymbolByName(e,r):null},Utils.isDeprecated=function(e){return e.deprecated},Utils.isGlobal=function(e){return"global"===e.scope},Utils.isNamespace=function(e){return"namespace"===e.kind},Utils.isModule=function(e){return"module"===e.kind},Utils.isMixin=function(e){return"mixin"===e.kind},Utils.isClass=function(e){return"class"===e.kind&&"MethodDefinition"!==Utils.notate(e,"meta.code.type")},Utils.isConstant=function(e){return"constant"===e.kind},Utils.isConstructor=function(e){return"class"===e.kind&&"MethodDefinition"===Utils.notate(e,"meta.code.type")},Utils.isStaticMember=function(e){return"static"===e.scope},Utils.isStatic=Utils.isStaticMember,Utils.isInner=function(e){return"inner"===e.scope},Utils.isInstanceMember=function(e){return"instance"===e.scope},Utils.isInterface=function(e){return"interface"===e.scope},Utils.isMethod=function(e){var t=Utils.notate(e,"meta.code.type");return"function"===e.kind||"FunctionExpression"===t||"FunctionDeclaration"===t},Utils.isFunction=Utils.isMethod,Utils.isInstanceMethod=function(e){return Utils.isInstanceMember(e)&&Utils.isMethod(e)},Utils.isStaticMethod=function(e){return Utils.isStaticMember(e)&&Utils.isMethod(e)},Utils.isProperty=function(e){return"member"===e.kind&&!Utils.isMethod(e)},Utils.isInstanceProperty=function(e){return Utils.isInstanceMember(e)&&Utils.isProperty(e)},Utils.isStaticProperty=function(e){return Utils.isStaticMember(e)&&Utils.isProperty(e)},Utils.isTypeDef=function(e){return"typedef"===e.kind},Utils.isCustomType=Utils.isTypeDef,Utils.isCallback=function(e){var t=(e.type||{}).names||[];return"typedef"===e.kind&&0<=(e.comment||"").indexOf("@callback "+e.longname)&&1===t.length&&"function"===t[0]},Utils.isEnum=function(e){return Boolean(e.isEnum)},Utils.isEvent=function(e){return"event"===e.kind},Utils.isExternal=function(e){return"external"===e.kind},Utils.isGenerator=function(e){return e.generator&&"function"===e.kind},Utils.isReadOnly=function(e){return e.readonly},Utils.isPublic=function(e){return"string"!=typeof e.access||"public"===e.access},Utils.isPrivate=function(e){return"private"===e.access},Utils.isPackagePrivate=function(e){return"package"===e.access},Utils.isProtected=function(e){return"protected"===e.access},Utils.isUndocumented=function(e){return!e.comments},Utils.hasDescription=function(e){return Boolean(getStr(e.classdesc)||getStr(e.description))},Utils.trimLeft=function(e){return e.replace(/^[\s\n\r\-—]*/,"")},Utils.trimNewLines=function(e){return e.replace(/^[\r\n]+|[\r\n]+$/,"")},Utils.parseTicks=function(e){return"string"!=typeof e?"":e.replace(/(```\s*)([\s\S]*?)(\s*```)/g,function(e,t,n){return Utils.normalizeTabs(Utils._wrapCode(n,!0,!0).replace(/`/g,"&#x60;"))}).replace(/(`)(.*?)(`)/g,function(e,t,n){return Utils._wrapCode(n,!0)})},Utils.parseNewLines=function(e,r){return r=r||{},Utils._tokenize(e,function(e,t){if(t)return e;var n=e.split(/[\r\n]{2,}/);return n.length<=1&&r.keepIfSingle?e:n.map(function(e){return"<p>"+e+"</p>"}).join("")}).join("")},Utils.parseLinks=function(e,l){if("string"!=typeof e)return"";l=l||{};var t=e.replace(/\{@link +([^}]*?)\}/g,function(e,t){var n,r,i=t.split("|");return 1===i.length?n=r=i[0].trim():(n=i[0].trim(),r=i[1].trim()),!1===/[/?&=]/.test(n)&&"#"!==n[0]&&(n="#"+n),'<a href="'+n+'"'+(l.target?' target="'+l.target+'" rel="noopener noreferrer"':"")+">"+r+"</a>"});return Utils.parseTicks(t)},Utils.parse=function(e,t){return t=t||{},e=Utils.trimLeft(e),e=Utils.parseNewLines(e,t),e=Utils.parseTicks(e),Utils.parseLinks(e,t)},Utils.normalizeTabs=function(e){if("string"!=typeof e)return"";var r,t=e.match(/^\s*/gm),n=1/0;if(t.forEach(function(e,t){e=e.replace(/\t/g,"  "),0<t&&(n=Math.min(e.length,n))}),n!==1/0){var i=new RegExp("^\\s{"+n+"}","g");e=e.replace(i,"")}return(e=e.replace(/^\s*/,"")).replace(/([\r\n]+)(\s+)/gm,function(e,t,n){return r=n.replace(/\t/g,"  "),t+(r=new Array(r.length-r.length%2+1).join(" "))})},Utils.getKeywords=function(e){if("string"==typeof e)return e.toLowerCase();var t=Utils.getFullName(e)+" "+e.longname+" "+e.name+" "+(e.alias||"")+" "+(e.memberOf||"")+" "+(e.$kind||"")+" "+(e.scope||"")+" "+(e.classdesc||"")+" "+(e.description||"")+" "+(e.filename||"")+" "+(e.readonly?"readonly":"")+(e.isEnum?"enum":"");return Utils.isConstructor(e)&&(t+=" constructor"),Utils.isMethod(e)&&(t+=" method"),Utils.isProperty(e)&&(t+=" property"),t.replace(/[><"'`\n\r]/g,"").toLowerCase()},Utils.getCodeFileInfo=function(e){return{filename:Utils.notate(e,"meta.filename"),lineno:Utils.notate(e,"meta.lineno"),path:Utils.notate(e,"meta.path")}},Utils.getSymbolLink=function(e,t){if("string"!=typeof t)return t.$docmaLink;var n=Utils.getSymbolByName(e,t);return n?n.$docmaLink:""};var reEndBrackets=/\[\]$/,reTypeParts=/^([^<]+?)(?:\.)?(?:<([^>]+)>)?(\[\])?$/;function _link(e,t,n){var r,i=reEndBrackets.test(t)?"[]":"",l=(t||"").replace(reEndBrackets,""),o=n||{},a="";return"internal"!==o.linkType&&(r=Utils._getTypeExternalLink(l))&&(a=' target="_blank" rel="noopener noreferrer"'),r||"external"===o.linkType||(r=Utils.getSymbolLink(e,l)),r&&(t='<a href="'+r+'"'+a+">"+(o.displayText||l)+i+"</a>"),t}function serializer(r){var i=[],l=[];return function(e,t){if(2e3<i.length)return"[Too Big Object]";if(0<i.length){var n=i.indexOf(this);~n?(i.splice(n+1),l.splice(n,1/0,e)):(i.push(this),l.push(e)),0<=i.indexOf(t)&&(t=i[0]===t?"[Circular ~]":"[Circular ~."+l.slice(0,i.indexOf(t)).join(".")+"]")}else i.push(t);return r?r.call(this,e,t):t}}function decodeHash(e){return decodeURIComponent(e).replace(/^#/,"")}Utils._parseAnchorLinks=function(t,e,n){var r=e.match(reTypeParts);if(!r||!r[1])return"";var i=r[3]||"",l="";return r[2]&&(l=(l=r[2].split("|")).map(function(e){return _link(t,e,n)}).join('<span class="code-delim">|</span>'))&&(l="&lt;"+l+"&gt;"),_link(t,r[1],n)+l+i},Utils.getTypes=function(t,e,n){var r=n||{},i="class"===e.kind?["class"]:Utils.notate(e,"type.names")||[];return i=i.map(function(e){return r.links&&(e=Utils._parseAnchorLinks(t,e,{linkType:r.links})),e}).join('<span class="code-delim">|</span>'),e.isEnum?"enum&lt;"+i+"&gt;":i},Utils.getReturnTypes=function(r,e,t){var n=e.returns;if(!Array.isArray(n))return"void";var i=t||{},l=n.reduce(function(e,t){var n=Utils.notate(t,"type.names")||[];return i.links&&(n=n.map(function(e){return Utils._parseAnchorLinks(r,e,{linkType:i.links})})),e.concat(n)},[]);return 0<l.length?l.join('<span class="code-delim">|</span>'):"void"},Utils.getCodeTags=function(n,e,t){var r=t||{};return e.map(function(e){if(r.links){var t=Utils._parseAnchorLinks(n,e,{linkType:r.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(e,!0)}).join(r.demileter||",")},Utils.getFormattedTypeList=function(n,e,t){if(!Array.isArray(e)||0===e.length)return"";var r=t||{},i='<span class="code-delim">'+(r.delimeter||"|")+"</span>",l="boolean"!=typeof r.descriptions||r.descriptions,o=r.descDelimeter||"&nbsp;&nbsp;—&nbsp;&nbsp;",a="",s=e.map(function(e){return l&&(a=Utils.parse(e.description||"",{keepIfSingle:!0}))&&(a=o+a),e.type?(e.type.names||[]).map(function(e){if(r.links){var t=Utils._parseAnchorLinks(n,e,{linkType:r.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(e,!0)}).join(i)+a:a?"— "+a:""});return 1<s.length?"<ul><li>"+s.join("</li><li>")+"</li></ul>":s},Utils.getEmittedEvents=function(n,e,t){if(!e||0===e.length)return"";var r,i,l=t||{},o=l.delimeter||", ";return(e||[]).map(function(e){if(r=e.split(/\s*[\s-—]\s*/g),i=(r[0]||"").trim(),l.links){var t=Utils._parseAnchorLinks(n,i,{linkType:l.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(i,!0)}).join(o)},Utils._find=function(e,t){if(!e||!t)return null;var n,r,i=null;for(n=0;n<e.length;n++)if((r=e[n])&&"object"==typeof r){for(var l in t)if(void 0!==t[l]&&t.hasOwnProperty(l)){if(t[l]!==r[l]){i=null;break}i=r}if(i)break}return i},Utils._assign=function(e,t,n){var r;for(r in e=e||{},t)t.hasOwnProperty(r)&&(n?Object.defineProperty(e,r,{enumerable:!0,value:t[r]}):e[r]=t[r]);return e},Utils._values=function(e){if(Array.isArray(e))return e;var t,n=[];for(t in e)e.hasOwnProperty(t)&&n.push(e[t]);return n},Utils._wrapCode=function(e,t,n){return"string"!=typeof e?"":(void 0!==t&&!0!==t||(e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;")),e="<code>"+e+"</code>",n?"<pre>"+e+"</pre>":e)},Utils._tokenize=function(e,t){"function"!=typeof t&&(t=identity);if(e.indexOf("```")<0)return[t(e,!1)];var n,r="```".length,i="",l="",o=[],a=!1;for(n=0;n<e.length;n++)i+=e[n],l+=e[n],i.length>r&&(i=i.slice(-r)),"```"===i&&(l=(a=!a)?(o.push(t(l.slice(0,-r),!1)),i):(o.push(t(l,!0)),""));return o},Utils._ensureSlash=function(e,t,n){return t?(e&&"/"!==t.slice(0,1)&&(t="/"+t),n&&"/"!==t.slice(-1)&&(t+="/"),t):e||n?"/":""},Utils._safeStringify=function(t,e,n){try{return JSON.stringify(t,serializer(e),n)}catch(e){return String(t)}},Utils.DOM={};var ATTR_BODY_STYLE="data-body-style";Utils.DOM.getOffset=function(e){var t="object"==typeof e?e:document.getElementById(e);if(t){var n=t.getBoundingClientRect();if(n.width||n.height||t.getClientRects().length){var r=document.documentElement;return{top:n.top+window.pageYOffset-r.clientTop,left:n.left+window.pageXOffset-r.clientLeft}}}},Utils.DOM.scrollTo=function(e){var t=document.documentElement||document.body;if(e=decodeHash(e||window.location.hash||"")){var n=document.getElementById(e);if(n){var r=Utils.DOM.getOffset(n);r&&(t.scrollTop=r.top)}}else t.scrollTop=0},Utils.DOM._createChild=function(e,t,n){n=n||{};var r=document.createElement(t||"div");return Object.keys(n).forEach(function(e){r[e]=n[e]}),e.appendChild(r),r},Utils.DOM._removePrevBodyStyles=function(){for(var e=document.getElementsByTagName("head")[0].querySelectorAll("["+ATTR_BODY_STYLE+"]");0<e.length;)e[0].parentNode.removeChild(e[0])},Utils.DOM._moveBodyStylesToHead=function(){var e,t,n=document.getElementsByTagName("head")[0],r=document.body.getElementsByTagName("style");for(e=0;e<r.length;e++)(t=r[e]).parentNode.removeChild(t),t.setAttribute(ATTR_BODY_STYLE,""),n.appendChild(t)};var _builtinURLs={globals:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/",statements:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/",operators:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/",functions:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/",web:"https://developer.mozilla.org/en-US/docs/Web/API/"},_builtins={globals:["Infinity","NaN","undefined","null","Object","Function","function","Boolean","boolean","Symbol","Error","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError","Number","number","Math","Date","String","string","RegExp","Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","Map","Set","WeakMap","WeakSet","ArrayBuffer","DataView","JSON","Promise","Generator","GeneratorFunction","Reflect","Proxy","TypedArray","Intl","Intl.Collator","Intl.DateTimeFormat","Intl.NumberFormat","WebAssembly","WebAssembly.Module","WebAssembly.Instance","WebAssembly.Memory","WebAssembly.Table","WebAssembly.CompileError","WebAssembly.LinkError","WebAssembly.RuntimeError"],statements:["function","function*","async function","class","debugger"],operators:["void","super","this"],functions:["arguments"],web:["AbstractWorker","AnalyserNode","AudioBuffer","AudioContext","AudioListener","AudioNode","BaseAudioContext","BeforeUnloadEvent","Blob","BlobEvent","BufferSource","ByteString","CSSMediaRule","CSSPageRule","CSSPrimitiveValue","CSSRule","CSSRuleList","CSSStyleDeclaration","CSSStyleRule","CSSStyleSheet","CSSSupportsRule","CSSValue","CSSValueList","CloseEvent","CompositionEvent","Console","Coordinates","Crypto","CryptoKey","CustomEvent","DOMException","DOMImplementation","Document","DocumentFragment","DocumentType","DoubleRange","DragEvent","Element","ErrorEvent","Event","EventListener","EventSource","EventTarget","File","FileList","FileReader","FileReaderSync","FormData","Geolocation","HTMLAnchorElement","HTMLAreaElement","HTMLAudioElement","HTMLBRElement","HTMLBaseElement","HTMLBodyElement","HTMLButtonElement","HTMLCanvasElement","HTMLCollection","HTMLDListElement","HTMLDataElement","HTMLDataListElement","HTMLDetailsElement","HTMLDivElement","HTMLDocument","HTMLElement","HTMLEmbedElement","HTMLFieldSetElement","HTMLFormControlsCollection","HTMLFormElement","HTMLHRElement","HTMLHeadElement","HTMLHeadingElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLKeygenElement","HTMLLIElement","HTMLLabelElement","HTMLLegendElement","HTMLLinkElement","HTMLMapElement","HTMLMediaElement","HTMLMetaElement","HTMLMeterElement","HTMLModElement","HTMLOListElement","HTMLObjectElement","HTMLOptGroupElement","HTMLOptionElement","HTMLOptionsCollection","HTMLOutputElement","HTMLParagraphElement","HTMLParamElement","HTMLPreElement","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","HTMLSelectElement","HTMLSlotElement","HTMLSourceElement","HTMLSpanElement","HTMLStyleElement","HTMLTableCaptionElement","HTMLTableCellElement","HTMLTableColElement","HTMLTableDataCellElement","HTMLTableElement","HTMLTableHeaderCellElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTemplateElement","HTMLTextAreaElement","HTMLTimeElement","HTMLTitleElement","HTMLTrackElement","HTMLUListElement","HTMLUnknownElement","HTMLVideoElement","HashChangeEvent","History","ImageData","InputEvent","KeyboardEvent","LinkStyle","Location","LongRange","MediaDevices","MediaDeviceInfo","MediaError","MediaRecorder","MediaStream","MessageChannel","MessageEvent","MessagePort","MouseEvent","MutationObserver","MutationRecord","NamedNodeMap","Navigator","NavigatorGeolocation","Node","NodeIterator","NodeList","NonDocumentTypeChildNode","Notification","PageTransitionEvent","PointerEvent","PopStateEvent","Position","PositionError","PositionOptions","ProgressEvent","PromiseRejectionEvent","RTCCertificate","RTCConfiguration","RTCDTMFSender","RTCDTMFToneChangeEvent","RTCDataChannel","RTCPeerConnection","RTCPeerConnection","RTCRtpCodecParameters","RTCRtpContributingSource","RTCRtpReceiver","RTCRtpSender","RTCRtpSynchronizationSource","RTCRtpTransceiver","RTCRtpTransceiverDirection","RTCRtpTransceiverInit","RTCStatsReport","RadioNodeList","RandomSource","Range","RenderingContext","SVGAnimateElement","SVGAnimateMotionElement","SVGAnimateTransformElement","SVGAnimationElement","SVGCircleElement","SVGClipPathElement","SVGCursorElement","SVGElement","SVGEllipseElement","SVGEvent","SVGFilterElement","SVGGeometryElement","SVGGradientElement","SVGGraphicsElement","SVGImageElement","SVGLineElement","SVGLinearGradientElement","SVGMPathElement","SVGMaskElement","SVGMetadataElement","SVGPathElement","SVGPatternElement","SVGPolygonElement","SVGPolylineElement","SVGRadialGradientElement","SVGRect","SVGRectElement","SVGSVGElement","SVGScriptElement","SVGSetElement","SVGStopElement","SVGStyleElement","SVGSwitchElement","SVGSymbolElement","SVGTSpanElement","SVGTextContentElement","SVGTextElement","SVGTextPathElement","SVGTextPositioningElement","SVGTitleElement","SVGTransform","SVGTransformList","SVGTransformable","SVGUseElement","SVGViewElement","ShadowRoot","SharedWorker","Storage","StorageEvent","StyleSheet","StyleSheetList","Text","TextMetrics","TimeEvent","TimeRanges","Touch","TouchEvent","TouchList","Transferable","TreeWalker","UIEvent","URL","WebGLActiveInfo","WebGLBuffer","WebGLContextEvent","WebGLFramebuffer","WebGLProgram","WebGLRenderbuffer","WebGLRenderingContext","WebGLShader","WebGLTexture","WebGLUniformLocation","WebGLVertexArrayObject","WebSocket","WheelEvent","Window","Worker","WorkerGlobalScope","WorkerLocation","WorkerNavigator","XMLHttpRequest","XMLHttpRequestEventTarget","XMLSerializer","XPathExpression","XPathResult","XSLTProcessor"]},_cats=Object.keys(_builtins);Utils._getTypeExternalLink=function(e){var t,n;for(t=0;t<_cats.length;t++)if(n=_cats[t],0<=_builtins[n].indexOf(e))return _builtinURLs[n]+(e||"").replace(/^([^.]*\.)/,"");return""};

function DocmaWeb(t){this._=t||{},this._.initialLoad=!1,this._.appEntranceRI=null,this._.emitter=new EventEmitter,Object.defineProperty(this,"app",{configurable:!1,get:function(){return this._.app||null}}),Object.defineProperty(this,"apis",{configurable:!1,get:function(){return this._.apis||{}}}),Object.defineProperty(this,"routes",{configurable:!1,get:function(){return this._.routes||{}}}),Object.defineProperty(this,"template",{configurable:!1,get:function(){return this._.template||{}}}),Object.defineProperty(this,"location",{configurable:!1,get:function(){var t=Utils._ensureSlash(!0,window.location.pathname,!0),e=Utils._ensureSlash(!0,docma.app.base,!0),o=t;return t.slice(0,e.length)===e&&(o=t.slice(e.length-1,t.length)),{host:window.location.host,hostname:window.location.hostname,origin:window.location.origin,port:window.location.port,protocol:(window.location.protocol||"").replace(/:$/,""),entrance:Utils._ensureSlash(!0,docma.app.entrance,!1),base:e,hash:(window.location.hash||"").replace(/^#/,""),query:(window.location.search||"").replace(/^\?/,""),href:window.location.href,fullpath:t,pathname:o,path:o+(window.location.search||""),getQuery:function(t,e){"?"===(e=void 0===e?window.location.search||"":e).slice(0,1)&&(e=e.slice(1)),t=(t||"").replace(/[[\]]/g,"\\$&");var o=new RegExp("&?"+t+"(=([^&#]*)|&|#|$)").exec(e);return o&&o[2]?decodeURIComponent(o[2].replace(/\+/g," ")):""}}}}),Object.defineProperty(this,"currentRoute",{configurable:!1,get:function(){return this._.currentRoute||null}}),Object.defineProperty(this,"documentation",{configurable:!1,get:function(){return this._.documentation||[]}}),Object.defineProperty(this,"symbols",{configurable:!1,get:function(){return this._.symbols||[]}})}DocmaWeb.prototype._trigger=function(t,e){this.info("Event:",t,e?e[0]:""),this._.emitter.trigger(t,e)},DocmaWeb.Event={Ready:"ready",Render:"render",Route:"route",Navigate:"navigate"},DocmaWeb.prototype.on=function(t,e){return this._.emitter.on.apply(this._.emitter,arguments),docma},DocmaWeb.prototype.once=function(){return this._.emitter.once.apply(this._.emitter,arguments),this},DocmaWeb.prototype.off=function(){return this._.emitter.off.apply(this._.emitter,arguments),this},DocmaWeb.prototype.addListener=DocmaWeb.prototype.on,DocmaWeb.prototype.addListenerOnce=DocmaWeb.prototype.once,DocmaWeb.prototype.removeListener=DocmaWeb.prototype.off,DocmaWeb.prototype.log=function(){docma._.logsEnabled&&console.log.apply(console,arguments)},DocmaWeb.prototype.info=function(){docma._.logsEnabled&&console.info.apply(console,arguments)},DocmaWeb.prototype.warn=function(){docma._.logsEnabled&&console.warn.apply(console,arguments)},DocmaWeb.prototype.error=function(){docma._.logsEnabled&&console.error.apply(console,arguments)},DocmaWeb.prototype.getDocmaElem=function(){var t=document.getElementById(this._.elementID);return t||(t=Utils.DOM.createChild(document.body,"div",{id:this._.elementID})),t},DocmaWeb.prototype.getContentElem=function(){var t=document.getElementById(this._.contentElementID);if(!t)throw new Error("Partial "+this._.partials.content+' should have an element with id="'+this._.contentElementID+'".');return t},DocmaWeb.prototype.loadContent=function(t){this.getContentElem().innerHTML=t,Utils.DOM._removePrevBodyStyles(),Utils.DOM._moveBodyStylesToHead(),Utils.DOM.scrollTo()},DocmaWeb.prototype._loadCompiledContent=function(t){this.getDocmaElem().innerHTML=t},DocmaWeb.prototype._fixAnchors=function(r){this.app.base&&setTimeout(function(){var t,e,o=document.querySelectorAll('a[href^="#"]');for(t=0;t<o.length;t++){var n=(e=o[t]).getAttribute("href");"#"===n.slice(0,1)&&1<n.length&&(n=window.location.pathname+(window.location.search||"")+n,e.setAttribute("href",n))}"function"==typeof r&&r()},50)},DocmaWeb.prototype.addFilter=function(t,e){if(this.filterExists(t))throw new Error('Filter "'+t+'" already exists.');return dust.filters[t]=e,this},DocmaWeb.prototype.removeFilter=function(t){return delete dust.filters[t],this},DocmaWeb.prototype.filterExists=function(t){return"function"==typeof dust.filters[t]},DocmaWeb.prototype.createRoute=function(t,e){return new DocmaWeb.Route(this,t,e)},DocmaWeb.prototype.createRouteFromID=function(t){if("string"!=typeof t)return this.warn("Route ID is not a string: "+t),new DocmaWeb.Route(this,null);var e=t.split(":");return new DocmaWeb.Route(this,e[1],e[0])},DocmaWeb.prototype.createRouteFromQuery=function(t){if(!t)return new DocmaWeb.Route(null);var e=t.split("&")[0].split("="),o=e[0].toLowerCase(),n=e[1];return new DocmaWeb.Route(this,n,o)},DocmaWeb.prototype._render=function(o,n){var r=this;dust.render(o,this,function(t,e){if(t)throw r.warn("Could not load Docma partial:",o),r.log("Compiled HTML: ",e),t;r._loadCompiledContent(e),"function"==typeof n&&n()})},DocmaWeb.prototype._triggerAfterRender=function(){this._trigger(DocmaWeb.Event.Render,[docma.currentRoute]),this._.initialLoad&&(this._trigger(DocmaWeb.Event.Ready),this._.initialLoad=!1)},DocmaWeb.prototype._render404=function(t,e){this._.currentRoute=this.createRoute(null);var o=this;this._render(this._.partials.notFound,function(){if(o._trigger(DocmaWeb.Event.Render,[null]),Utils.DOM.scrollTo(),"function"==typeof e)return e(404);throw new Error("Page or content not found for route: "+Utils._safeStringify(t))})},DocmaWeb.prototype.fetch=function(e,o){var n=new XMLHttpRequest,r=this;n.onreadystatechange=function(){if(4===n.readyState){var t=200===n.status?n.responseText:"";return r.log("XHR GET:",n.status,e),o(n.status,t)}},n.open("GET",e,!0),n.send()},DocmaWeb.prototype.render=function(o,n){if(!o||!o.exists())return this._render404(o,n);if(!o.isEqualTo(this.currentRoute)){this._.currentRoute=o;var r="function"==typeof n,i=this;o.type===DocmaWeb.Route.Type.API?this._render(this._.partials.api,function(){i._triggerAfterRender(),r&&n(200),i._fixAnchors(function(){Utils.DOM.scrollTo()})}):docma.fetch(o.contentPath,function(t,e){if(404===t)return i._render404(o,n);i._render(i._.partials.content,function(){i.loadContent(e),i._triggerAfterRender(),r&&n(t),i._fixAnchors(function(){Utils.DOM.scrollTo()})})})}},DocmaWeb.Utils=Utils;

var _arrRouteTypes;DocmaWeb.Route=function(t,e,o){if(this._docma=t,o&&!(_arrRouteTypes.indexOf(o)<0)){if(e)t.app.routing.caseSensitive||(e=e.toLowerCase());else{if(o!==DocmaWeb.Route.Type.API)return;e=t._.defaultApiName}var i=Utils._find(t.routes,{type:o,name:e});i&&Utils._assign(this,i)}},DocmaWeb.Route.Type={API:"api",CONTENT:"content"},_arrRouteTypes=Utils._values(DocmaWeb.Route.Type),DocmaWeb.Route.SourceType={JS:"js",MD:"md",HTML:"html"},DocmaWeb.Route.prototype.exists=function(){return Boolean(this.id)},DocmaWeb.Route.prototype.isEqualTo=function(t){return!!(t&&t.exists()&&this.exists())&&t.path===this.path},DocmaWeb.Route.prototype.isCurrent=function(){return this.isEqualTo(this._docma.currentRoute)},DocmaWeb.Route.prototype.apply=function(t){return this.type===DocmaWeb.Route.Type.API?(this._docma._.documentation=this._docma.apis[this.name].documentation,this._docma._.symbols=this._docma.apis[this.name].symbols):(this._docma._.documentation=null,this._docma._.symbols=null),this._docma._trigger(DocmaWeb.Event.Route,[this.exists()?this:null]),this._docma.render(this,t),this},DocmaWeb.Route.prototype.toString=function(){var e=this.toJSON();return Object.keys(e).map(function(t){return t+": "+e[t]}).join(", ")},DocmaWeb.Route.prototype.toJSON=function(){return{id:this.id,contentPath:this.contentPath,path:this.path,type:this.type,sourceType:this.sourceType,name:this.name}};

dust.filters=dust.filters||{},dust.filters.$pt=function(t){return DocmaWeb.Utils.parseTicks(t)},dust.filters.$pnl=function(t){return DocmaWeb.Utils.parseNewLines(t,{keepIfSingle:!0})},dust.filters.$pl=function(t){return DocmaWeb.Utils.parseLinks(t)},dust.filters.$tl=function(t){return DocmaWeb.Utils.trimLeft(t)},dust.filters.$tnl=function(t){return DocmaWeb.Utils.trimNewLines(t)},dust.filters.$p=function(t){return DocmaWeb.Utils.parse(t,{keepIfSingle:!0})},dust.filters.$nt=function(t){return DocmaWeb.Utils.normalizeTabs(t)},dust.filters.$desc=function(t){return DocmaWeb.Utils.parse(t.classdesc||t.description||"")},dust.filters.$def=function(t){return t.optional?String(t.defaultvalue):""};var reJSValues=/true|false|null|undefined|Infinity|NaN|\d+|Number\.\w+|Math\.(PI|E|LN(2|10)|LOG(2|10)E|SQRT(1_)?2)|\[.*?]|\{.*?}|new [a-zA-Z]+.*|\/.+\/[gmiu]*|Date\.(now\(\)|UTC\(.*)|window|document/;dust.filters.$val=function(t){var e=DocmaWeb.Utils.notate(t,"meta.code.value");if(void 0===e)return"";if("string"!=typeof e)return e;var n=DocmaWeb.Utils.notate(t,"type.names")||[];return!/['"`]/.test(e.slice(0,1))&&0<=n.indexOf("String")&&(1===n.length||-1===reJSValues.indexOf(e))?'"'+e+'"':e},dust.filters.$id=function(t){var e;"string"==typeof t?e=t:e=(DocmaWeb.Utils.isConstructor(t)?"new-":"")+t.$longname;return e.replace(/ /g,"-")};

DocmaWeb.version = "3.0.0";
return DocmaWeb;
})();
var docma = Object.freeze(new DocmaWeb({"version":"3.0.0","routes":[{"id":"api:","type":"api","name":"_def_","path":"?api","contentPath":null,"sourceType":"js"},{"id":"api:ps.js","type":"api","name":"ps.js","path":"?api=ps.js","contentPath":null,"sourceType":"js"},{"id":"content:readme","type":"content","name":"readme","path":"?content=readme","contentPath":"content/readme.html","sourceType":"md"}],"apis":{"_def_":{"documentation":[],"symbols":[]},"ps.js":{"documentation":[{"comment":"/**\r\n * Contains information about how to parse and run each message type from the server\r\n */","meta":{"range":[96,1940],"filename":"Action.js","lineno":4,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000002","name":"Action","type":"ClassDeclaration","paramnames":["client","data","room","name"]}},"classdesc":"Contains information about how to parse and run each message type from the server","name":"Action","longname":"Action","kind":"class","scope":"global","params":[{"type":{"names":["Client"]},"description":"The client that instantiated this action.","name":"client"},{"type":{"names":["string"]},"description":"The data from the server.","name":"data"},{"type":{"names":["Room"]},"nullable":true,"description":"The room the action was performed in.","name":"room"},{"type":{"names":["string"]},"description":"The action's name.","name":"name"}],"$longname":"Action","$kind":"class","$docmaLink":"?api=ps.js#Action","$members":[{"comment":"/**\r\n\t\t * The client that instantiated this action.\r\n\t\t * @type {Client}\r\n\t\t */","meta":{"range":[481,501],"filename":"Action.js","lineno":16,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000014","name":"this.client","type":"Identifier","value":"client","paramnames":[]}},"description":"The client that instantiated this action.","type":{"names":["Client"]},"name":"client","longname":"Action#client","kind":"member","memberof":"Action","scope":"instance","$longname":"Action#client","$kind":"property","$docmaLink":"?api=ps.js#Action#client"},{"comment":"/**\r\n\t\t * The data from the server.\r\n\t\t * @type {string}\r\n\t\t */","meta":{"range":[573,589],"filename":"Action.js","lineno":21,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000020","name":"this.data","type":"Identifier","value":"data","paramnames":[]}},"description":"The data from the server.","type":{"names":["string"]},"name":"data","longname":"Action#data","kind":"member","memberof":"Action","scope":"instance","$longname":"Action#data","$kind":"property","$docmaLink":"?api=ps.js#Action#data"},{"comment":"/**\r\n\t * Whether the action is to be run with a room.\r\n\t * @returns {boolean}\r\n\t */","meta":{"range":[1623,1669],"filename":"Action.js","lineno":75,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000095","name":"Action.isRoomless","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Whether the action is to be run with a room.","returns":[{"type":{"names":["boolean"]}}],"name":"isRoomless","longname":"Action.isRoomless","kind":"member","memberof":"Action","scope":"static","params":[],"$longname":"Action.isRoomless","$kind":"property","$docmaLink":"?api=ps.js#Action.isRoomless"},{"comment":"/**\r\n\t\t * The action's name.\r\n\t\t * @type {string}\r\n\t\t */","meta":{"range":[748,764],"filename":"Action.js","lineno":31,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000032","name":"this.name","type":"Identifier","value":"name","paramnames":[]}},"description":"The action's name.","type":{"names":["string"]},"name":"name","longname":"Action#name","kind":"member","memberof":"Action","scope":"instance","$longname":"Action#name","$kind":"property","$docmaLink":"?api=ps.js#Action#name"},{"comment":"/**\r\n\t * Parse the data from the server into a readable format\r\n\t * @returns {*}\r\n\t */","meta":{"range":[1191,1225],"filename":"Action.js","lineno":50,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000043","name":"Action#parse","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Parse the data from the server into a readable format","returns":[{"type":{"names":["*"]}}],"name":"parse","longname":"Action#parse","kind":"function","memberof":"Action","scope":"instance","params":[],"$longname":"Action#parse","$kind":"method","$docmaLink":"?api=ps.js#Action#parse"},{"comment":"/**\r\n\t * Removes the name from the start of this.data and returns it.\r\n\t * @returns {string}\r\n\t */","meta":{"range":[1400,1532],"filename":"Action.js","lineno":65,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000060","name":"Action#removeMessageName","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Removes the name from the start of this.data and returns it.","returns":[{"type":{"names":["string"]}}],"name":"removeMessageName","longname":"Action#removeMessageName","kind":"function","memberof":"Action","scope":"instance","params":[],"$longname":"Action#removeMessageName","$kind":"method","$docmaLink":"?api=ps.js#Action#removeMessageName"},{"comment":"/**\r\n\t * Resolve the action.\r\n\t * @param {string} event The name of the event.\r\n\t * @param {Object} args The event arguments.\r\n\t */","meta":{"range":[1808,1937],"filename":"Action.js","lineno":84,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000101","name":"Action#resolve","type":"MethodDefinition","paramnames":["event","args"]},"vars":{"":null}},"description":"Resolve the action.","params":[{"type":{"names":["string"]},"description":"The name of the event.","name":"event"},{"type":{"names":["Object"]},"description":"The event arguments.","name":"args"}],"name":"resolve","longname":"Action#resolve","kind":"function","memberof":"Action","scope":"instance","$longname":"Action#resolve","$kind":"method","$docmaLink":"?api=ps.js#Action#resolve"},{"comment":"/**\r\n\t\t * The results of the action if it has completed.\r\n\t\t * @type {ActionResult[]}\r\n\t\t */","meta":{"range":[1075,1092],"filename":"Action.js","lineno":43,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000038","name":"this.results","type":"ArrayExpression","value":"[]","paramnames":[]}},"description":"The results of the action if it has completed.","type":{"names":["Array.<ActionResult>"]},"name":"results","longname":"Action#results","kind":"member","memberof":"Action","scope":"instance","$longname":"Action#results","$kind":"property","$docmaLink":"?api=ps.js#Action#results"},{"comment":"/**\r\n\t\t * The room the action was sent in.\r\n\t\t * @type {?Room}\r\n\t\t */","meta":{"range":[667,683],"filename":"Action.js","lineno":26,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000026","name":"this.room","type":"Identifier","value":"room","paramnames":[]}},"description":"The room the action was sent in.","type":{"names":["Room"]},"nullable":true,"name":"room","longname":"Action#room","kind":"member","memberof":"Action","scope":"instance","$longname":"Action#room","$kind":"property","$docmaLink":"?api=ps.js#Action#room"},{"comment":"/**\r\n\t * Execute the action\r\n\t */","meta":{"range":[1266,1294],"filename":"Action.js","lineno":57,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000051","name":"Action#run","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Execute the action","name":"run","longname":"Action#run","kind":"function","memberof":"Action","scope":"instance","params":[],"$longname":"Action#run","$kind":"method","$docmaLink":"?api=ps.js#Action#run"}],"$constructor":{"comment":"/**\r\n\t * @param {Client} client The client that instantiated this action.\r\n\t * @param {string} data The data from the server.\r\n\t * @param {?Room} room The room the action was performed in.\r\n\t * @param {string} name The action's name.\r\n\t */","meta":{"range":[355,1097],"filename":"Action.js","lineno":11,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000005","name":"Action","type":"MethodDefinition","paramnames":["client","data","room","name"]},"vars":{"":null}},"params":[{"type":{"names":["Client"]},"description":"The client that instantiated this action.","name":"client"},{"type":{"names":["string"]},"description":"The data from the server.","name":"data"},{"type":{"names":["Room"]},"nullable":true,"description":"The room the action was performed in.","name":"room"},{"type":{"names":["string"]},"description":"The action's name.","name":"name"}],"name":"Action","longname":"Action","kind":"class","scope":"global","undocumented":true,"$longname":"Action","$kind":"constructor","$docmaLink":"?api=ps.js#Action"}},{"comment":"/**\r\n * Options for awaiting actions..\r\n * @typedef {Object} ActionAwaitOptions\r\n * @property {function} [filter=() => true] Function to test messages against.\r\n * @property {number} [count=1] Max amount of actions to collect.\r\n * @property {number} [min_count=count] Minimum amount of actions to collect. Errors on timeout if this number\r\n * hasn't been reached\r\n * @property {number} [timeout=60000] Time in ms until the promise automatically ends regardless of messages collected.\r\n */","meta":{"filename":"Static.js","lineno":37,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{}},"description":"Options for awaiting actions..","kind":"typedef","name":"ActionAwaitOptions","type":{"names":["Object"]},"properties":[{"type":{"names":["function"]},"optional":true,"defaultvalue":"() => true","description":"Function to test messages against.","name":"filter"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"description":"Max amount of actions to collect.","name":"count"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"count","description":"Minimum amount of actions to collect. Errors on timeout if this number\rhasn't been reached","name":"min_count"},{"type":{"names":["number"]},"optional":true,"defaultvalue":60000,"description":"Time in ms until the promise automatically ends regardless of messages collected.","name":"timeout"}],"longname":"ActionAwaitOptions","scope":"global","$longname":"ActionAwaitOptions","$kind":"typedef","$docmaLink":"?api=ps.js#ActionAwaitOptions"},{"comment":"/**\r\n\t * @hideconstructor\r\n\t * @param {Client} client The client that instantiated this action.\r\n\t * @param {string} data The data from the server.\r\n\t * @param {?Room} room The room the action was performed in.\r\n\t */","meta":{"range":[345,424],"filename":"Challstr.js","lineno":11,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000349","name":"ActionChallstr","type":"MethodDefinition","paramnames":["client","data","room"]},"vars":{"":null}},"hideconstructor":true,"params":[{"type":{"names":["Client"]},"description":"The client that instantiated this action.","name":"client"},{"type":{"names":["string"]},"description":"The data from the server.","name":"data"},{"type":{"names":["Room"]},"nullable":true,"description":"The room the action was performed in.","name":"room"}],"name":"ActionChallstr","longname":"ActionChallstr","kind":"class","scope":"global","$longname":"ActionChallstr","$kind":"constructor","$docmaLink":"?api=ps.js#ActionChallstr","$hide":true},{"comment":"/**\r\n\t * @hideconstructor\r\n\t */","meta":{"range":[111,491],"filename":"ActionManager.js","lineno":7,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000150","name":"ActionManager","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"hideconstructor":true,"name":"ActionManager","longname":"ActionManager","kind":"class","scope":"global","params":[],"$longname":"ActionManager","$kind":"constructor","$docmaLink":"?api=ps.js#ActionManager","$hide":true},{"comment":"/**\r\n\t * @hideconstructor\r\n\t * @param {Client} client The client that instantiated this action.\r\n\t * @param {string} data The data from the server.\r\n\t * @param {?Room} room The room the action was performed in.\r\n\t */","meta":{"range":[345,425],"filename":"RoomInit.js","lineno":11,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000433","name":"ActionRoomInit","type":"MethodDefinition","paramnames":["client","data","room"]},"vars":{"":null}},"hideconstructor":true,"params":[{"type":{"names":["Client"]},"description":"The client that instantiated this action.","name":"client"},{"type":{"names":["string"]},"description":"The data from the server.","name":"data"},{"type":{"names":["Room"]},"nullable":true,"description":"The room the action was performed in.","name":"room"}],"name":"ActionRoomInit","longname":"ActionRoomInit","kind":"class","scope":"global","$longname":"ActionRoomInit","$kind":"constructor","$docmaLink":"?api=ps.js#ActionRoomInit","$hide":true},{"comment":"/**\r\n\t * @hideconstructor\r\n\t * @param {Client} client The client that instantiated this action.\r\n\t * @param {string} data The data from the server.\r\n\t * @param {?Room} room The room the action was performed in.\r\n\t */","meta":{"range":[346,427],"filename":"RoomTitle.js","lineno":11,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000517","name":"ActionRoomTitle","type":"MethodDefinition","paramnames":["client","data","room"]},"vars":{"":null}},"hideconstructor":true,"params":[{"type":{"names":["Client"]},"description":"The client that instantiated this action.","name":"client"},{"type":{"names":["string"]},"description":"The data from the server.","name":"data"},{"type":{"names":["Room"]},"nullable":true,"description":"The room the action was performed in.","name":"room"}],"name":"ActionRoomTitle","longname":"ActionRoomTitle","kind":"class","scope":"global","$longname":"ActionRoomTitle","$kind":"constructor","$docmaLink":"?api=ps.js#ActionRoomTitle","$hide":true},{"comment":"/**\r\n\t * @hideconstructor\r\n\t * @param {Client} client The client that instantiated this action.\r\n\t * @param {string} data The data from the server.\r\n\t * @param {?Room} room The room the action was performed in.\r\n\t */","meta":{"range":[391,476],"filename":"RoomUserList.js","lineno":12,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000605","name":"ActionRoomUserList","type":"MethodDefinition","paramnames":["client","data","room"]},"vars":{"":null}},"hideconstructor":true,"params":[{"type":{"names":["Client"]},"description":"The client that instantiated this action.","name":"client"},{"type":{"names":["string"]},"description":"The data from the server.","name":"data"},{"type":{"names":["Room"]},"nullable":true,"description":"The room the action was performed in.","name":"room"}],"name":"ActionRoomUserList","longname":"ActionRoomUserList","kind":"class","scope":"global","$longname":"ActionRoomUserList","$kind":"constructor","$docmaLink":"?api=ps.js#ActionRoomUserList","$hide":true},{"comment":"/**\r\n\t * Execute the action\r\n\t */","meta":{"range":[517,916],"filename":"RoomUserList.js","lineno":19,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000619","name":"ActionRoomUserList#run","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Execute the action","name":"run","longname":"ActionRoomUserList#run","kind":"function","memberof":"ActionRoomUserList","scope":"instance","params":[],"$longname":"ActionRoomUserList#run","$kind":"method","$docmaLink":"?api=ps.js#ActionRoomUserList#run"},{"comment":"/**\r\n\t * @hideconstructor\r\n\t * @param {Client} client The client that instantiated this action.\r\n\t * @param {string} data The data from the server.\r\n\t * @param {?Room} room The room the action was performed in.\r\n\t */","meta":{"range":[427,509],"filename":"UpdateUser.js","lineno":13,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{"id":"astnode100000749","name":"ActionUpdateUser","type":"MethodDefinition","paramnames":["client","data","room"]},"vars":{"":null}},"hideconstructor":true,"params":[{"type":{"names":["Client"]},"description":"The client that instantiated this action.","name":"client"},{"type":{"names":["string"]},"description":"The data from the server.","name":"data"},{"type":{"names":["Room"]},"nullable":true,"description":"The room the action was performed in.","name":"room"}],"name":"ActionUpdateUser","longname":"ActionUpdateUser","kind":"class","scope":"global","$longname":"ActionUpdateUser","$kind":"constructor","$docmaLink":"?api=ps.js#ActionUpdateUser","$hide":true},{"comment":"/**\r\n * The base class for all clients.\r\n * @extends {EventEmitter}\r\n */","meta":{"range":[198,3301],"filename":"BaseClient.js","lineno":9,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001529","name":"BaseClient","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"The base class for all clients.","augments":["EventEmitter"],"name":"BaseClient","longname":"BaseClient","kind":"class","scope":"global","params":[],"$longname":"BaseClient","$kind":"class","$docmaLink":"?api=ps.js#BaseClient","$members":[{"comment":"/**\r\n    * Clears an immediate.\r\n    * @param {Immediate} immediate Immediate to cancel\r\n    */","meta":{"range":[3198,3298],"filename":"BaseClient.js","lineno":116,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001764","name":"BaseClient#clearImmediate","type":"MethodDefinition","paramnames":["immediate"]},"vars":{"":null}},"description":"Clears an immediate.","params":[{"type":{"names":["Immediate"]},"description":"Immediate to cancel","name":"immediate"}],"name":"clearImmediate","longname":"BaseClient#clearImmediate","kind":"function","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#clearImmediate","$kind":"method","$docmaLink":"?api=ps.js#BaseClient#clearImmediate"},{"comment":"/**\r\n    * Clears an interval.\r\n    * @param {Timeout} interval Interval to cancel\r\n    */","meta":{"range":[2627,2721],"filename":"BaseClient.js","lineno":95,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001722","name":"BaseClient#clearInterval","type":"MethodDefinition","paramnames":["interval"]},"vars":{"":null}},"description":"Clears an interval.","params":[{"type":{"names":["Timeout"]},"description":"Interval to cancel","name":"interval"}],"name":"clearInterval","longname":"BaseClient#clearInterval","kind":"function","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#clearInterval","$kind":"method","$docmaLink":"?api=ps.js#BaseClient#clearInterval"},{"comment":"/**\r\n    * Clears a timeout.\r\n    * @param {Timeout} timeout Timeout to cancel\r\n    */","meta":{"range":[1983,2071],"filename":"BaseClient.js","lineno":73,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001678","name":"BaseClient#clearTimeout","type":"MethodDefinition","paramnames":["timeout"]},"vars":{"":null}},"description":"Clears a timeout.","params":[{"type":{"names":["Timeout"]},"description":"Timeout to cancel","name":"timeout"}],"name":"clearTimeout","longname":"BaseClient#clearTimeout","kind":"function","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#clearTimeout","$kind":"method","$docmaLink":"?api=ps.js#BaseClient#clearTimeout"},{"comment":"/**\r\n    * Destroys all assets used by the base client.\r\n    */","meta":{"range":[1111,1387],"filename":"BaseClient.js","lineno":44,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001575","name":"BaseClient#destroy","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Destroys all assets used by the base client.","name":"destroy","longname":"BaseClient#destroy","kind":"function","memberof":"BaseClient","scope":"instance","params":[],"$longname":"BaseClient#destroy","$kind":"method","$docmaLink":"?api=ps.js#BaseClient#destroy"},{"comment":"/**\r\n          * The options the client was instantiated with\r\n          * @type {ClientOptions}\r\n          */","meta":{"range":[982,1035],"filename":"BaseClient.js","lineno":38,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001565","name":"this.options","type":"CallExpression","value":"","paramnames":[]}},"description":"The options the client was instantiated with","type":{"names":["ClientOptions"]},"name":"options","longname":"BaseClient#options","kind":"member","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#options","$kind":"property","$docmaLink":"?api=ps.js#BaseClient#options"},{"comment":"/**\r\n    * Sets an immediate that will be automatically cancelled if the client is destroyed.\r\n    * @param {Function} fn Function to execute\r\n    * @param {...*} args Arguments for the function\r\n    * @returns {Immediate}\r\n    */","meta":{"range":[2959,3095],"filename":"BaseClient.js","lineno":106,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001739","name":"BaseClient#setImmediate","type":"MethodDefinition","paramnames":["fn","args"]},"vars":{"":null}},"description":"Sets an immediate that will be automatically cancelled if the client is destroyed.","params":[{"type":{"names":["function"]},"description":"Function to execute","name":"fn"},{"type":{"names":["*"]},"variable":true,"description":"Arguments for the function","name":"args"}],"returns":[{"type":{"names":["Immediate"]}}],"name":"setImmediate","longname":"BaseClient#setImmediate","kind":"function","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#setImmediate","$kind":"method","$docmaLink":"?api=ps.js#BaseClient#setImmediate"},{"comment":"/**\r\n    * Sets an interval that will be automatically cancelled if the client is destroyed.\r\n    * @param {Function} fn Function to execute\r\n    * @param {number} delay Time to wait between executions (in milliseconds)\r\n    * @param {...*} args Arguments for the function\r\n    * @returns {Timeout}\r\n    */","meta":{"range":[2385,2529],"filename":"BaseClient.js","lineno":85,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001695","name":"BaseClient#setInterval","type":"MethodDefinition","paramnames":["fn","delay","args"]},"vars":{"":null}},"description":"Sets an interval that will be automatically cancelled if the client is destroyed.","params":[{"type":{"names":["function"]},"description":"Function to execute","name":"fn"},{"type":{"names":["number"]},"description":"Time to wait between executions (in milliseconds)","name":"delay"},{"type":{"names":["*"]},"variable":true,"description":"Arguments for the function","name":"args"}],"returns":[{"type":{"names":["Timeout"]}}],"name":"setInterval","longname":"BaseClient#setInterval","kind":"function","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#setInterval","$kind":"method","$docmaLink":"?api=ps.js#BaseClient#setInterval"},{"comment":"/**\r\n    * Sets a timeout that will be automatically cancelled if the client is destroyed.\r\n    * @param {Function} fn Function to execute\r\n    * @param {number} delay Time to wait before executing (in milliseconds)\r\n    * @param {...*} args Arguments for the function\r\n    * @returns {Timeout}\r\n    */","meta":{"range":[1697,1889],"filename":"BaseClient.js","lineno":60,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001639","name":"BaseClient#setTimeout","type":"MethodDefinition","paramnames":["fn","delay","args"]},"vars":{"":null}},"description":"Sets a timeout that will be automatically cancelled if the client is destroyed.","params":[{"type":{"names":["function"]},"description":"Function to execute","name":"fn"},{"type":{"names":["number"]},"description":"Time to wait before executing (in milliseconds)","name":"delay"},{"type":{"names":["*"]},"variable":true,"description":"Arguments for the function","name":"args"}],"returns":[{"type":{"names":["Timeout"]}}],"name":"setTimeout","longname":"BaseClient#setTimeout","kind":"function","memberof":"BaseClient","scope":"instance","$longname":"BaseClient#setTimeout","$kind":"method","$docmaLink":"?api=ps.js#BaseClient#setTimeout"}],"$constructor":{"comment":"","meta":{"range":[240,1040],"filename":"BaseClient.js","lineno":10,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001533","name":"BaseClient","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"undocumented":true,"name":"BaseClient","longname":"BaseClient","kind":"class","scope":"global","params":[],"$longname":"BaseClient","$kind":"constructor","$docmaLink":"?api=ps.js#BaseClient"}},{"comment":"/**\r\n * Main entry point into showdown and starting point for all clients\r\n * @extends {BaseClient}\r\n */","meta":{"range":[476,3845],"filename":"Client.js","lineno":13,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001835","name":"Client","type":"ClassDeclaration","paramnames":["options"]}},"classdesc":"Main entry point into showdown and starting point for all clients","augments":["BaseClient"],"name":"Client","longname":"Client","kind":"class","scope":"global","params":[{"type":{"names":["ClientOptions"]},"optional":true,"defaultvalue":"{}","description":"The options for the client","name":"options"}],"$longname":"Client","$kind":"class","$docmaLink":"?api=ps.js#Client","$members":[{"comment":"/**\r\n\t\t * The challstr given by the server. Used to log on.\r\n\t\t * @type {?string}\r\n\t\t */","meta":{"range":[1596,1616],"filename":"Client.js","lineno":67,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001911","name":"this.challstr","type":"Literal","value":null,"paramnames":[]}},"description":"The challstr given by the server. Used to log on.","type":{"names":["string"]},"nullable":true,"name":"challstr","longname":"Client#challstr","kind":"member","memberof":"Client","scope":"instance","$longname":"Client#challstr","$kind":"property","$docmaLink":"?api=ps.js#Client#challstr"},{"comment":"/**\r\n    * Clears an immediate.\r\n    * @param {Immediate} immediate Immediate to cancel\r\n    */","meta":{"range":[3198,3298],"filename":"BaseClient.js","lineno":116,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001764","name":"BaseClient#clearImmediate","type":"MethodDefinition","paramnames":["immediate"]},"vars":{"":null}},"description":"Clears an immediate.","params":[{"type":{"names":["Immediate"]},"description":"Immediate to cancel","name":"immediate"}],"name":"clearImmediate","longname":"Client#clearImmediate","kind":"function","memberof":"Client","scope":"instance","inherits":"BaseClient#clearImmediate","inherited":true,"$longname":"Client#clearImmediate","$kind":"method","$docmaLink":"?api=ps.js#Client#clearImmediate"},{"comment":"/**\r\n    * Clears an interval.\r\n    * @param {Timeout} interval Interval to cancel\r\n    */","meta":{"range":[2627,2721],"filename":"BaseClient.js","lineno":95,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001722","name":"BaseClient#clearInterval","type":"MethodDefinition","paramnames":["interval"]},"vars":{"":null}},"description":"Clears an interval.","params":[{"type":{"names":["Timeout"]},"description":"Interval to cancel","name":"interval"}],"name":"clearInterval","longname":"Client#clearInterval","kind":"function","memberof":"Client","scope":"instance","inherits":"BaseClient#clearInterval","inherited":true,"$longname":"Client#clearInterval","$kind":"method","$docmaLink":"?api=ps.js#Client#clearInterval"},{"comment":"/**\r\n    * Clears a timeout.\r\n    * @param {Timeout} timeout Timeout to cancel\r\n    */","meta":{"range":[1983,2071],"filename":"BaseClient.js","lineno":73,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001678","name":"BaseClient#clearTimeout","type":"MethodDefinition","paramnames":["timeout"]},"vars":{"":null}},"description":"Clears a timeout.","params":[{"type":{"names":["Timeout"]},"description":"Timeout to cancel","name":"timeout"}],"name":"clearTimeout","longname":"Client#clearTimeout","kind":"function","memberof":"Client","scope":"instance","inherits":"BaseClient#clearTimeout","inherited":true,"$longname":"Client#clearTimeout","$kind":"method","$docmaLink":"?api=ps.js#Client#clearTimeout"},{"comment":"/**\r\n    * Destroys all assets used by the base client.\r\n    */","meta":{"range":[1111,1387],"filename":"BaseClient.js","lineno":44,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001575","name":"BaseClient#destroy","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Destroys all assets used by the base client.","name":"destroy","longname":"Client#destroy","kind":"function","memberof":"Client","scope":"instance","params":[],"inherits":"BaseClient#destroy","inherited":true,"$longname":"Client#destroy","$kind":"method","$docmaLink":"?api=ps.js#Client#destroy"},{"comment":"/**\r\n\t * Emit a warning message or Error.\r\n\t * @param {string|Error} error The message or error to emit.\r\n\t */","meta":{"range":[2191,2239],"filename":"Client.js","lineno":95,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001952","name":"Client#error","type":"MethodDefinition","paramnames":["error"]},"vars":{"":null}},"description":"Emit a warning message or Error.","params":[{"type":{"names":["string","Error"]},"description":"The message or error to emit.","name":"error"}],"name":"error","longname":"Client#error","kind":"function","memberof":"Client","scope":"instance","$longname":"Client#error","$kind":"method","$docmaLink":"?api=ps.js#Client#error"},{"comment":"/**\r\n * Emitted when an action is run.\r\n * @event Client#actionRun\r\n * @param {Action} action The action that was run\r\n */","meta":{"filename":"MessageHandler.js","lineno":120,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{}},"description":"Emitted when an action is run.","kind":"event","name":"actionRun","params":[{"type":{"names":["Action"]},"description":"The action that was run","name":"action"}],"memberof":"Client","longname":"Client#event:actionRun","scope":"instance","$longname":"Client#event:actionRun","$kind":"event","$docmaLink":"?api=ps.js#Client#event:actionRun"},{"comment":"/**\r\n * Emitted when the challstr becomes available.\r\n * @event Client#challstr\r\n * @param {string} challstr The challstr.\r\n */","meta":{"filename":"Challstr.js","lineno":29,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{}},"description":"Emitted when the challstr becomes available.","kind":"event","name":"challstr","params":[{"type":{"names":["string"]},"description":"The challstr.","name":"challstr"}],"memberof":"Client","longname":"Client#event:challstr","scope":"instance","$longname":"Client#event:challstr","$kind":"event","$docmaLink":"?api=ps.js#Client#event:challstr"},{"comment":"/**\r\n * Emitted when the client avatar is changed.\r\n * @event Client#clientAvatarChange\r\n * @param {string} avatar The new avatar id.\r\n */","meta":{"filename":"UpdateUser.js","lineno":61,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{}},"description":"Emitted when the client avatar is changed.","kind":"event","name":"clientAvatarChange","params":[{"type":{"names":["string"]},"description":"The new avatar id.","name":"avatar"}],"memberof":"Client","longname":"Client#event:clientAvatarChange","scope":"instance","$longname":"Client#event:clientAvatarChange","$kind":"event","$docmaLink":"?api=ps.js#Client#event:clientAvatarChange"},{"comment":"/**\r\n * Emitted when the client username is changed.\r\n * @event Client#clientUsernameChange\r\n * @param {User} user The new client user.\r\n * @param {boolean} loggedIn Whether the client is logged in.\r\n */","meta":{"filename":"UpdateUser.js","lineno":54,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{}},"description":"Emitted when the client username is changed.","kind":"event","name":"clientUsernameChange","params":[{"type":{"names":["User"]},"description":"The new client user.","name":"user"},{"type":{"names":["boolean"]},"description":"Whether the client is logged in.","name":"loggedIn"}],"memberof":"Client","longname":"Client#event:clientUsernameChange","scope":"instance","$longname":"Client#event:clientUsernameChange","$kind":"event","$docmaLink":"?api=ps.js#Client#event:clientUsernameChange"},{"comment":"/**\r\n * Emitted for general debugging information.\r\n * @event Client#debug\r\n * @param {string} info The debug information\r\n */","meta":{"filename":"Client.js","lineno":170,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{}},"description":"Emitted for general debugging information.","kind":"event","name":"debug","params":[{"type":{"names":["string"]},"description":"The debug information","name":"info"}],"memberof":"Client","longname":"Client#event:debug","scope":"instance","$longname":"Client#event:debug","$kind":"event","$docmaLink":"?api=ps.js#Client#event:debug"},{"comment":"/**\r\n\t\t * Emitted when the socket disconnects.\r\n\t\t * @event Client#disconnect\r\n\t\t * @param {string} info The debug information\r\n\t\t */","meta":{"filename":"SocketHandler.js","lineno":49,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client\\ws","code":{}},"description":"Emitted when the socket disconnects.","kind":"event","name":"disconnect","params":[{"type":{"names":["string"]},"description":"The debug information","name":"info"}],"memberof":"Client","longname":"Client#event:disconnect","scope":"instance","$longname":"Client#event:disconnect","$kind":"event","$docmaLink":"?api=ps.js#Client#event:disconnect"},{"comment":"/**\r\n\t\t * Emitted when the sockets receive any data.\r\n\t\t * @event Client#raw\r\n\t\t * @param {string} info The debug information\r\n\t\t */","meta":{"filename":"SocketHandler.js","lineno":64,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client\\ws","code":{}},"description":"Emitted when the sockets receive any data.","kind":"event","name":"raw","params":[{"type":{"names":["string"]},"description":"The debug information","name":"info"}],"memberof":"Client","longname":"Client#event:raw","scope":"instance","$longname":"Client#event:raw","$kind":"event","$docmaLink":"?api=ps.js#Client#event:raw"},{"comment":"/**\r\n\t\t * Emitted when the sockets successfully connect.\r\n\t\t * @event Client#ready\r\n\t\t * @param {string} info The debug information\r\n\t\t */","meta":{"filename":"Client.js","lineno":75,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{}},"description":"Emitted when the sockets successfully connect.","kind":"event","name":"ready","params":[{"type":{"names":["string"]},"description":"The debug information","name":"info"}],"memberof":"Client","longname":"Client#event:ready","scope":"instance","$longname":"Client#event:ready","$kind":"event","$docmaLink":"?api=ps.js#Client#event:ready"},{"comment":"/**\r\n * Emitted when a room is initialized.\r\n * @event Client#roomInit\r\n * @param {Room} room The Room that was initialized.\r\n * @param {string} roomType The type of the room that was initialized.\r\n */","meta":{"filename":"RoomInit.js","lineno":26,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{}},"description":"Emitted when a room is initialized.","kind":"event","name":"roomInit","params":[{"type":{"names":["Room"]},"description":"The Room that was initialized.","name":"room"},{"type":{"names":["string"]},"description":"The type of the room that was initialized.","name":"roomType"}],"memberof":"Client","longname":"Client#event:roomInit","scope":"instance","$longname":"Client#event:roomInit","$kind":"event","$docmaLink":"?api=ps.js#Client#event:roomInit"},{"comment":"/**\r\n * Emitted when text is recieved from the server to be displayed directly in the room log.\r\n * @event Client#roomLogMessage\r\n * @param {Room} room The room the message was sent in.\r\n * @param {string} message The message to be displayed.\r\n */","meta":{"filename":"MessageHandler.js","lineno":126,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{}},"description":"Emitted when text is recieved from the server to be displayed directly in the room log.","kind":"event","name":"roomLogMessage","params":[{"type":{"names":["Room"]},"description":"The room the message was sent in.","name":"room"},{"type":{"names":["string"]},"description":"The message to be displayed.","name":"message"}],"memberof":"Client","longname":"Client#event:roomLogMessage","scope":"instance","$longname":"Client#event:roomLogMessage","$kind":"event","$docmaLink":"?api=ps.js#Client#event:roomLogMessage"},{"comment":"/**\r\n * Emitted when a room title becomes available.\r\n * @event Client#roomTitle\r\n * @param {Room} room The Room that was named.\r\n * @param {string} roomName The name of the room.\r\n */","meta":{"filename":"RoomTitle.js","lineno":25,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{}},"description":"Emitted when a room title becomes available.","kind":"event","name":"roomTitle","params":[{"type":{"names":["Room"]},"description":"The Room that was named.","name":"room"},{"type":{"names":["string"]},"description":"The name of the room.","name":"roomName"}],"memberof":"Client","longname":"Client#event:roomTitle","scope":"instance","$longname":"Client#event:roomTitle","$kind":"event","$docmaLink":"?api=ps.js#Client#event:roomTitle"},{"comment":"/**\r\n * Emitted when a room userlist becomes available.\r\n * <warn>Not emitted on user join or leave. See {@link client#roomUserJoin} and {@link client#roomUserLeave}\r\n * @event Client#roomUserUpdate\r\n * @param {Room} room The Room.\r\n * @param {UserStore} users The new userlist.\r\n */","meta":{"filename":"RoomUserList.js","lineno":34,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\actions","code":{}},"description":"Emitted when a room userlist becomes available.\r<warn>Not emitted on user join or leave. See {@link client#roomUserJoin} and {@link client#roomUserLeave}","kind":"event","name":"roomUserUpdate","params":[{"type":{"names":["Room"]},"description":"The Room.","name":"room"},{"type":{"names":["UserStore"]},"description":"The new userlist.","name":"users"}],"memberof":"Client","longname":"Client#event:roomUserUpdate","scope":"instance","$longname":"Client#event:roomUserUpdate","$kind":"event","$docmaLink":"?api=ps.js#Client#event:roomUserUpdate"},{"comment":"/**\r\n * Emitted for general warnings.\r\n * @event Client#warn\r\n * @param {string} info The warning\r\n */","meta":{"filename":"Client.js","lineno":164,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{}},"description":"Emitted for general warnings.","kind":"event","name":"warn","params":[{"type":{"names":["string"]},"description":"The warning","name":"info"}],"memberof":"Client","longname":"Client#event:warn","scope":"instance","$longname":"Client#event:warn","$kind":"event","$docmaLink":"?api=ps.js#Client#event:warn"},{"comment":"/**\r\n\t * Run when a message is received from the server\r\n\t * @param {string} message The message received\r\n\t */","meta":{"range":[2522,2593],"filename":"Client.js","lineno":111,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001980","name":"Client#handleMessage","type":"MethodDefinition","paramnames":["message"]},"vars":{"":null}},"description":"Run when a message is received from the server","params":[{"type":{"names":["string"]},"description":"The message received","name":"message"}],"name":"handleMessage","longname":"Client#handleMessage","kind":"function","memberof":"Client","scope":"instance","$longname":"Client#handleMessage","$kind":"method","$docmaLink":"?api=ps.js#Client#handleMessage"},{"comment":"/**\r\n\t\t * Whether the client is logged in currently.\r\n\t\t * @type {boolean}\r\n\t\t */","meta":{"range":[1367,1388],"filename":"Client.js","lineno":55,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001899","name":"this.loggedIn","type":"Literal","value":false,"paramnames":[]}},"description":"Whether the client is logged in currently.","type":{"names":["boolean"]},"name":"loggedIn","longname":"Client#loggedIn","kind":"member","memberof":"Client","scope":"instance","$longname":"Client#loggedIn","$kind":"property","$docmaLink":"?api=ps.js#Client#loggedIn"},{"comment":"/**\r\n\t * Login with the username and password provided. Requires the client to have a challstr so if the challstr has not\r\n\t * been received yet the client will wait for it before logging in.\r\n\t * @param {string} username The username for the user.\r\n\t * @param {password} password The password for the user.\r\n\t */","meta":{"range":[2914,3709],"filename":"Client.js","lineno":121,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001993","name":"Client#login","type":"MethodDefinition","paramnames":["username","password"]},"vars":{"":null}},"description":"Login with the username and password provided. Requires the client to have a challstr so if the challstr has not\rbeen received yet the client will wait for it before logging in.","params":[{"type":{"names":["string"]},"description":"The username for the user.","name":"username"},{"type":{"names":["password"]},"description":"The password for the user.","name":"password"}],"name":"login","longname":"Client#login","kind":"function","memberof":"Client","scope":"instance","$longname":"Client#login","$kind":"method","$docmaLink":"?api=ps.js#Client#login"},{"comment":"/**\r\n\t\t * The client's message handler\r\n\t\t * @type {MessageHandler}\r\n\t\t */","meta":{"range":[1131,1177],"filename":"Client.js","lineno":43,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001885","name":"this.messageHandler","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's message handler","type":{"names":["MessageHandler"]},"name":"messageHandler","longname":"Client#messageHandler","kind":"member","memberof":"Client","scope":"instance","$longname":"Client#messageHandler","$kind":"property","$docmaLink":"?api=ps.js#Client#messageHandler"},{"comment":"/**\r\n\t * Run when the client is ready.\r\n\t */","meta":{"range":[1673,1927],"filename":"Client.js","lineno":73,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001916","name":"Client#onReady","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Run when the client is ready.","name":"onReady","longname":"Client#onReady","kind":"function","memberof":"Client","scope":"instance","params":[],"$longname":"Client#onReady","$kind":"method","$docmaLink":"?api=ps.js#Client#onReady"},{"comment":"/**\r\n          * The options the client was instantiated with\r\n          * @type {ClientOptions}\r\n          */","meta":{"range":[982,1035],"filename":"BaseClient.js","lineno":38,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001565","name":"this.options","type":"CallExpression","value":"","paramnames":[]}},"description":"The options the client was instantiated with","type":{"names":["ClientOptions"]},"name":"options","longname":"Client#options","kind":"member","memberof":"Client","scope":"instance","inherits":"BaseClient#options","inherited":true,"$longname":"Client#options","$kind":"property","$docmaLink":"?api=ps.js#Client#options"},{"comment":"/**\r\n\t\t * The ranks on the server.\r\n\t\t * @type {Rank[]}\r\n\t\t */","meta":{"range":[1250,1275],"filename":"Client.js","lineno":49,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001893","name":"this.ranks","type":"Identifier","value":"defaultRanks","paramnames":[]}},"description":"The ranks on the server.","type":{"names":["Array.<Rank>"]},"name":"ranks","longname":"Client#ranks","kind":"member","memberof":"Client","scope":"instance","$longname":"Client#ranks","$kind":"property","$docmaLink":"?api=ps.js#Client#ranks"},{"comment":"/**\r\n\t * Whether the client is ready.\r\n\t * @readonly\r\n\t * @returns {boolean}\r\n\t */","meta":{"range":[3799,3842],"filename":"Client.js","lineno":157,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100002129","name":"Client#ready","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Whether the client is ready.","readonly":true,"returns":[{"type":{"names":["boolean"]}}],"name":"ready","longname":"Client#ready","kind":"member","memberof":"Client","scope":"instance","params":[],"$longname":"Client#ready","$kind":"property","$docmaLink":"?api=ps.js#Client#ready"},{"comment":"/**\r\n\t\t * All known rooms on the server\r\n\t\t * @type {RoomStore<string, Room>}\r\n\t\t */","meta":{"range":[727,759],"filename":"Client.js","lineno":24,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001849","name":"this.rooms","type":"NewExpression","value":"","paramnames":[]}},"description":"All known rooms on the server","type":{"names":["RoomStore.<string, Room>"]},"name":"rooms","longname":"Client#rooms","kind":"member","memberof":"Client","scope":"instance","$longname":"Client#rooms","$kind":"property","$docmaLink":"?api=ps.js#Client#rooms"},{"comment":"/**\r\n\t * Send a message to the global room\r\n\t * @param {string} message The message to send\r\n\t */","meta":{"range":[2344,2403],"filename":"Client.js","lineno":103,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001964","name":"Client#sendToGlobal","type":"MethodDefinition","paramnames":["message"]},"vars":{"":null}},"description":"Send a message to the global room","params":[{"type":{"names":["string"]},"description":"The message to send","name":"message"}],"name":"sendToGlobal","longname":"Client#sendToGlobal","kind":"function","memberof":"Client","scope":"instance","$longname":"Client#sendToGlobal","$kind":"method","$docmaLink":"?api=ps.js#Client#sendToGlobal"},{"comment":"/**\r\n    * Sets an immediate that will be automatically cancelled if the client is destroyed.\r\n    * @param {Function} fn Function to execute\r\n    * @param {...*} args Arguments for the function\r\n    * @returns {Immediate}\r\n    */","meta":{"range":[2959,3095],"filename":"BaseClient.js","lineno":106,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001739","name":"BaseClient#setImmediate","type":"MethodDefinition","paramnames":["fn","args"]},"vars":{"":null}},"description":"Sets an immediate that will be automatically cancelled if the client is destroyed.","params":[{"type":{"names":["function"]},"description":"Function to execute","name":"fn"},{"type":{"names":["*"]},"variable":true,"description":"Arguments for the function","name":"args"}],"returns":[{"type":{"names":["Immediate"]}}],"name":"setImmediate","longname":"Client#setImmediate","kind":"function","memberof":"Client","scope":"instance","inherits":"BaseClient#setImmediate","inherited":true,"$longname":"Client#setImmediate","$kind":"method","$docmaLink":"?api=ps.js#Client#setImmediate"},{"comment":"/**\r\n    * Sets an interval that will be automatically cancelled if the client is destroyed.\r\n    * @param {Function} fn Function to execute\r\n    * @param {number} delay Time to wait between executions (in milliseconds)\r\n    * @param {...*} args Arguments for the function\r\n    * @returns {Timeout}\r\n    */","meta":{"range":[2385,2529],"filename":"BaseClient.js","lineno":85,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001695","name":"BaseClient#setInterval","type":"MethodDefinition","paramnames":["fn","delay","args"]},"vars":{"":null}},"description":"Sets an interval that will be automatically cancelled if the client is destroyed.","params":[{"type":{"names":["function"]},"description":"Function to execute","name":"fn"},{"type":{"names":["number"]},"description":"Time to wait between executions (in milliseconds)","name":"delay"},{"type":{"names":["*"]},"variable":true,"description":"Arguments for the function","name":"args"}],"returns":[{"type":{"names":["Timeout"]}}],"name":"setInterval","longname":"Client#setInterval","kind":"function","memberof":"Client","scope":"instance","inherits":"BaseClient#setInterval","inherited":true,"$longname":"Client#setInterval","$kind":"method","$docmaLink":"?api=ps.js#Client#setInterval"},{"comment":"/**\r\n    * Sets a timeout that will be automatically cancelled if the client is destroyed.\r\n    * @param {Function} fn Function to execute\r\n    * @param {number} delay Time to wait before executing (in milliseconds)\r\n    * @param {...*} args Arguments for the function\r\n    * @returns {Timeout}\r\n    */","meta":{"range":[1697,1889],"filename":"BaseClient.js","lineno":60,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001639","name":"BaseClient#setTimeout","type":"MethodDefinition","paramnames":["fn","delay","args"]},"vars":{"":null}},"description":"Sets a timeout that will be automatically cancelled if the client is destroyed.","params":[{"type":{"names":["function"]},"description":"Function to execute","name":"fn"},{"type":{"names":["number"]},"description":"Time to wait before executing (in milliseconds)","name":"delay"},{"type":{"names":["*"]},"variable":true,"description":"Arguments for the function","name":"args"}],"returns":[{"type":{"names":["Timeout"]}}],"name":"setTimeout","longname":"Client#setTimeout","kind":"function","memberof":"Client","scope":"instance","inherits":"BaseClient#setTimeout","inherited":true,"$longname":"Client#setTimeout","$kind":"method","$docmaLink":"?api=ps.js#Client#setTimeout"},{"comment":"/**\r\n\t\t * The user the client is currently logged in as.\r\n\t\t * @type {User}\r\n\t\t */","meta":{"range":[1481,1497],"filename":"Client.js","lineno":61,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001905","name":"this.user","type":"Literal","value":null,"paramnames":[]}},"description":"The user the client is currently logged in as.","type":{"names":["User"]},"name":"user","longname":"Client#user","kind":"member","memberof":"Client","scope":"instance","$longname":"Client#user","$kind":"property","$docmaLink":"?api=ps.js#Client#user"},{"comment":"/**\r\n\t\t * All known users on the server\r\n\t\t * @type {UserStore<string, User>}\r\n\t\t */","meta":{"range":[898,930],"filename":"Client.js","lineno":31,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001869","name":"this.users","type":"NewExpression","value":"","paramnames":[]}},"description":"All known users on the server","type":{"names":["UserStore.<string, User>"]},"name":"users","longname":"Client#users","kind":"member","memberof":"Client","scope":"instance","$longname":"Client#users","$kind":"property","$docmaLink":"?api=ps.js#Client#users"},{"comment":"/**\r\n\t * Emit a warning message.\r\n\t * @param {string} message The message to emit.\r\n\t */","meta":{"range":[2023,2073],"filename":"Client.js","lineno":87,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001940","name":"Client#warn","type":"MethodDefinition","paramnames":["message"]},"vars":{"":null}},"description":"Emit a warning message.","params":[{"type":{"names":["string"]},"description":"The message to emit.","name":"message"}],"name":"warn","longname":"Client#warn","kind":"function","memberof":"Client","scope":"instance","$longname":"Client#warn","$kind":"method","$docmaLink":"?api=ps.js#Client#warn"},{"comment":"/**\r\n\t\t * The client's socket handler\r\n\t\t * @type {SocketHandler}\r\n\t\t */","meta":{"range":[1013,1046],"filename":"Client.js","lineno":37,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001877","name":"this.ws","type":"NewExpression","value":"","paramnames":[]}},"description":"The client's socket handler","type":{"names":["SocketHandler"]},"name":"ws","longname":"Client#ws","kind":"member","memberof":"Client","scope":"instance","$longname":"Client#ws","$kind":"property","$docmaLink":"?api=ps.js#Client#ws"}],"$constructor":{"comment":"/**\r\n\t * @param {ClientOptions} [options={}] The options for the client\r\n\t */","meta":{"range":[592,1621],"filename":"Client.js","lineno":17,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100001839","name":"Client","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"params":[{"type":{"names":["ClientOptions"]},"optional":true,"defaultvalue":"{}","description":"The options for the client","name":"options"}],"name":"Client","longname":"Client","kind":"class","scope":"global","undocumented":true,"$longname":"Client","$kind":"constructor","$docmaLink":"?api=ps.js#Client"}},{"comment":"/**\r\n * Options for a client.\r\n * @typedef {Object} ClientOptions\r\n * @property {String} [server=sim.smogon.com/showdown/websocket] URL of the web socket server to connect to.\r\n * @property {String} [loginServer=play.pokemonshowdown.com/action.php] URL of the authentication server to use.\r\n * @property {string[]} [autoJoinRooms=[]] Chat rooms to join automatically on connect.\r\n * @property {boolean} [autoFetchRooms=true] Whether to automatically retrieve the names of all rooms on the server\r\n * and store them as uninitialized rooms.\r\n * @property {string} [lobby=lobby] The default room on the server\r\n * @property {WebsocketOptions} [ws] Options for the websocket.\r\n * @property {HTTPOptions} [http] Options for http requests.\r\n */","meta":{"filename":"Static.js","lineno":1,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{}},"description":"Options for a client.","kind":"typedef","name":"ClientOptions","type":{"names":["Object"]},"properties":[{"type":{"names":["String"]},"optional":true,"defaultvalue":"sim.smogon.com/showdown/websocket","description":"URL of the web socket server to connect to.","name":"server"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"play.pokemonshowdown.com/action.php","description":"URL of the authentication server to use.","name":"loginServer"},{"type":{"names":["Array.<string>"]},"optional":true,"defaultvalue":"[]","description":"Chat rooms to join automatically on connect.","name":"autoJoinRooms"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Whether to automatically retrieve the names of all rooms on the server\rand store them as uninitialized rooms.","name":"autoFetchRooms"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"lobby","description":"The default room on the server","name":"lobby"},{"type":{"names":["WebsocketOptions"]},"optional":true,"description":"Options for the websocket.","name":"ws"},{"type":{"names":["HTTPOptions"]},"optional":true,"description":"Options for http requests.","name":"http"}],"longname":"ClientOptions","scope":"global","$longname":"ClientOptions","$kind":"typedef","$docmaLink":"?api=ps.js#ClientOptions"},{"comment":"/**\r\n * Modified from discord.js\r\n * Credit to Amish Shah and the discord.js dev team\r\n *\r\n * @license {Apache-2.0}\r\n *\r\n * A Map with additional utility methods. This is used throughout ps.js rather than Arrays for anything that has\r\n * an ID, for significantly improved performance and ease-of-use.\r\n * @extends {Map}\r\n */","meta":{"range":[326,15984],"filename":"Collection.js","lineno":11,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003095","name":"Collection","type":"ClassDeclaration","paramnames":["iterable"]}},"classdesc":"Modified from discord.js\rCredit to Amish Shah and the discord.js dev team","license":"{Apache-2.0}\r\rA Map with additional utility methods. This is used throughout ps.js rather than Arrays for anything that has\ran ID, for significantly improved performance and ease-of-use.","augments":["Map"],"name":"Collection","longname":"Collection","kind":"class","scope":"global","params":[],"$longname":"Collection","$kind":"class","$docmaLink":"?api=ps.js#Collection","$members":[{"comment":"/**\r\n\t * Creates an ordered array of the values of this collection, and caches it internally. The array will only be\r\n\t * reconstructed if an item is added to or removed from the collection, or if you change the length of the array\r\n\t * itself. If you don't want this caching behavior, use `[...collection.values()]` or\r\n\t * `Array.from(collection.values())` instead.\r\n\t * @returns {Array}\r\n\t */","meta":{"range":[1600,1727],"filename":"Collection.js","lineno":51,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003184","name":"Collection#array","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Creates an ordered array of the values of this collection, and caches it internally. The array will only be\rreconstructed if an item is added to or removed from the collection, or if you change the length of the array\ritself. If you don't want this caching behavior, use `[...collection.values()]` or\r`Array.from(collection.values())` instead.","returns":[{"type":{"names":["Array"]}}],"name":"array","longname":"Collection#array","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#array","$kind":"method","$docmaLink":"?api=ps.js#Collection#array"},{"comment":"/**\r\n\t * Creates an identical shallow copy of this collection.\r\n\t * @returns {Collection}\r\n\t * @example const newColl = someColl.clone();\r\n\t */","meta":{"range":[13965,14032],"filename":"Collection.js","lineno":370,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004166","name":"Collection#clone","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Creates an identical shallow copy of this collection.","returns":[{"type":{"names":["Collection"]}}],"examples":["const newColl = someColl.clone();"],"name":"clone","longname":"Collection#clone","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#clone","$kind":"method","$docmaLink":"?api=ps.js#Collection#clone"},{"comment":"/**\r\n\t * Combines this collection with others into a new collection. None of the source collections are modified.\r\n\t * @param {...Collection} collections Collections to merge\r\n\t * @returns {Collection}\r\n\t * @example const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\r\n\t */","meta":{"range":[14334,14514],"filename":"Collection.js","lineno":380,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004180","name":"Collection#concat","type":"MethodDefinition","paramnames":["collections"]},"vars":{"":null}},"description":"Combines this collection with others into a new collection. None of the source collections are modified.","params":[{"type":{"names":["Collection"]},"variable":true,"description":"Collections to merge","name":"collections"}],"returns":[{"type":{"names":["Collection"]}}],"examples":["const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);"],"name":"concat","longname":"Collection#concat","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#concat","$kind":"method","$docmaLink":"?api=ps.js#Collection#concat"},{"comment":"/**\r\n\t * Identical to\r\n\t * [Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),\r\n\t * but returns the collection instead of undefined.\r\n\t * @param {Function} fn Function to execute for each element\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {Collection}\r\n\t * @example\r\n\t * collection\r\n\t *  .each(user => console.log(user.username))\r\n\t *  .filter(user => user.bot)\r\n\t *  .each(user => console.log(user.username));\r\n\t */","meta":{"range":[13200,13269],"filename":"Collection.js","lineno":343,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004126","name":"Collection#each","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Identical to\r[Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),\rbut returns the collection instead of undefined.","params":[{"type":{"names":["function"]},"description":"Function to execute for each element","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["Collection"]}}],"examples":["collection\r .each(user => console.log(user.username))\r .filter(user => user.bot)\r .each(user => console.log(user.username));"],"name":"each","longname":"Collection#each","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#each","$kind":"method","$docmaLink":"?api=ps.js#Collection#each"},{"comment":"/**\r\n\t * Checks if this collection shares identical key-value pairings with another.\r\n\t * This is different to checking for equality using equal-signs, because\r\n\t * the collections may be different objects, but contain the same data.\r\n\t * @param {Collection} collection Collection to compare with\r\n\t * @returns {boolean} Whether the collections have identical contents\r\n\t */","meta":{"range":[14896,15215],"filename":"Collection.js","lineno":395,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004213","name":"Collection#equals","type":"MethodDefinition","paramnames":["collection"]},"vars":{"":null}},"description":"Checks if this collection shares identical key-value pairings with another.\rThis is different to checking for equality using equal-signs, because\rthe collections may be different objects, but contain the same data.","params":[{"type":{"names":["Collection"]},"description":"Collection to compare with","name":"collection"}],"returns":[{"type":{"names":["boolean"]},"description":"Whether the collections have identical contents"}],"name":"equals","longname":"Collection#equals","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#equals","$kind":"method","$docmaLink":"?api=ps.js#Collection#equals"},{"comment":"/**\r\n\t * Checks if all items passes a test. Identical in behavior to\r\n\t * [Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).\r\n\t * @param {Function} fn Function used to test (should return a boolean)\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {boolean}\r\n\t * @example collection.every(user => !user.bot);\r\n\t */","meta":{"range":[11520,11706],"filename":"Collection.js","lineno":294,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004023","name":"Collection#every","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Checks if all items passes a test. Identical in behavior to\r[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).","params":[{"type":{"names":["function"]},"description":"Function used to test (should return a boolean)","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["boolean"]}}],"examples":["collection.every(user => !user.bot);"],"name":"every","longname":"Collection#every","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#every","$kind":"method","$docmaLink":"?api=ps.js#Collection#every"},{"comment":"/**\r\n\t * Identical to\r\n\t * [Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\r\n\t * but returns a Collection instead of an Array.\r\n\t * @param {Function} fn The function to test with (should return boolean)\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {Collection}\r\n\t * @example collection.filter(user => user.username === 'Bob');\r\n\t */","meta":{"range":[8747,9004],"filename":"Collection.js","lineno":224,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003815","name":"Collection#filter","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Identical to\r[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\rbut returns a Collection instead of an Array.","params":[{"type":{"names":["function"]},"description":"The function to test with (should return boolean)","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["Collection"]}}],"examples":["collection.filter(user => user.username === 'Bob');"],"name":"filter","longname":"Collection#filter","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#filter","$kind":"method","$docmaLink":"?api=ps.js#Collection#filter"},{"comment":"/**\r\n\t * Searches for a single item where the given function returns a truthy value. This behaves like\r\n\t * [Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\r\n\t * <warn>All collections used in ps.js are mapped using their `id` property, and if you want to find by id you\r\n\t * should use the `get` method. See\r\n\t * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>\r\n\t * @param {Function} fn The function to test with (should return boolean)\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {*}\r\n\t * @example collection.find(user => user.username === 'Bob');\r\n\t */","meta":{"range":[6788,6975],"filename":"Collection.js","lineno":173,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003696","name":"Collection#find","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Searches for a single item where the given function returns a truthy value. This behaves like\r[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\r<warn>All collections used in ps.js are mapped using their `id` property, and if you want to find by id you\rshould use the `get` method. See\r[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>","params":[{"type":{"names":["function"]},"description":"The function to test with (should return boolean)","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["*"]}}],"examples":["collection.find(user => user.username === 'Bob');"],"name":"find","longname":"Collection#find","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#find","$kind":"method","$docmaLink":"?api=ps.js#Collection#find"},{"comment":"/**\r\n\t * Searches for the key of a single item where the given function returns a truthy value. This behaves like\r\n\t * [Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex),\r\n\t * but returns the key rather than the positional index.\r\n\t * @param {Function} fn The function to test with (should return boolean)\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {*}\r\n\t * @example collection.findKey(user => user.username === 'Bob');\r\n\t */","meta":{"range":[7550,7771],"filename":"Collection.js","lineno":191,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003731","name":"Collection#findKey","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Searches for the key of a single item where the given function returns a truthy value. This behaves like\r[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex),\rbut returns the key rather than the positional index.","params":[{"type":{"names":["function"]},"description":"The function to test with (should return boolean)","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["*"]}}],"examples":["collection.findKey(user => user.username === 'Bob');"],"name":"findKey","longname":"Collection#findKey","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#findKey","$kind":"method","$docmaLink":"?api=ps.js#Collection#findKey"},{"comment":"/**\r\n\t * Obtains the first value(s) in this collection.\r\n\t * @param {number} [amount] Amount of values to obtain from the beginning\r\n\t * @returns {*|Array<*>} A single value if no amount is provided or an array of values, starting from the end if\r\n\t * amount is negative\r\n\t */","meta":{"range":[2548,2875],"filename":"Collection.js","lineno":74,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003252","name":"Collection#first","type":"MethodDefinition","paramnames":["amount"]},"vars":{"":null}},"description":"Obtains the first value(s) in this collection.","params":[{"type":{"names":["number"]},"optional":true,"description":"Amount of values to obtain from the beginning","name":"amount"}],"returns":[{"type":{"names":["*","Array.<*>"]},"description":"A single value if no amount is provided or an array of values, starting from the end if\ramount is negative"}],"name":"first","longname":"Collection#first","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#first","$kind":"method","$docmaLink":"?api=ps.js#Collection#first"},{"comment":"/**\r\n\t * Obtains the first key(s) in this collection.\r\n\t * @param {number} [amount] Amount of keys to obtain from the beginning\r\n\t * @returns {*|Array<*>} A single key if no amount is provided or an array of keys, starting from the end if\r\n\t * amount is negative\r\n\t */","meta":{"range":[3151,3480],"filename":"Collection.js","lineno":90,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003332","name":"Collection#firstKey","type":"MethodDefinition","paramnames":["amount"]},"vars":{"":null}},"description":"Obtains the first key(s) in this collection.","params":[{"type":{"names":["number"]},"optional":true,"description":"Amount of keys to obtain from the beginning","name":"amount"}],"returns":[{"type":{"names":["*","Array.<*>"]},"description":"A single key if no amount is provided or an array of keys, starting from the end if\ramount is negative"}],"name":"firstKey","longname":"Collection#firstKey","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#firstKey","$kind":"method","$docmaLink":"?api=ps.js#Collection#firstKey"},{"comment":"/**\r\n\t * Creates an ordered array of the keys of this collection, and caches it internally. The array will only be\r\n\t * reconstructed if an item is added to or removed from the collection, or if you change the length of the array\r\n\t * itself. If you don't want this caching behavior, use `[...collection.keys()]` or\r\n\t * `Array.from(collection.keys())` instead.\r\n\t * @returns {Array}\r\n\t */","meta":{"range":[2124,2264],"filename":"Collection.js","lineno":63,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003218","name":"Collection#keyArray","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Creates an ordered array of the keys of this collection, and caches it internally. The array will only be\rreconstructed if an item is added to or removed from the collection, or if you change the length of the array\ritself. If you don't want this caching behavior, use `[...collection.keys()]` or\r`Array.from(collection.keys())` instead.","returns":[{"type":{"names":["Array"]}}],"name":"keyArray","longname":"Collection#keyArray","kind":"function","memberof":"Collection","scope":"instance","params":[],"$longname":"Collection#keyArray","$kind":"method","$docmaLink":"?api=ps.js#Collection#keyArray"},{"comment":"/**\r\n\t * Obtains the last value(s) in this collection. This relies on {@link Collection#array}, and thus the caching\r\n\t * mechanism applies here as well.\r\n\t * @param {number} [amount] Amount of values to obtain from the end\r\n\t * @returns {*|Array<*>} A single value if no amount is provided or an array of values, starting from the start if\r\n\t * amount is negative\r\n\t */","meta":{"range":[3858,4079],"filename":"Collection.js","lineno":107,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003412","name":"Collection#last","type":"MethodDefinition","paramnames":["amount"]},"vars":{"":null}},"description":"Obtains the last value(s) in this collection. This relies on {@link Collection#array}, and thus the caching\rmechanism applies here as well.","params":[{"type":{"names":["number"]},"optional":true,"description":"Amount of values to obtain from the end","name":"amount"}],"returns":[{"type":{"names":["*","Array.<*>"]},"description":"A single value if no amount is provided or an array of values, starting from the start if\ramount is negative"}],"name":"last","longname":"Collection#last","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#last","$kind":"method","$docmaLink":"?api=ps.js#Collection#last"},{"comment":"/**\r\n\t * Obtains the last key(s) in this collection. This relies on {@link Collection#keyArray}, and thus the caching\r\n\t * mechanism applies here as well.\r\n\t * @param {number} [amount] Amount of keys to obtain from the end\r\n\t * @returns {*|Array<*>} A single key if no amount is provided or an array of keys, starting from the start if\r\n\t * amount is negative\r\n\t */","meta":{"range":[4452,4682],"filename":"Collection.js","lineno":122,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003462","name":"Collection#lastKey","type":"MethodDefinition","paramnames":["amount"]},"vars":{"":null}},"description":"Obtains the last key(s) in this collection. This relies on {@link Collection#keyArray}, and thus the caching\rmechanism applies here as well.","params":[{"type":{"names":["number"]},"optional":true,"description":"Amount of keys to obtain from the end","name":"amount"}],"returns":[{"type":{"names":["*","Array.<*>"]},"description":"A single key if no amount is provided or an array of keys, starting from the start if\ramount is negative"}],"name":"lastKey","longname":"Collection#lastKey","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#lastKey","$kind":"method","$docmaLink":"?api=ps.js#Collection#lastKey"},{"comment":"/**\r\n\t * Maps each item to another value. Identical in behavior to\r\n\t * [Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).\r\n\t * @param {Function} fn Function that produces an element of the new array, taking three arguments\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {Array}\r\n\t * @example collection.map(user => user.tag);\r\n\t */","meta":{"range":[10248,10463],"filename":"Collection.js","lineno":262,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003939","name":"Collection#map","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Maps each item to another value. Identical in behavior to\r[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","params":[{"type":{"names":["function"]},"description":"Function that produces an element of the new array, taking three arguments","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["Array"]}}],"examples":["collection.map(user => user.tag);"],"name":"map","longname":"Collection#map","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#map","$kind":"method","$docmaLink":"?api=ps.js#Collection#map"},{"comment":"/**\r\n\t * Partitions the collection into two collections where the first collection\r\n\t * contains the items that passed and the second contains the items that failed.\r\n\t * @param {Function} fn Function used to test (should return a boolean)\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {Collection[]}\r\n\t * @example const [big, small] = collection.partition(guild => guild.memberCount > 250);\r\n\t */","meta":{"range":[9450,9812],"filename":"Collection.js","lineno":241,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003866","name":"Collection#partition","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Partitions the collection into two collections where the first collection\rcontains the items that passed and the second contains the items that failed.","params":[{"type":{"names":["function"]},"description":"Function used to test (should return a boolean)","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["Array.<Collection>"]}}],"examples":["const [big, small] = collection.partition(guild => guild.memberCount > 250);"],"name":"partition","longname":"Collection#partition","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#partition","$kind":"method","$docmaLink":"?api=ps.js#Collection#partition"},{"comment":"/**\r\n\t * Obtains unique random value(s) from this collection. This relies on {@link Collection#array}, and thus the caching\r\n\t * mechanism applies here as well.\r\n\t * @param {number} [amount] Amount of values to obtain randomly\r\n\t * @returns {*|Array<*>} A single value if no amount is provided or an array of values\r\n\t */","meta":{"range":[5011,5372],"filename":"Collection.js","lineno":136,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003512","name":"Collection#random","type":"MethodDefinition","paramnames":["amount"]},"vars":{"":null}},"description":"Obtains unique random value(s) from this collection. This relies on {@link Collection#array}, and thus the caching\rmechanism applies here as well.","params":[{"type":{"names":["number"]},"optional":true,"description":"Amount of values to obtain randomly","name":"amount"}],"returns":[{"type":{"names":["*","Array.<*>"]},"description":"A single value if no amount is provided or an array of values"}],"name":"random","longname":"Collection#random","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#random","$kind":"method","$docmaLink":"?api=ps.js#Collection#random"},{"comment":"/**\r\n\t * Obtains unique random key(s) from this collection. This relies on {@link Collection#keyArray}, and thus the caching\r\n\t * mechanism applies here as well.\r\n\t * @param {number} [amount] Amount of keys to obtain randomly\r\n\t * @returns {*|Array<*>} A single key if no amount is provided or an array\r\n\t */","meta":{"range":[5688,6055],"filename":"Collection.js","lineno":152,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003604","name":"Collection#randomKey","type":"MethodDefinition","paramnames":["amount"]},"vars":{"":null}},"description":"Obtains unique random key(s) from this collection. This relies on {@link Collection#keyArray}, and thus the caching\rmechanism applies here as well.","params":[{"type":{"names":["number"]},"optional":true,"description":"Amount of keys to obtain randomly","name":"amount"}],"returns":[{"type":{"names":["*","Array.<*>"]},"description":"A single key if no amount is provided or an array"}],"name":"randomKey","longname":"Collection#randomKey","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#randomKey","$kind":"method","$docmaLink":"?api=ps.js#Collection#randomKey"},{"comment":"/**\r\n\t * Applies a function to produce a single value. Identical in behavior to\r\n\t * [Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).\r\n\t * @param {Function} fn Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\r\n\t * and `collection`\r\n\t * @param {*} [initialValue] Starting value for the accumulator\r\n\t * @returns {*}\r\n\t * @example collection.reduce((acc, guild) => acc + guild.memberCount, 0);\r\n\t */","meta":{"range":[12219,12673],"filename":"Collection.js","lineno":311,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004059","name":"Collection#reduce","type":"MethodDefinition","paramnames":["fn","initialValue"]},"vars":{"":null}},"description":"Applies a function to produce a single value. Identical in behavior to\r[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).","params":[{"type":{"names":["function"]},"description":"Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\rand `collection`","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Starting value for the accumulator","name":"initialValue"}],"returns":[{"type":{"names":["*"]}}],"examples":["collection.reduce((acc, guild) => acc + guild.memberCount, 0);"],"name":"reduce","longname":"Collection#reduce","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#reduce","$kind":"method","$docmaLink":"?api=ps.js#Collection#reduce"},{"comment":"/**\r\n\t * Checks if there exists an item that passes a test. Identical in behavior to\r\n\t * [Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).\r\n\t * @param {Function} fn Function used to test (should return a boolean)\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {boolean}\r\n\t * @example collection.some(user => user.discriminator === '0000');\r\n\t */","meta":{"range":[10916,11100],"filename":"Collection.js","lineno":278,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003988","name":"Collection#some","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Checks if there exists an item that passes a test. Identical in behavior to\r[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).","params":[{"type":{"names":["function"]},"description":"Function used to test (should return a boolean)","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["boolean"]}}],"examples":["collection.some(user => user.discriminator === '0000');"],"name":"some","longname":"Collection#some","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#some","$kind":"method","$docmaLink":"?api=ps.js#Collection#some"},{"comment":"/**\r\n\t * The sort() method sorts the elements of a collection and returns it.\r\n\t * The sort is not necessarily stable. The default sort order is according to string Unicode code points.\r\n\t * @param {Function} [compareFunction] Specifies a function that defines the sort order.\r\n\t * If omitted, the collection is sorted according to each character's Unicode code point value,\r\n\t * according to the string conversion of each element.\r\n\t * @returns {Collection}\r\n\t * @example collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\r\n\t */","meta":{"range":[15785,15981],"filename":"Collection.js","lineno":414,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004272","name":"Collection#sort","type":"MethodDefinition","paramnames":["compareFunction"]},"vars":{"":null}},"description":"The sort() method sorts the elements of a collection and returns it.\rThe sort is not necessarily stable. The default sort order is according to string Unicode code points.","params":[{"type":{"names":["function"]},"optional":true,"description":"Specifies a function that defines the sort order.\rIf omitted, the collection is sorted according to each character's Unicode code point value,\raccording to the string conversion of each element.","name":"compareFunction"}],"returns":[{"type":{"names":["Collection"]}}],"examples":["collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);"],"name":"sort","longname":"Collection#sort","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#sort","$kind":"method","$docmaLink":"?api=ps.js#Collection#sort"},{"comment":"/**\r\n\t * Removes entries that satisfy the provided filter function.\r\n\t * @param {Function} fn Function used to test (should return a boolean)\r\n\t * @param {Object} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {number} The number of removed entries\r\n\t */","meta":{"range":[8057,8301],"filename":"Collection.js","lineno":206,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003766","name":"Collection#sweep","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Removes entries that satisfy the provided filter function.","params":[{"type":{"names":["function"]},"description":"Function used to test (should return a boolean)","name":"fn"},{"type":{"names":["Object"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["number"]},"description":"The number of removed entries"}],"name":"sweep","longname":"Collection#sweep","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#sweep","$kind":"method","$docmaLink":"?api=ps.js#Collection#sweep"},{"comment":"/**\r\n\t * Runs a function on the collection and returns the collection.\r\n\t * @param {Function} fn Function to execute\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {Collection}\r\n\t * @example\r\n\t * collection\r\n\t *  .tap(coll => console.log(`${coll.size} users, including bots`))\r\n\t *  .filter(user => user.bot)\r\n\t *  .tap(coll => console.log(`${coll.size} users, excluding bots`))\r\n\t */","meta":{"range":[13701,13814],"filename":"Collection.js","lineno":359,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004141","name":"Collection#tap","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Runs a function on the collection and returns the collection.","params":[{"type":{"names":["function"]},"description":"Function to execute","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["Collection"]}}],"examples":["collection\r .tap(coll => console.log(`${coll.size} users, including bots`))\r .filter(user => user.bot)\r .tap(coll => console.log(`${coll.size} users, excluding bots`))"],"name":"tap","longname":"Collection#tap","kind":"function","memberof":"Collection","scope":"instance","$longname":"Collection#tap","$kind":"method","$docmaLink":"?api=ps.js#Collection#tap"}],"$constructor":{"comment":"","meta":{"range":[359,993],"filename":"Collection.js","lineno":12,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003099","name":"Collection","type":"MethodDefinition","paramnames":["iterable"]},"vars":{"":null}},"undocumented":true,"name":"Collection","longname":"Collection","kind":"class","scope":"global","params":[],"$longname":"Collection","$kind":"constructor","$docmaLink":"?api=ps.js#Collection"}},{"comment":"/**\r\n * Stores information about a specific type of object\r\n * @extends {Collection}\r\n */","meta":{"range":[144,1147],"filename":"DataStore.js","lineno":7,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{"id":"astnode100002738","name":"DataStore","type":"ClassDeclaration","paramnames":["client","store","iterable"]}},"classdesc":"Stores information about a specific type of object","augments":["Collection"],"name":"DataStore","longname":"DataStore","kind":"class","scope":"global","params":[{"type":{"names":["Client"]},"description":"The client that instantiated this DataStore","name":"client"},{"type":{"names":["*"]},"description":"The type of object the store holds","name":"store"},{"type":{"names":["*"]},"optional":true,"defaultvalue":null,"description":"The iterable to base this store off.","name":"iterable"}],"$longname":"DataStore","$kind":"class","$docmaLink":"?api=ps.js#DataStore","$members":[{"comment":"/**\r\n\t * Creates an ordered array of the values of this collection, and caches it internally. The array will only be\r\n\t * reconstructed if an item is added to or removed from the collection, or if you change the length of the array\r\n\t * itself. If you don't want this caching behavior, use `[...collection.values()]` or\r\n\t * `Array.from(collection.values())` instead.\r\n\t * @returns {Array}\r\n\t */","meta":{"range":[1600,1727],"filename":"Collection.js","lineno":51,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003184","name":"Collection#array","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Creates an ordered array of the values of this collection, and caches it internally. The array will only be\rreconstructed if an item is added to or removed from the collection, or if you change the length of the array\ritself. If you don't want this caching behavior, use `[...collection.values()]` or\r`Array.from(collection.values())` instead.","returns":[{"type":{"names":["Array"]}}],"name":"array","longname":"DataStore#array","kind":"function","memberof":"DataStore","scope":"instance","params":[],"inherits":"Collection#array","inherited":true,"$longname":"DataStore#array","$kind":"method","$docmaLink":"?api=ps.js#DataStore#array"},{"comment":"/**\r\n\t * Creates an identical shallow copy of this collection.\r\n\t * @returns {Collection}\r\n\t * @example const newColl = someColl.clone();\r\n\t */","meta":{"range":[13965,14032],"filename":"Collection.js","lineno":370,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004166","name":"Collection#clone","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Creates an identical shallow copy of this collection.","returns":[{"type":{"names":["Collection"]}}],"examples":["const newColl = someColl.clone();"],"name":"clone","longname":"DataStore#clone","kind":"function","memberof":"DataStore","scope":"instance","params":[],"inherits":"Collection#clone","inherited":true,"$longname":"DataStore#clone","$kind":"method","$docmaLink":"?api=ps.js#DataStore#clone"},{"comment":"/**\r\n\t * Combines this collection with others into a new collection. None of the source collections are modified.\r\n\t * @param {...Collection} collections Collections to merge\r\n\t * @returns {Collection}\r\n\t * @example const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\r\n\t */","meta":{"range":[14334,14514],"filename":"Collection.js","lineno":380,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004180","name":"Collection#concat","type":"MethodDefinition","paramnames":["collections"]},"vars":{"":null}},"description":"Combines this collection with others into a new collection. None of the source collections are modified.","params":[{"type":{"names":["Collection"]},"variable":true,"description":"Collections to merge","name":"collections"}],"returns":[{"type":{"names":["Collection"]}}],"examples":["const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);"],"name":"concat","longname":"DataStore#concat","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#concat","inherited":true,"$longname":"DataStore#concat","$kind":"method","$docmaLink":"?api=ps.js#DataStore#concat"},{"comment":"/**\r\n\t * Identical to\r\n\t * [Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),\r\n\t * but returns the collection instead of undefined.\r\n\t * @param {Function} fn Function to execute for each element\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {Collection}\r\n\t * @example\r\n\t * collection\r\n\t *  .each(user => console.log(user.username))\r\n\t *  .filter(user => user.bot)\r\n\t *  .each(user => console.log(user.username));\r\n\t */","meta":{"range":[13200,13269],"filename":"Collection.js","lineno":343,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004126","name":"Collection#each","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Identical to\r[Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),\rbut returns the collection instead of undefined.","params":[{"type":{"names":["function"]},"description":"Function to execute for each element","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["Collection"]}}],"examples":["collection\r .each(user => console.log(user.username))\r .filter(user => user.bot)\r .each(user => console.log(user.username));"],"name":"each","longname":"DataStore#each","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#each","inherited":true,"$longname":"DataStore#each","$kind":"method","$docmaLink":"?api=ps.js#DataStore#each"},{"comment":"/**\r\n\t * Checks if this collection shares identical key-value pairings with another.\r\n\t * This is different to checking for equality using equal-signs, because\r\n\t * the collections may be different objects, but contain the same data.\r\n\t * @param {Collection} collection Collection to compare with\r\n\t * @returns {boolean} Whether the collections have identical contents\r\n\t */","meta":{"range":[14896,15215],"filename":"Collection.js","lineno":395,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004213","name":"Collection#equals","type":"MethodDefinition","paramnames":["collection"]},"vars":{"":null}},"description":"Checks if this collection shares identical key-value pairings with another.\rThis is different to checking for equality using equal-signs, because\rthe collections may be different objects, but contain the same data.","params":[{"type":{"names":["Collection"]},"description":"Collection to compare with","name":"collection"}],"returns":[{"type":{"names":["boolean"]},"description":"Whether the collections have identical contents"}],"name":"equals","longname":"DataStore#equals","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#equals","inherited":true,"$longname":"DataStore#equals","$kind":"method","$docmaLink":"?api=ps.js#DataStore#equals"},{"comment":"/**\r\n\t * Checks if all items passes a test. Identical in behavior to\r\n\t * [Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).\r\n\t * @param {Function} fn Function used to test (should return a boolean)\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {boolean}\r\n\t * @example collection.every(user => !user.bot);\r\n\t */","meta":{"range":[11520,11706],"filename":"Collection.js","lineno":294,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004023","name":"Collection#every","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Checks if all items passes a test. Identical in behavior to\r[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).","params":[{"type":{"names":["function"]},"description":"Function used to test (should return a boolean)","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["boolean"]}}],"examples":["collection.every(user => !user.bot);"],"name":"every","longname":"DataStore#every","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#every","inherited":true,"$longname":"DataStore#every","$kind":"method","$docmaLink":"?api=ps.js#DataStore#every"},{"comment":"/**\r\n\t * Identical to\r\n\t * [Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\r\n\t * but returns a Collection instead of an Array.\r\n\t * @param {Function} fn The function to test with (should return boolean)\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {Collection}\r\n\t * @example collection.filter(user => user.username === 'Bob');\r\n\t */","meta":{"range":[8747,9004],"filename":"Collection.js","lineno":224,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003815","name":"Collection#filter","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Identical to\r[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\rbut returns a Collection instead of an Array.","params":[{"type":{"names":["function"]},"description":"The function to test with (should return boolean)","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["Collection"]}}],"examples":["collection.filter(user => user.username === 'Bob');"],"name":"filter","longname":"DataStore#filter","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#filter","inherited":true,"$longname":"DataStore#filter","$kind":"method","$docmaLink":"?api=ps.js#DataStore#filter"},{"comment":"/**\r\n\t * Searches for a single item where the given function returns a truthy value. This behaves like\r\n\t * [Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\r\n\t * <warn>All collections used in ps.js are mapped using their `id` property, and if you want to find by id you\r\n\t * should use the `get` method. See\r\n\t * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>\r\n\t * @param {Function} fn The function to test with (should return boolean)\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {*}\r\n\t * @example collection.find(user => user.username === 'Bob');\r\n\t */","meta":{"range":[6788,6975],"filename":"Collection.js","lineno":173,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003696","name":"Collection#find","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Searches for a single item where the given function returns a truthy value. This behaves like\r[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\r<warn>All collections used in ps.js are mapped using their `id` property, and if you want to find by id you\rshould use the `get` method. See\r[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>","params":[{"type":{"names":["function"]},"description":"The function to test with (should return boolean)","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["*"]}}],"examples":["collection.find(user => user.username === 'Bob');"],"name":"find","longname":"DataStore#find","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#find","inherited":true,"$longname":"DataStore#find","$kind":"method","$docmaLink":"?api=ps.js#DataStore#find"},{"comment":"/**\r\n\t * Searches for the key of a single item where the given function returns a truthy value. This behaves like\r\n\t * [Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex),\r\n\t * but returns the key rather than the positional index.\r\n\t * @param {Function} fn The function to test with (should return boolean)\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {*}\r\n\t * @example collection.findKey(user => user.username === 'Bob');\r\n\t */","meta":{"range":[7550,7771],"filename":"Collection.js","lineno":191,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003731","name":"Collection#findKey","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Searches for the key of a single item where the given function returns a truthy value. This behaves like\r[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex),\rbut returns the key rather than the positional index.","params":[{"type":{"names":["function"]},"description":"The function to test with (should return boolean)","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["*"]}}],"examples":["collection.findKey(user => user.username === 'Bob');"],"name":"findKey","longname":"DataStore#findKey","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#findKey","inherited":true,"$longname":"DataStore#findKey","$kind":"method","$docmaLink":"?api=ps.js#DataStore#findKey"},{"comment":"/**\r\n\t * Obtains the first value(s) in this collection.\r\n\t * @param {number} [amount] Amount of values to obtain from the beginning\r\n\t * @returns {*|Array<*>} A single value if no amount is provided or an array of values, starting from the end if\r\n\t * amount is negative\r\n\t */","meta":{"range":[2548,2875],"filename":"Collection.js","lineno":74,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003252","name":"Collection#first","type":"MethodDefinition","paramnames":["amount"]},"vars":{"":null}},"description":"Obtains the first value(s) in this collection.","params":[{"type":{"names":["number"]},"optional":true,"description":"Amount of values to obtain from the beginning","name":"amount"}],"returns":[{"type":{"names":["*","Array.<*>"]},"description":"A single value if no amount is provided or an array of values, starting from the end if\ramount is negative"}],"name":"first","longname":"DataStore#first","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#first","inherited":true,"$longname":"DataStore#first","$kind":"method","$docmaLink":"?api=ps.js#DataStore#first"},{"comment":"/**\r\n\t * Obtains the first key(s) in this collection.\r\n\t * @param {number} [amount] Amount of keys to obtain from the beginning\r\n\t * @returns {*|Array<*>} A single key if no amount is provided or an array of keys, starting from the end if\r\n\t * amount is negative\r\n\t */","meta":{"range":[3151,3480],"filename":"Collection.js","lineno":90,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003332","name":"Collection#firstKey","type":"MethodDefinition","paramnames":["amount"]},"vars":{"":null}},"description":"Obtains the first key(s) in this collection.","params":[{"type":{"names":["number"]},"optional":true,"description":"Amount of keys to obtain from the beginning","name":"amount"}],"returns":[{"type":{"names":["*","Array.<*>"]},"description":"A single key if no amount is provided or an array of keys, starting from the end if\ramount is negative"}],"name":"firstKey","longname":"DataStore#firstKey","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#firstKey","inherited":true,"$longname":"DataStore#firstKey","$kind":"method","$docmaLink":"?api=ps.js#DataStore#firstKey"},{"comment":"/**\r\n\t * Creates an ordered array of the keys of this collection, and caches it internally. The array will only be\r\n\t * reconstructed if an item is added to or removed from the collection, or if you change the length of the array\r\n\t * itself. If you don't want this caching behavior, use `[...collection.keys()]` or\r\n\t * `Array.from(collection.keys())` instead.\r\n\t * @returns {Array}\r\n\t */","meta":{"range":[2124,2264],"filename":"Collection.js","lineno":63,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003218","name":"Collection#keyArray","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Creates an ordered array of the keys of this collection, and caches it internally. The array will only be\rreconstructed if an item is added to or removed from the collection, or if you change the length of the array\ritself. If you don't want this caching behavior, use `[...collection.keys()]` or\r`Array.from(collection.keys())` instead.","returns":[{"type":{"names":["Array"]}}],"name":"keyArray","longname":"DataStore#keyArray","kind":"function","memberof":"DataStore","scope":"instance","params":[],"inherits":"Collection#keyArray","inherited":true,"$longname":"DataStore#keyArray","$kind":"method","$docmaLink":"?api=ps.js#DataStore#keyArray"},{"comment":"/**\r\n\t * Obtains the last value(s) in this collection. This relies on {@link Collection#array}, and thus the caching\r\n\t * mechanism applies here as well.\r\n\t * @param {number} [amount] Amount of values to obtain from the end\r\n\t * @returns {*|Array<*>} A single value if no amount is provided or an array of values, starting from the start if\r\n\t * amount is negative\r\n\t */","meta":{"range":[3858,4079],"filename":"Collection.js","lineno":107,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003412","name":"Collection#last","type":"MethodDefinition","paramnames":["amount"]},"vars":{"":null}},"description":"Obtains the last value(s) in this collection. This relies on {@link Collection#array}, and thus the caching\rmechanism applies here as well.","params":[{"type":{"names":["number"]},"optional":true,"description":"Amount of values to obtain from the end","name":"amount"}],"returns":[{"type":{"names":["*","Array.<*>"]},"description":"A single value if no amount is provided or an array of values, starting from the start if\ramount is negative"}],"name":"last","longname":"DataStore#last","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#last","inherited":true,"$longname":"DataStore#last","$kind":"method","$docmaLink":"?api=ps.js#DataStore#last"},{"comment":"/**\r\n\t * Obtains the last key(s) in this collection. This relies on {@link Collection#keyArray}, and thus the caching\r\n\t * mechanism applies here as well.\r\n\t * @param {number} [amount] Amount of keys to obtain from the end\r\n\t * @returns {*|Array<*>} A single key if no amount is provided or an array of keys, starting from the start if\r\n\t * amount is negative\r\n\t */","meta":{"range":[4452,4682],"filename":"Collection.js","lineno":122,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003462","name":"Collection#lastKey","type":"MethodDefinition","paramnames":["amount"]},"vars":{"":null}},"description":"Obtains the last key(s) in this collection. This relies on {@link Collection#keyArray}, and thus the caching\rmechanism applies here as well.","params":[{"type":{"names":["number"]},"optional":true,"description":"Amount of keys to obtain from the end","name":"amount"}],"returns":[{"type":{"names":["*","Array.<*>"]},"description":"A single key if no amount is provided or an array of keys, starting from the start if\ramount is negative"}],"name":"lastKey","longname":"DataStore#lastKey","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#lastKey","inherited":true,"$longname":"DataStore#lastKey","$kind":"method","$docmaLink":"?api=ps.js#DataStore#lastKey"},{"comment":"/**\r\n\t * Maps each item to another value. Identical in behavior to\r\n\t * [Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).\r\n\t * @param {Function} fn Function that produces an element of the new array, taking three arguments\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {Array}\r\n\t * @example collection.map(user => user.tag);\r\n\t */","meta":{"range":[10248,10463],"filename":"Collection.js","lineno":262,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003939","name":"Collection#map","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Maps each item to another value. Identical in behavior to\r[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","params":[{"type":{"names":["function"]},"description":"Function that produces an element of the new array, taking three arguments","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["Array"]}}],"examples":["collection.map(user => user.tag);"],"name":"map","longname":"DataStore#map","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#map","inherited":true,"$longname":"DataStore#map","$kind":"method","$docmaLink":"?api=ps.js#DataStore#map"},{"comment":"/**\r\n\t * Partitions the collection into two collections where the first collection\r\n\t * contains the items that passed and the second contains the items that failed.\r\n\t * @param {Function} fn Function used to test (should return a boolean)\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {Collection[]}\r\n\t * @example const [big, small] = collection.partition(guild => guild.memberCount > 250);\r\n\t */","meta":{"range":[9450,9812],"filename":"Collection.js","lineno":241,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003866","name":"Collection#partition","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Partitions the collection into two collections where the first collection\rcontains the items that passed and the second contains the items that failed.","params":[{"type":{"names":["function"]},"description":"Function used to test (should return a boolean)","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["Array.<Collection>"]}}],"examples":["const [big, small] = collection.partition(guild => guild.memberCount > 250);"],"name":"partition","longname":"DataStore#partition","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#partition","inherited":true,"$longname":"DataStore#partition","$kind":"method","$docmaLink":"?api=ps.js#DataStore#partition"},{"comment":"/**\r\n\t * Obtains unique random value(s) from this collection. This relies on {@link Collection#array}, and thus the caching\r\n\t * mechanism applies here as well.\r\n\t * @param {number} [amount] Amount of values to obtain randomly\r\n\t * @returns {*|Array<*>} A single value if no amount is provided or an array of values\r\n\t */","meta":{"range":[5011,5372],"filename":"Collection.js","lineno":136,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003512","name":"Collection#random","type":"MethodDefinition","paramnames":["amount"]},"vars":{"":null}},"description":"Obtains unique random value(s) from this collection. This relies on {@link Collection#array}, and thus the caching\rmechanism applies here as well.","params":[{"type":{"names":["number"]},"optional":true,"description":"Amount of values to obtain randomly","name":"amount"}],"returns":[{"type":{"names":["*","Array.<*>"]},"description":"A single value if no amount is provided or an array of values"}],"name":"random","longname":"DataStore#random","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#random","inherited":true,"$longname":"DataStore#random","$kind":"method","$docmaLink":"?api=ps.js#DataStore#random"},{"comment":"/**\r\n\t * Obtains unique random key(s) from this collection. This relies on {@link Collection#keyArray}, and thus the caching\r\n\t * mechanism applies here as well.\r\n\t * @param {number} [amount] Amount of keys to obtain randomly\r\n\t * @returns {*|Array<*>} A single key if no amount is provided or an array\r\n\t */","meta":{"range":[5688,6055],"filename":"Collection.js","lineno":152,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003604","name":"Collection#randomKey","type":"MethodDefinition","paramnames":["amount"]},"vars":{"":null}},"description":"Obtains unique random key(s) from this collection. This relies on {@link Collection#keyArray}, and thus the caching\rmechanism applies here as well.","params":[{"type":{"names":["number"]},"optional":true,"description":"Amount of keys to obtain randomly","name":"amount"}],"returns":[{"type":{"names":["*","Array.<*>"]},"description":"A single key if no amount is provided or an array"}],"name":"randomKey","longname":"DataStore#randomKey","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#randomKey","inherited":true,"$longname":"DataStore#randomKey","$kind":"method","$docmaLink":"?api=ps.js#DataStore#randomKey"},{"comment":"/**\r\n\t * Applies a function to produce a single value. Identical in behavior to\r\n\t * [Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).\r\n\t * @param {Function} fn Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\r\n\t * and `collection`\r\n\t * @param {*} [initialValue] Starting value for the accumulator\r\n\t * @returns {*}\r\n\t * @example collection.reduce((acc, guild) => acc + guild.memberCount, 0);\r\n\t */","meta":{"range":[12219,12673],"filename":"Collection.js","lineno":311,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004059","name":"Collection#reduce","type":"MethodDefinition","paramnames":["fn","initialValue"]},"vars":{"":null}},"description":"Applies a function to produce a single value. Identical in behavior to\r[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).","params":[{"type":{"names":["function"]},"description":"Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\rand `collection`","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Starting value for the accumulator","name":"initialValue"}],"returns":[{"type":{"names":["*"]}}],"examples":["collection.reduce((acc, guild) => acc + guild.memberCount, 0);"],"name":"reduce","longname":"DataStore#reduce","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#reduce","inherited":true,"$longname":"DataStore#reduce","$kind":"method","$docmaLink":"?api=ps.js#DataStore#reduce"},{"comment":"/**\r\n\t * Resolves a data entry to a data Object.\r\n\t * @param {string|Object} instance The id or instance of something in this DataStore\r\n\t * @returns {?Object} An instance from this DataStore\r\n\t */","meta":{"range":[977,1144],"filename":"DataStore.js","lineno":35,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{"id":"astnode100002775","name":"DataStore#resolve","type":"MethodDefinition","paramnames":["instance"]},"vars":{"":null}},"description":"Resolves a data entry to a data Object.","params":[{"type":{"names":["string","Object"]},"description":"The id or instance of something in this DataStore","name":"instance"}],"returns":[{"type":{"names":["Object"]},"nullable":true,"description":"An instance from this DataStore"}],"name":"resolve","longname":"DataStore#resolve","kind":"function","memberof":"DataStore","scope":"instance","$longname":"DataStore#resolve","$kind":"method","$docmaLink":"?api=ps.js#DataStore#resolve"},{"comment":"/**\r\n\t * Checks if there exists an item that passes a test. Identical in behavior to\r\n\t * [Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).\r\n\t * @param {Function} fn Function used to test (should return a boolean)\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {boolean}\r\n\t * @example collection.some(user => user.discriminator === '0000');\r\n\t */","meta":{"range":[10916,11100],"filename":"Collection.js","lineno":278,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003988","name":"Collection#some","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Checks if there exists an item that passes a test. Identical in behavior to\r[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).","params":[{"type":{"names":["function"]},"description":"Function used to test (should return a boolean)","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["boolean"]}}],"examples":["collection.some(user => user.discriminator === '0000');"],"name":"some","longname":"DataStore#some","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#some","inherited":true,"$longname":"DataStore#some","$kind":"method","$docmaLink":"?api=ps.js#DataStore#some"},{"comment":"/**\r\n\t * The sort() method sorts the elements of a collection and returns it.\r\n\t * The sort is not necessarily stable. The default sort order is according to string Unicode code points.\r\n\t * @param {Function} [compareFunction] Specifies a function that defines the sort order.\r\n\t * If omitted, the collection is sorted according to each character's Unicode code point value,\r\n\t * according to the string conversion of each element.\r\n\t * @returns {Collection}\r\n\t * @example collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\r\n\t */","meta":{"range":[15785,15981],"filename":"Collection.js","lineno":414,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004272","name":"Collection#sort","type":"MethodDefinition","paramnames":["compareFunction"]},"vars":{"":null}},"description":"The sort() method sorts the elements of a collection and returns it.\rThe sort is not necessarily stable. The default sort order is according to string Unicode code points.","params":[{"type":{"names":["function"]},"optional":true,"description":"Specifies a function that defines the sort order.\rIf omitted, the collection is sorted according to each character's Unicode code point value,\raccording to the string conversion of each element.","name":"compareFunction"}],"returns":[{"type":{"names":["Collection"]}}],"examples":["collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);"],"name":"sort","longname":"DataStore#sort","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#sort","inherited":true,"$longname":"DataStore#sort","$kind":"method","$docmaLink":"?api=ps.js#DataStore#sort"},{"comment":"/**\r\n\t * Removes entries that satisfy the provided filter function.\r\n\t * @param {Function} fn Function used to test (should return a boolean)\r\n\t * @param {Object} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {number} The number of removed entries\r\n\t */","meta":{"range":[8057,8301],"filename":"Collection.js","lineno":206,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100003766","name":"Collection#sweep","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Removes entries that satisfy the provided filter function.","params":[{"type":{"names":["function"]},"description":"Function used to test (should return a boolean)","name":"fn"},{"type":{"names":["Object"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["number"]},"description":"The number of removed entries"}],"name":"sweep","longname":"DataStore#sweep","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#sweep","inherited":true,"$longname":"DataStore#sweep","$kind":"method","$docmaLink":"?api=ps.js#DataStore#sweep"},{"comment":"/**\r\n\t * Runs a function on the collection and returns the collection.\r\n\t * @param {Function} fn Function to execute\r\n\t * @param {*} [thisArg] Value to use as `this` when executing function\r\n\t * @returns {Collection}\r\n\t * @example\r\n\t * collection\r\n\t *  .tap(coll => console.log(`${coll.size} users, including bots`))\r\n\t *  .filter(user => user.bot)\r\n\t *  .tap(coll => console.log(`${coll.size} users, excluding bots`))\r\n\t */","meta":{"range":[13701,13814],"filename":"Collection.js","lineno":359,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004141","name":"Collection#tap","type":"MethodDefinition","paramnames":["fn","thisArg"]},"vars":{"":null}},"description":"Runs a function on the collection and returns the collection.","params":[{"type":{"names":["function"]},"description":"Function to execute","name":"fn"},{"type":{"names":["*"]},"optional":true,"description":"Value to use as `this` when executing function","name":"thisArg"}],"returns":[{"type":{"names":["Collection"]}}],"examples":["collection\r .tap(coll => console.log(`${coll.size} users, including bots`))\r .filter(user => user.bot)\r .tap(coll => console.log(`${coll.size} users, excluding bots`))"],"name":"tap","longname":"DataStore#tap","kind":"function","memberof":"DataStore","scope":"instance","inherits":"Collection#tap","inherited":true,"$longname":"DataStore#tap","$kind":"method","$docmaLink":"?api=ps.js#DataStore#tap"}],"$constructor":{"comment":"/**\r\n\t * @param {Client} client The client that instantiated this DataStore\r\n\t * @param {*} store The type of object the store holds\r\n\t * @param {*} [iterable=null] The iterable to base this store off.\r\n\t */","meta":{"range":[393,772],"filename":"DataStore.js","lineno":13,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{"id":"astnode100002742","name":"DataStore","type":"MethodDefinition","paramnames":["client","store","iterable"]},"vars":{"":null}},"params":[{"type":{"names":["Client"]},"description":"The client that instantiated this DataStore","name":"client"},{"type":{"names":["*"]},"description":"The type of object the store holds","name":"store"},{"type":{"names":["*"]},"optional":true,"defaultvalue":null,"description":"The iterable to base this store off.","name":"iterable"}],"name":"DataStore","longname":"DataStore","kind":"class","scope":"global","undocumented":true,"$longname":"DataStore","$kind":"constructor","$docmaLink":"?api=ps.js#DataStore"}},{"comment":"/**\r\n\t * HTTP options.\r\n\t * @typedef {Object} HTTPOptions\r\n\t * @property {boolean} [secure=true] Whether to use https.\r\n\t */","meta":{"filename":"Static.js","lineno":27,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{}},"description":"HTTP options.","kind":"typedef","name":"HTTPOptions","type":{"names":["Object"]},"properties":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Whether to use https.","name":"secure"}],"longname":"HTTPOptions","scope":"global","$longname":"HTTPOptions","$kind":"typedef","$docmaLink":"?api=ps.js#HTTPOptions"},{"comment":"/**\r\n * Parses incoming data.\r\n */","meta":{"range":[254,3335],"filename":"MessageHandler.js","lineno":9,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100002176","name":"MessageHandler","type":"ClassDeclaration","paramnames":["client"]}},"classdesc":"Parses incoming data.","name":"MessageHandler","longname":"MessageHandler","kind":"class","scope":"global","params":[],"$longname":"MessageHandler","$kind":"class","$docmaLink":"?api=ps.js#MessageHandler","$members":[{"comment":"/**\r\n\t * Returns a promise that resolves when actions matching the criteria are received.\r\n\t * Actions may not be resolved when collected.\r\n\t * @param {ActionAwaitOptions} options The options for the query\r\n\t * @returns {Promise<Action[]>}\r\n\t */","meta":{"range":[2649,3332],"filename":"MessageHandler.js","lineno":92,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100002420","name":"MessageHandler#awaitActions","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null}},"description":"Returns a promise that resolves when actions matching the criteria are received.\rActions may not be resolved when collected.","params":[{"type":{"names":["ActionAwaitOptions"]},"description":"The options for the query","name":"options"}],"returns":[{"type":{"names":["Promise.<Array.<Action>>"]}}],"name":"awaitActions","longname":"MessageHandler#awaitActions","kind":"function","memberof":"MessageHandler","scope":"instance","$longname":"MessageHandler#awaitActions","$kind":"method","$docmaLink":"?api=ps.js#MessageHandler#awaitActions"},{"comment":"/**\r\n\t\t * All items that listen for messages on the handler\r\n\t\t * @type {Map<number, function>}\r\n\t\t */","meta":{"range":[580,607],"filename":"MessageHandler.js","lineno":22,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100002195","name":"this.collectors","type":"NewExpression","value":"","paramnames":[]}},"description":"All items that listen for messages on the handler","type":{"names":["Map.<number, function()>"]},"name":"collectors","longname":"MessageHandler#collectors","kind":"member","memberof":"MessageHandler","scope":"instance","$longname":"MessageHandler#collectors","$kind":"property","$docmaLink":"?api=ps.js#MessageHandler#collectors"},{"comment":"/**\r\n\t * Parse a normal action line from the message body.\r\n\t * @param {string} act The action line to parse.\r\n\t * @param {Room} room The room the action was executed in.\r\n\t * @returns {Action} The resulting action\r\n\t */","meta":{"range":[2122,2396],"filename":"MessageHandler.js","lineno":77,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100002368","name":"MessageHandler#parseAct","type":"MethodDefinition","paramnames":["act","room"]},"vars":{"":null}},"description":"Parse a normal action line from the message body.","params":[{"type":{"names":["string"]},"description":"The action line to parse.","name":"act"},{"type":{"names":["Room"]},"description":"The room the action was executed in.","name":"room"}],"returns":[{"type":{"names":["Action"]},"description":"The resulting action"}],"name":"parseAct","longname":"MessageHandler#parseAct","kind":"function","memberof":"MessageHandler","scope":"instance","$longname":"MessageHandler#parseAct","$kind":"method","$docmaLink":"?api=ps.js#MessageHandler#parseAct"},{"comment":"/**\r\n\t * Parse and run a message from the server.\r\n\t * @param {string} message The message to parse\r\n\t */","meta":{"range":[834,1436],"filename":"MessageHandler.js","lineno":36,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100002207","name":"MessageHandler#parseExec","type":"MethodDefinition","paramnames":["message"]},"vars":{"":null}},"description":"Parse and run a message from the server.","params":[{"type":{"names":["string"]},"description":"The message to parse","name":"message"}],"name":"parseExec","longname":"MessageHandler#parseExec","kind":"function","memberof":"MessageHandler","scope":"instance","$longname":"MessageHandler#parseExec","$kind":"method","$docmaLink":"?api=ps.js#MessageHandler#parseExec"},{"comment":"/**\r\n\t * Parse the top line of a message that tells us the room to use. Not called every message as the line may be omitted.\r\n\t * @param {string} line The room line to parse (must start with `>`)\r\n\t * @returns {?Room}\r\n\t */","meta":{"range":[1667,1894],"filename":"MessageHandler.js","lineno":61,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100002322","name":"MessageHandler#parseRoomLine","type":"MethodDefinition","paramnames":["line"]},"vars":{"":null}},"description":"Parse the top line of a message that tells us the room to use. Not called every message as the line may be omitted.","params":[{"type":{"names":["string"]},"description":"The room line to parse (must start with `>`)","name":"line"}],"returns":[{"type":{"names":["Room"]},"nullable":true}],"name":"parseRoomLine","longname":"MessageHandler#parseRoomLine","kind":"function","memberof":"MessageHandler","scope":"instance","$longname":"MessageHandler#parseRoomLine","$kind":"method","$docmaLink":"?api=ps.js#MessageHandler#parseRoomLine"}],"$constructor":{"comment":"","meta":{"range":[279,721],"filename":"MessageHandler.js","lineno":10,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client","code":{"id":"astnode100002179","name":"MessageHandler","type":"MethodDefinition","paramnames":["client"]},"vars":{"":null}},"undocumented":true,"name":"MessageHandler","longname":"MessageHandler","kind":"class","scope":"global","params":[],"$longname":"MessageHandler","$kind":"constructor","$docmaLink":"?api=ps.js#MessageHandler"}},{"comment":"/**\r\n\t * Check if a given value is an object.\r\n\t * @param {Object} d The value to check.\r\n\t * @returns {boolean}\r\n\t */","meta":{"range":[142,192],"filename":"index.js","lineno":7,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004341","name":"isObject","type":"ArrowFunctionExpression"}},"description":"Check if a given value is an object.","params":[{"type":{"names":["Object"]},"description":"The value to check.","name":"d"}],"returns":[{"type":{"names":["boolean"]}}],"name":"isObject","longname":"module.exports.isObject","kind":"function","memberof":"module.exports","scope":"static","$longname":"module.exports.isObject","$kind":"method","$docmaLink":"?api=ps.js#module.exports.isObject"},{"comment":"/**\r\n\t * Converts anything to an ID. An ID must have only lowercase alphanumeric\r\n\t * characters.\r\n\t * If a string is passed, it will be converted to lowercase and\r\n\t * non-alphanumeric characters will be stripped.\r\n\t * If an object with an ID is passed, its ID will be returned.\r\n\t * Otherwise, an empty string will be returned.\r\n\t *\r\n\t * @param {*} text The text to turn into an id\r\n\t * @returns {string}\r\n\t */","meta":{"range":[611,827],"filename":"index.js","lineno":19,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{"id":"astnode100004352","name":"toId","type":"FunctionExpression","value":"toId"},"vars":{"text":"module.exports.toId~text"}},"description":"Converts anything to an ID. An ID must have only lowercase alphanumeric\rcharacters.\rIf a string is passed, it will be converted to lowercase and\rnon-alphanumeric characters will be stripped.\rIf an object with an ID is passed, its ID will be returned.\rOtherwise, an empty string will be returned.","params":[{"type":{"names":["*"]},"description":"The text to turn into an id","name":"text"}],"returns":[{"type":{"names":["string"]}}],"name":"toId","longname":"module.exports.toId","kind":"function","memberof":"module.exports","scope":"static","$longname":"module.exports.toId","$kind":"method","$docmaLink":"?api=ps.js#module.exports.toId"},{"comment":"/**\r\n * A users rank.\r\n * @typedef {Object} Rank\r\n * @property {String} name The name of the rank.\r\n * @property {String} id The id of the rank.\r\n * @property {String} name The rank's symbol.\r\n * @property {String} type The type of the rank. Either leadership, staff, normal, or punishment.\r\n * @property {Number} order The rank's sidebar position.\r\n */","meta":{"filename":"Static.js","lineno":53,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{}},"description":"A users rank.","kind":"typedef","name":"Rank","type":{"names":["Object"]},"properties":[{"type":{"names":["String"]},"description":"The name of the rank.","name":"name"},{"type":{"names":["String"]},"description":"The id of the rank.","name":"id"},{"type":{"names":["String"]},"description":"The rank's symbol.","name":"name"},{"type":{"names":["String"]},"description":"The type of the rank. Either leadership, staff, normal, or punishment.","name":"type"},{"type":{"names":["Number"]},"description":"The rank's sidebar position.","name":"order"}],"longname":"Rank","scope":"global","$longname":"Rank","$kind":"typedef","$docmaLink":"?api=ps.js#Rank"},{"comment":"/**\r\n * Represents any room on showdown\r\n */","meta":{"range":[103,2227],"filename":"Room.js","lineno":6,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100000981","name":"Room","type":"ClassDeclaration","paramnames":["client","data"]}},"classdesc":"Represents any room on showdown","name":"Room","longname":"Room","kind":"class","scope":"global","params":[],"$longname":"Room","$kind":"class","$docmaLink":"?api=ps.js#Room","$members":[{"comment":"/**\r\n\t\t * The description of the room. Only on public chat rooms.\r\n\t\t * @type {?string}\r\n\t\t */","meta":{"range":[666,701],"filename":"Room.js","lineno":32,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001017","name":"this.description","type":"MemberExpression","value":"data.description","paramnames":[]}},"description":"The description of the room. Only on public chat rooms.","type":{"names":["string"]},"nullable":true,"name":"description","longname":"Room#description","kind":"member","memberof":"Room","scope":"instance","$longname":"Room#description","$kind":"property","$docmaLink":"?api=ps.js#Room#description"},{"comment":"/**\r\n\t\t * The unique ID of the room\r\n\t\t * Used to target the room in commands\r\n\t\t * @type {string}\r\n\t\t */","meta":{"range":[417,434],"filename":"Room.js","lineno":20,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001001","name":"this.id","type":"MemberExpression","value":"data.id","paramnames":[]}},"description":"The unique ID of the room\rUsed to target the room in commands","type":{"names":["string"]},"name":"id","longname":"Room#id","kind":"member","memberof":"Room","scope":"instance","$longname":"Room#id","$kind":"property","$docmaLink":"?api=ps.js#Room#id"},{"comment":"/**\r\n\t\t * Whether the client is in the room\r\n\t\t * @type {boolean}\r\n\t\t */","meta":{"range":[784,808],"filename":"Room.js","lineno":38,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001025","name":"this.initialized","type":"Literal","value":false,"paramnames":[]}},"description":"Whether the client is in the room","type":{"names":["boolean"]},"name":"initialized","longname":"Room#initialized","kind":"member","memberof":"Room","scope":"instance","$longname":"Room#initialized","$kind":"property","$docmaLink":"?api=ps.js#Room#initialized"},{"comment":"/**\r\n\t * Leave the room\r\n\t */","meta":{"range":[1456,1617],"filename":"Room.js","lineno":69,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001088","name":"Room#join","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Leave the room","name":"join","longname":"Room#join","kind":"function","memberof":"Room","scope":"instance","params":[],"$longname":"Room#join","$kind":"method","$docmaLink":"?api=ps.js#Room#join"},{"comment":"/**\r\n\t * Leave the room\r\n\t */","meta":{"range":[1654,1815],"filename":"Room.js","lineno":77,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001123","name":"Room#leave","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"Leave the room","name":"leave","longname":"Room#leave","kind":"function","memberof":"Room","scope":"instance","params":[],"$longname":"Room#leave","$kind":"method","$docmaLink":"?api=ps.js#Room#leave"},{"comment":"/**\r\n\t\t * The name of the room. Null for some uninitialised rooms.\r\n\t\t * @type {?string}\r\n\t\t */","meta":{"range":[540,561],"filename":"Room.js","lineno":26,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001009","name":"this.name","type":"MemberExpression","value":"data.name","paramnames":[]}},"description":"The name of the room. Null for some uninitialised rooms.","type":{"names":["string"]},"nullable":true,"name":"name","longname":"Room#name","kind":"member","memberof":"Room","scope":"instance","$longname":"Room#name","$kind":"property","$docmaLink":"?api=ps.js#Room#name"},{"comment":"/**\r\n\t * Send a message to the room\r\n\t * @param {string} message The text to send\r\n\t */","meta":{"range":[1263,1419],"filename":"Room.js","lineno":61,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001049","name":"Room#send","type":"MethodDefinition","paramnames":["message"]},"vars":{"":null}},"description":"Send a message to the room","params":[{"type":{"names":["string"]},"description":"The text to send","name":"message"}],"name":"send","longname":"Room#send","kind":"function","memberof":"Room","scope":"instance","$longname":"Room#send","$kind":"method","$docmaLink":"?api=ps.js#Room#send"},{"comment":"/**\r\n\t\t * The type of the room, either:\r\n\t\t * * `chat` - a normal chat room\r\n\t\t * * `battle` - a game room\r\n\t\t * * `unknown` - could be any type\r\n\t\t * @type {string}\r\n\t\t */","meta":{"range":[991,1036],"filename":"Room.js","lineno":47,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001031","name":"this.type","type":"ConditionalExpression","value":"","paramnames":[]}},"description":"The type of the room, either:\r* `chat` - a normal chat room\r* `battle` - a game room\r* `unknown` - could be any type","type":{"names":["string"]},"name":"type","longname":"Room#type","kind":"member","memberof":"Room","scope":"instance","$longname":"Room#type","$kind":"property","$docmaLink":"?api=ps.js#Room#type"}],"$constructor":{"comment":"","meta":{"range":[118,1168],"filename":"Room.js","lineno":7,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100000984","name":"Room","type":"MethodDefinition","paramnames":["client","data"]},"vars":{"":null}},"undocumented":true,"name":"Room","longname":"Room","kind":"class","scope":"global","params":[],"$longname":"Room","$kind":"constructor","$docmaLink":"?api=ps.js#Room"}},{"comment":"/**\r\n\t * Data that resolves to give a Room object. This can be:\r\n\t * * A Room object\r\n\t * * A String (room id)\r\n\t * @typedef {Room|string} RoomResolvable\r\n\t */","meta":{"filename":"RoomStore.js","lineno":9,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{}},"description":"Data that resolves to give a Room object. This can be:\r* A Room object\r* A String (room id)","kind":"typedef","name":"RoomResolvable","type":{"names":["Room","string"]},"longname":"RoomResolvable","scope":"global","$longname":"RoomResolvable","$kind":"typedef","$docmaLink":"?api=ps.js#RoomResolvable"},{"comment":"","meta":{"range":[125,194],"filename":"RoomStore.js","lineno":5,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{"id":"astnode100002827","name":"RoomStore","type":"MethodDefinition","paramnames":["client","iterable"]},"vars":{"":null}},"undocumented":true,"name":"RoomStore","longname":"RoomStore","kind":"class","scope":"global","params":[],"$longname":"RoomStore","$kind":"constructor","$docmaLink":"?api=ps.js#RoomStore"},{"comment":"/**\r\n\t * Get a room if it exists in the store, else create it as an uninitialized room.\r\n\t * <warn>This should only be used if the id is confirmed to be a room since a new room class is created\r\n\t * @param {string} room - The room id to create\r\n\t * @returns {Room}\r\n\t */","meta":{"range":[1029,1243],"filename":"RoomStore.js","lineno":39,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{"id":"astnode100002855","name":"RoomStore#getOrAdd","type":"MethodDefinition","paramnames":["room"]},"vars":{"":null}},"description":"Get a room if it exists in the store, else create it as an uninitialized room.\r<warn>This should only be used if the id is confirmed to be a room since a new room class is created","params":[{"type":{"names":["string"]},"description":"The room id to create","name":"room"}],"returns":[{"type":{"names":["Room"]}}],"name":"getOrAdd","longname":"RoomStore#getOrAdd","kind":"function","memberof":"RoomStore","scope":"instance","$longname":"RoomStore#getOrAdd","$kind":"method","$docmaLink":"?api=ps.js#RoomStore#getOrAdd"},{"comment":"/**\r\n\t * The main room on the server.\r\n\t * @value {Room}\r\n\t */","meta":{"range":[1315,1379],"filename":"RoomStore.js","lineno":56,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{"id":"astnode100002894","name":"RoomStore#lobby","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"The main room on the server.","tags":[{"originalTitle":"value","title":"value","text":"{Room}","value":"{Room}"}],"name":"lobby","longname":"RoomStore#lobby","kind":"member","memberof":"RoomStore","scope":"instance","params":[],"$longname":"RoomStore#lobby","$kind":"property","$docmaLink":"?api=ps.js#RoomStore#lobby"},{"comment":"/**\r\n\t * Resolves a RoomResolvable to a Room object.\r\n\t * @method resolve\r\n\t * @memberof RoomStore\r\n\t * @instance\r\n\t * @param {RoomResolvable} room The room resolvable to identify\r\n\t * @returns {?Room}\r\n\t */","meta":{"filename":"RoomStore.js","lineno":16,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{}},"description":"Resolves a RoomResolvable to a Room object.","kind":"function","name":"resolve","memberof":"RoomStore","scope":"instance","params":[{"type":{"names":["RoomResolvable"]},"description":"The room resolvable to identify","name":"room"}],"returns":[{"type":{"names":["Room"]},"nullable":true}],"longname":"RoomStore#resolve","$longname":"RoomStore#resolve","$kind":"method","$docmaLink":"?api=ps.js#RoomStore#resolve"},{"comment":"/**\r\n\t * Join a room not in the store by id\r\n\t * @param {string} roomid The id of the room to join\r\n\t */","meta":{"range":[682,751],"filename":"RoomStore.js","lineno":29,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{"id":"astnode100002839","name":"RoomStore#tryJoin","type":"MethodDefinition","paramnames":["roomid"]},"vars":{"":null}},"description":"Join a room not in the store by id","params":[{"type":{"names":["string"]},"description":"The id of the room to join","name":"roomid"}],"name":"tryJoin","longname":"RoomStore#tryJoin","kind":"function","memberof":"RoomStore","scope":"instance","$longname":"RoomStore#tryJoin","$kind":"method","$docmaLink":"?api=ps.js#RoomStore#tryJoin"},{"comment":"/**\r\n * Interacts with showdown's websockets.\r\n */","meta":{"range":[138,1593],"filename":"SocketHandler.js","lineno":7,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client\\ws","code":{"id":"astnode100002565","name":"SocketHandler","type":"ClassDeclaration","paramnames":["client"]}},"classdesc":"Interacts with showdown's websockets.","name":"SocketHandler","longname":"SocketHandler","kind":"class","scope":"global","params":[],"$longname":"SocketHandler","$kind":"class","$docmaLink":"?api=ps.js#SocketHandler","$members":[{"comment":"/**\r\n\t\t * Whether the socket has connected\r\n\t\t * @type {boolean}\r\n\t\t */","meta":{"range":[615,634],"filename":"SocketHandler.js","lineno":27,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client\\ws","code":{"id":"astnode100002610","name":"this.active","type":"Literal","value":false,"paramnames":[]}},"description":"Whether the socket has connected","type":{"names":["boolean"]},"name":"active","longname":"SocketHandler#active","kind":"member","memberof":"SocketHandler","scope":"instance","$longname":"SocketHandler#active","$kind":"property","$docmaLink":"?api=ps.js#SocketHandler#active"},{"comment":"/**\r\n\t\t * The websocket client\r\n\t\t * @type {WebSocket}\r\n\t\t * @readonly\r\n\t\t */","meta":{"range":[439,533],"filename":"SocketHandler.js","lineno":21,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client\\ws","code":{"id":"astnode100002584","name":"this.ws","type":"NewExpression","value":"","paramnames":[]}},"description":"The websocket client","type":{"names":["WebSocket"]},"readonly":true,"name":"ws","longname":"SocketHandler#ws","kind":"member","memberof":"SocketHandler","scope":"instance","$longname":"SocketHandler#ws","$kind":"property","$docmaLink":"?api=ps.js#SocketHandler#ws"}],"$constructor":{"comment":"","meta":{"range":[162,761],"filename":"SocketHandler.js","lineno":8,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\client\\ws","code":{"id":"astnode100002568","name":"SocketHandler","type":"MethodDefinition","paramnames":["client"]},"vars":{"":null}},"undocumented":true,"name":"SocketHandler","longname":"SocketHandler","kind":"class","scope":"global","params":[],"$longname":"SocketHandler","$kind":"constructor","$docmaLink":"?api=ps.js#SocketHandler"}},{"comment":"/**\r\n * Represents any user on showdown\r\n */","meta":{"range":[174,2285],"filename":"User.js","lineno":8,"columnno":0,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001255","name":"User","type":"ClassDeclaration","paramnames":["client","data"]}},"classdesc":"Represents any user on showdown","name":"User","longname":"User","kind":"class","scope":"global","params":[],"$longname":"User","$kind":"class","$docmaLink":"?api=ps.js#User","$members":[{"comment":"/**\r\n\t\t * The avatar of the user.\r\n\t\t * @type {?string}\r\n\t\t */","meta":{"range":[1158,1191],"filename":"User.js","lineno":56,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001328","name":"this.avatar","type":"LogicalExpression","value":"","paramnames":[]}},"description":"The avatar of the user.","type":{"names":["string"]},"nullable":true,"name":"avatar","longname":"User#avatar","kind":"member","memberof":"User","scope":"instance","$longname":"User#avatar","$kind":"property","$docmaLink":"?api=ps.js#User#avatar"},{"comment":"/**\r\n\t\t * The unique ID of the user\r\n\t\t * Used to target the user in commands\r\n\t\t * @type {string}\r\n\t\t */","meta":{"range":[798,815],"filename":"User.js","lineno":38,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001300","name":"this.id","type":"MemberExpression","value":"data.id","paramnames":[]}},"description":"The unique ID of the user\rUsed to target the user in commands","type":{"names":["string"]},"name":"id","longname":"User#id","kind":"member","memberof":"User","scope":"instance","$longname":"User#id","$kind":"property","$docmaLink":"?api=ps.js#User#id"},{"comment":"/**\r\n\t * Check if the user is in the given room.\r\n\t * @param {Room|string} room The room to check.\r\n\t * @returns {boolean}\r\n\t */","meta":{"range":[1915,2013],"filename":"User.js","lineno":82,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001435","name":"User#isInRoom","type":"MethodDefinition","paramnames":["room"]},"vars":{"":null}},"description":"Check if the user is in the given room.","params":[{"type":{"names":["Room","string"]},"description":"The room to check.","name":"room"}],"returns":[{"type":{"names":["boolean"]}}],"name":"isInRoom","longname":"User#isInRoom","kind":"function","memberof":"User","scope":"instance","$longname":"User#isInRoom","$kind":"method","$docmaLink":"?api=ps.js#User#isInRoom"},{"comment":"/**\r\n\t\t * The name of the user. Null if from a source such as user lookup as we are not given the name.\r\n\t\t * @type {?string}\r\n\t\t */","meta":{"range":[958,987],"filename":"User.js","lineno":44,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001308","name":"this.name","type":"LogicalExpression","value":"","paramnames":[]}},"description":"The name of the user. Null if from a source such as user lookup as we are not given the name.","type":{"names":["string"]},"nullable":true,"name":"name","longname":"User#name","kind":"member","memberof":"User","scope":"instance","$longname":"User#name","$kind":"property","$docmaLink":"?api=ps.js#User#name"},{"comment":"/**\r\n\t\t * The rank of the user.\r\n\t\t * @type {?Rank}\r\n\t\t */","meta":{"range":[1056,1085],"filename":"User.js","lineno":50,"columnno":2,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001318","name":"this.rank","type":"LogicalExpression","value":"","paramnames":[]}},"description":"The rank of the user.","type":{"names":["Rank"]},"nullable":true,"name":"rank","longname":"User#rank","kind":"member","memberof":"User","scope":"instance","$longname":"User#rank","$kind":"property","$docmaLink":"?api=ps.js#User#rank"},{"comment":"/**\r\n\t * All rooms the user is in\r\n\t * @returns {?RoomStore}\r\n\t */","meta":{"range":[2087,2282],"filename":"User.js","lineno":91,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001458","name":"User#rooms","type":"MethodDefinition","paramnames":[]},"vars":{"":null}},"description":"All rooms the user is in","returns":[{"type":{"names":["RoomStore"]},"nullable":true}],"name":"rooms","longname":"User#rooms","kind":"member","memberof":"User","scope":"instance","params":[],"$longname":"User#rooms","$kind":"property","$docmaLink":"?api=ps.js#User#rooms"}],"$constructor":{"comment":"","meta":{"range":[189,1196],"filename":"User.js","lineno":9,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\classes","code":{"id":"astnode100001258","name":"User","type":"MethodDefinition","paramnames":["client","data"]},"vars":{"":null}},"undocumented":true,"name":"User","longname":"User","kind":"class","scope":"global","params":[],"$longname":"User","$kind":"constructor","$docmaLink":"?api=ps.js#User"}},{"comment":"/**\r\n\t * Data that resolves to give a User object. This can be:\r\n\t * * A User object\r\n\t * * A String (user id or user name string)\r\n\t * @typedef {Room|string} UserResolvable\r\n\t */","meta":{"filename":"UserStore.js","lineno":10,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{}},"description":"Data that resolves to give a User object. This can be:\r* A User object\r* A String (user id or user name string)","kind":"typedef","name":"UserResolvable","type":{"names":["Room","string"]},"longname":"UserResolvable","scope":"global","$longname":"UserResolvable","$kind":"typedef","$docmaLink":"?api=ps.js#UserResolvable"},{"comment":"","meta":{"range":[163,232],"filename":"UserStore.js","lineno":6,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{"id":"astnode100002976","name":"UserStore","type":"MethodDefinition","paramnames":["client","iterable"]},"vars":{"":null}},"undocumented":true,"name":"UserStore","longname":"UserStore","kind":"class","scope":"global","params":[],"$longname":"UserStore","$kind":"constructor","$docmaLink":"?api=ps.js#UserStore"},{"comment":"/**\r\n\t * Get a user if it exists in the store, else create it from name string.\r\n\t * <warn>This should only be used if the name string is confirmed to be a user since a new user instance is created\r\n\t * @param {string} nameString - The username to create\r\n\t * @returns {User}\r\n\t */","meta":{"range":[1006,1245],"filename":"UserStore.js","lineno":34,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{"id":"astnode100003016","name":"UserStore#getOrAdd","type":"MethodDefinition","paramnames":["nameString"]},"vars":{"":null}},"description":"Get a user if it exists in the store, else create it from name string.\r<warn>This should only be used if the name string is confirmed to be a user since a new user instance is created","params":[{"type":{"names":["string"]},"description":"The username to create","name":"nameString"}],"returns":[{"type":{"names":["User"]}}],"name":"getOrAdd","longname":"UserStore#getOrAdd","kind":"function","memberof":"UserStore","scope":"instance","$longname":"UserStore#getOrAdd","$kind":"method","$docmaLink":"?api=ps.js#UserStore#getOrAdd"},{"comment":"/**\r\n\t * Resolves a UserResolvable to a User object.\r\n\t * @param {RoomResolvable} user The user resolvable to identify\r\n\t * @returns {?User}\r\n\t */","meta":{"range":[570,717],"filename":"UserStore.js","lineno":22,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\datastores","code":{"id":"astnode100002988","name":"UserStore#resolve","type":"MethodDefinition","paramnames":["user"]},"vars":{"":null}},"description":"Resolves a UserResolvable to a User object.","params":[{"type":{"names":["RoomResolvable"]},"description":"The user resolvable to identify","name":"user"}],"returns":[{"type":{"names":["User"]},"nullable":true}],"name":"resolve","longname":"UserStore#resolve","kind":"function","memberof":"UserStore","scope":"instance","$longname":"UserStore#resolve","$kind":"method","$docmaLink":"?api=ps.js#UserStore#resolve"},{"comment":"/**\r\n\t * WebSocket options.\r\n\t * @typedef {Object} WebsocketOptions\r\n\t * @property {boolean} [secure=true] Whether to use wss.\r\n\t */","meta":{"filename":"Static.js","lineno":19,"columnno":1,"path":"F:\\Josh\\Code\\WebstormProjects\\ps-js\\src\\util","code":{}},"description":"WebSocket options.","kind":"typedef","name":"WebsocketOptions","type":{"names":["Object"]},"properties":[{"type":{"names":["boolean"]},"optional":true,"defaultvalue":true,"description":"Whether to use wss.","name":"secure"}],"longname":"WebsocketOptions","scope":"global","$longname":"WebsocketOptions","$kind":"typedef","$docmaLink":"?api=ps.js#WebsocketOptions"}],"symbols":["Action","Action#client","Action#data","Action.isRoomless","Action#name","Action#parse","Action#removeMessageName","Action#resolve","Action#results","Action#room","Action#run","ActionAwaitOptions","ActionChallstr","ActionManager","ActionRoomInit","ActionRoomTitle","ActionRoomUserList","ActionRoomUserList#run","ActionUpdateUser","BaseClient","BaseClient#clearImmediate","BaseClient#clearInterval","BaseClient#clearTimeout","BaseClient#destroy","BaseClient#options","BaseClient#setImmediate","BaseClient#setInterval","BaseClient#setTimeout","Client","Client#challstr","Client#clearImmediate","Client#clearInterval","Client#clearTimeout","Client#destroy","Client#error","Client#event:actionRun","Client#event:challstr","Client#event:clientAvatarChange","Client#event:clientUsernameChange","Client#event:debug","Client#event:disconnect","Client#event:raw","Client#event:ready","Client#event:roomInit","Client#event:roomLogMessage","Client#event:roomTitle","Client#event:roomUserUpdate","Client#event:warn","Client#handleMessage","Client#loggedIn","Client#login","Client#messageHandler","Client#onReady","Client#options","Client#ranks","Client#ready","Client#rooms","Client#sendToGlobal","Client#setImmediate","Client#setInterval","Client#setTimeout","Client#user","Client#users","Client#warn","Client#ws","ClientOptions","Collection","Collection#array","Collection#clone","Collection#concat","Collection#each","Collection#equals","Collection#every","Collection#filter","Collection#find","Collection#findKey","Collection#first","Collection#firstKey","Collection#keyArray","Collection#last","Collection#lastKey","Collection#map","Collection#partition","Collection#random","Collection#randomKey","Collection#reduce","Collection#some","Collection#sort","Collection#sweep","Collection#tap","DataStore","DataStore#array","DataStore#clone","DataStore#concat","DataStore#each","DataStore#equals","DataStore#every","DataStore#filter","DataStore#find","DataStore#findKey","DataStore#first","DataStore#firstKey","DataStore#keyArray","DataStore#last","DataStore#lastKey","DataStore#map","DataStore#partition","DataStore#random","DataStore#randomKey","DataStore#reduce","DataStore#resolve","DataStore#some","DataStore#sort","DataStore#sweep","DataStore#tap","HTTPOptions","MessageHandler","MessageHandler#awaitActions","MessageHandler#collectors","MessageHandler#parseAct","MessageHandler#parseExec","MessageHandler#parseRoomLine","module.exports.isObject","module.exports.toId","Rank","Room","Room#description","Room#id","Room#initialized","Room#join","Room#leave","Room#name","Room#send","Room#type","RoomResolvable","RoomStore","RoomStore#getOrAdd","RoomStore#lobby","RoomStore#resolve","RoomStore#tryJoin","SocketHandler","SocketHandler#active","SocketHandler#ws","User","User#avatar","User#id","User#isInRoom","User#name","User#rank","User#rooms","UserResolvable","UserStore","UserStore#getOrAdd","UserStore#resolve","WebsocketOptions"]}},"app":{"title":"ps.js","base":"/","entrance":"content:readme","routing":{"method":"query","caseSensitive":true},"server":"github","meta":null,"favicon":""},"template":{"name":"docma-template-zebra","description":"Zebra - Default template for Docma. https://github.com/onury/docma","version":"2.2.0","supportedDocmaVersion":">=2.0.0","author":"Onur Yıldırım","license":"MIT","mainHTML":"index.html","options":{"title":"ps.js","logo":null,"sidebar":{"enabled":true,"outline":"tree","collapsed":false,"toolbar":true,"itemsFolded":false,"itemsOverflow":"crop","badges":true,"search":true,"animations":true},"symbols":{"autoLink":true,"params":"list","enums":"list","props":"list","meta":false},"contentView":{"bookmarks":false},"navbar":{"enabled":true,"fixed":true,"dark":false,"animations":true,"menu":[{"label":"Readme","href":"?content=readme"},{"label":"Documentation","href":"?api=ps.js","iconClass":"ico-book"},{"label":"GitHub","href":"https://github.com/Spindlyskit/ps.js/","target":"_blank","iconClass":"ico-md ico-github"}]}}},"partials":{"api":"docma-api","content":"docma-content","notFound":"docma-404"},"elementID":"docma-main","contentElementID":"docma-content","defaultApiName":"_def_","logsEnabled":false}));

!function(){"use strict";var i="path"===docma.app.routing.method;function n(a){return(a.params[1]||"").replace(/\/$/,"")}function a(a,e){var o=n(a)||docma._.defaultApiName,t=docma.createRoute(o,DocmaWeb.Route.Type.API);if(!t||!t.exists())return e();t.apply()}docma.app.base&&page.base(docma.app.base),page.redirect("(/)?"+docma.template.main,""),i&&(page("(/)?api",a),page("(/)?api/*",a),page("(/)?*",function(a,e){var o=n(a),t=docma.createRoute(o,DocmaWeb.Route.Type.CONTENT);if(!t||!t.exists())return e();t.apply()})),page("(/)?",function(c,r){(function(){if(i){var a=sessionStorage.getItem("redirectPath")||null;if(a)return sessionStorage.removeItem("redirectPath"),docma.info("Redirecting to:",a),page.redirect(a),!0}return!1})()||setTimeout(function(){var a,e,o,t=(e=c.querystring,o=e||window.location.search,/^[?&]/.test(o)&&(o=o.slice(1)),o||null);if(i){if(t)return r();a=docma._.appEntranceRI}else docma.log("Query-string:",t),a=t?docma.createRouteFromQuery(t):docma._.appEntranceRI;if(!a||!a.exists())return r();function n(){docma._trigger(DocmaWeb.Event.Navigate,[a])}a.isCurrent()?n():a.apply(function(a){200===a&&n()})},100)}),page("*",function(a){docma.warn("Unknown Route:",a.path),docma.createRoute(null).apply()}),docma.info("Docma SPA Configuration:"),docma.info("App Title:          ",docma.app.title),docma.info("Routing Method:     ",docma.app.routing.method),docma.info("App Server:         ",docma.app.server),docma.info("Base Path:          ",docma.app.base),docma.info("Entrance Route ID:  ",docma.app.entrance),window.onload=function(){docma._.initialLoad=!0,docma._.appEntranceRI=docma.createRouteFromID(docma.app.entrance),page.start({click:!0,popstate:!0,dispatch:!0,hashbang:!1,decodeURLComponents:!0}),docma.info("Docma SPA loaded!")}}();